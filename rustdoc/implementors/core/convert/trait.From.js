(function() {var implementors = {};
implementors["sim"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sim/mechanics/parking/struct.NormalParkingSimState.html\" title=\"struct sim::mechanics::parking::NormalParkingSimState\">NormalParkingSimState</a>&gt; for <a class=\"enum\" href=\"sim/mechanics/parking/enum.ParkingSimState.html\" title=\"enum sim::mechanics::parking::ParkingSimState\">ParkingSimState</a>","synthetic":false,"types":["sim::mechanics::parking::ParkingSimState"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sim/mechanics/parking/struct.InfiniteParkingSimState.html\" title=\"struct sim::mechanics::parking::InfiniteParkingSimState\">InfiniteParkingSimState</a>&gt; for <a class=\"enum\" href=\"sim/mechanics/parking/enum.ParkingSimState.html\" title=\"enum sim::mechanics::parking::ParkingSimState\">ParkingSimState</a>","synthetic":false,"types":["sim::mechanics::parking::ParkingSimState"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"geom/time/struct.Time.html\" title=\"struct geom::time::Time\">Time</a>&gt; for <a class=\"struct\" href=\"sim/pandemic/struct.AnyTime.html\" title=\"struct sim::pandemic::AnyTime\">AnyTime</a>","synthetic":false,"types":["sim::pandemic::AnyTime"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>&gt; for <a class=\"struct\" href=\"sim/pandemic/struct.AnyTime.html\" title=\"struct sim::pandemic::AnyTime\">AnyTime</a>","synthetic":false,"types":["sim::pandemic::AnyTime"]}];
implementors["widgetry"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"widgetry/struct.Color.html\" title=\"struct widgetry::Color\">Color</a>&gt; for <a class=\"enum\" href=\"widgetry/enum.Fill.html\" title=\"enum widgetry::Fill\">Fill</a>","synthetic":false,"types":["widgetry::color::Fill"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"widgetry/struct.Texture.html\" title=\"struct widgetry::Texture\">Texture</a>&gt; for <a class=\"enum\" href=\"widgetry/enum.Fill.html\" title=\"enum widgetry::Fill\">Fill</a>","synthetic":false,"types":["widgetry::color::Fill"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"widgetry/enum.Key.html\" title=\"enum widgetry::Key\">Key</a>&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"widgetry/enum.MultiKey.html\" title=\"enum widgetry::MultiKey\">MultiKey</a>&gt;","synthetic":false,"types":["core::option::Option"]},{"text":"impl&lt;F:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"widgetry/enum.Fill.html\" title=\"enum widgetry::Fill\">Fill</a>&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>F, <a class=\"struct\" href=\"geom/polygon/struct.Polygon.html\" title=\"struct geom::polygon::Polygon\">Polygon</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;&gt; for <a class=\"struct\" href=\"widgetry/struct.GeomBatch.html\" title=\"struct widgetry::GeomBatch\">GeomBatch</a>","synthetic":false,"types":["widgetry::geom::GeomBatch"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;LogicalPosition&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>&gt;&gt; for <a class=\"struct\" href=\"widgetry/struct.ScreenPt.html\" title=\"struct widgetry::ScreenPt\">ScreenPt</a>","synthetic":false,"types":["widgetry::screen_geom::ScreenPt"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;LogicalSize&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>&gt;&gt; for <a class=\"struct\" href=\"widgetry/struct.ScreenDims.html\" title=\"struct widgetry::ScreenDims\">ScreenDims</a>","synthetic":false,"types":["widgetry::screen_geom::ScreenDims"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"widgetry/struct.ScreenDims.html\" title=\"struct widgetry::ScreenDims\">ScreenDims</a>&gt; for LogicalSize&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>&gt;","synthetic":false,"types":["winit::dpi::LogicalSize"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"widgetry/struct.EdgeInsets.html\" title=\"struct widgetry::EdgeInsets\">EdgeInsets</a>","synthetic":false,"types":["widgetry::widgets::EdgeInsets"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"widgetry/struct.EdgeInsets.html\" title=\"struct widgetry::EdgeInsets\">EdgeInsets</a>&gt; for Rect&lt;Dimension&gt;","synthetic":false,"types":["stretch::geometry::Rect"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()