var searchIndex = JSON.parse('{\
"abstio":{"doc":"A/B Street organizes data files in a particular way. This …","t":[3,3,3,3,3,3,0,0,12,12,12,12,12,5,0,5,5,12,5,5,5,0,5,5,12,12,0,0,12,5,5,5,12,5,5,5,5,5,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,5,5,5,12,5,5,12,12,12,5,5,5,5,3,3,3,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,5,11,11,5,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,11,11,5,11,11,5,11,12,5,11,11,12,5,5,5,5,11,12,12,11,11,5,12,12,11,11,11,5,5,5,5],"n":["CityName","DataPacks","Entry","FileWithProgress","Manifest","MapName","abst_data","abst_paths","checksum","city","city","compressed_size_bytes","country","delete_file","download","download_bytes","download_to_file","entries","file_exists","find_next_file","find_prev_file","http","http_get","http_post","inner","input","io","io_native","last_printed_at","list_all_objects","list_dir","load_all_objects","map","maybe_read_binary","maybe_read_json","must_read_object","parse_scenario_path","path","path","path_all_edits","path_all_ltn_proposals","path_all_saves","path_all_scenarios","path_camera_state","path_edits","path_ltn_proposals","path_player","path_popdat","path_prebaked_results","path_raw_map","path_save","path_scenario","path_shared_input","path_trips","print_download_progress","processed_bytes","read_binary","read_json","read_object","runtime","slurp_bytes","slurp_file","started_at","total_bytes","uncompressed_size_bytes","write_binary","write_file","write_json","write_raw","DataPacks","Entry","Manifest","all_data_packs","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","checksum","compressed_size_bytes","deserialize","deserialize","deserialize","entries","filter","from","from","from","get_entry","input","into","into","into","is_file_part_of_huge_seattle","load","load_or_create","path_to_city","runtime","save","serialize","serialize","serialize","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uncompressed_size_bytes","CityName","MapName","ROOT_DIR","ROOT_PLAYER_DIR","__private_field","__private_field","as_any","as_filename","blank","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","city","city","clone","clone","clone_box","clone_into","clone_into","cmp","cmp","country","deref","deref","describe","describe","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from","from_city","from_path","input_path","into","into","into","into","list_all_cities_from_importer_config","list_all_cities_from_manifest","list_all_cities_locally","list_all_cities_merged","list_all_maps_from_manifest","list_all_maps_in_city_from_importer_config","list_all_maps_in_city_from_manifest","list_all_maps_in_city_locally","list_all_maps_in_city_merged","list_all_maps_locally","list_all_maps_merged","map","ne","ne","new","new","parse","parse_scenario_path","partial_cmp","partial_cmp","path","path","path_all_edits","path_all_ltn_proposals","path_all_saves","path_all_scenarios","path_camera_state","path_edits","path_ltn_proposals","path_player","path_popdat","path_prebaked_results","path_raw_map","path_save","path_scenario","path_shared_input","path_trips","seattle","seattle","serialize","serialize","to_data_pack_name","to_owned","to_owned","to_path","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","uses_metric","download_bytes","download_to_file","print_download_progress","http_get","http_post","find_next_file","find_prev_file","list_all_objects","load_all_objects","maybe_read_json","must_read_object","read_binary","read_json","read_object","FileWithProgress","borrow","borrow_mut","delete_file","events","events_and_raw","file_exists","from","inner","inner_slurp_file","into","keys","last_printed_at","list_dir","maybe_read_binary","maybe_write_binary","maybe_write_json","new","path","processed_bytes","read","read_line","slurp_file","started_at","total_bytes","try_from","try_into","type_id","write_binary","write_file","write_json","write_raw"],"q":["abstio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","abstio::abst_data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","abstio::abst_paths","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","abstio::download","","","abstio::http","","abstio::io","","","","","","","","","abstio::io_native","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A single city is identified using this.","Player-chosen groups of files to opt into downloading","A single file","","A list of all canonical data files for A/B Street that’…","A single map is identified using this.","","Generate paths for different A/B Street files","md5sum of the file","The name of the city, in filename-friendly form – for …","","Compressed size in bytes","A two letter lowercase country code, from …","Idempotent","","Downloads bytes from a URL. This must be called with a …","Download a file from a URL. This must be called with a …","Keyed by path, starting with “data/”","","","Keeps file extensions","","Performs an HTTP GET request and returns the raw response. …","Performs an HTTP POST request and returns the response.","","A list of cities to download for running the map importer.","","Normal file IO using the filesystem","","Just list all things from a directory, return sorted by …","Returns full paths","Load all serialized things from a directory, return sorted …","The name of the map within the city, in filename-friendly …","","","May be a JSON or binary file. Panics on failure.","Extract the map and scenario name from a path. Crashes if …","","","","","","","","","","","","","","","","","","Print download progress to STDOUT. Pass this the receiver, …","","","","May be a JSON or binary file","A list of cities to download for using in A/B Street. …","An adapter for widgetry::Settings::read_svg to read SVGs …","","","","Uncompressed size in bytes. Because we have some massive …","","Returns path on success","","","Player-chosen groups of files to opt into downloading","A single file","A list of all canonical data files for A/B Street that’…","Fill out all data packs based on the local manifest.","","","","","","","md5sum of the file","Compressed size in bytes","","","","Keyed by path, starting with “data/”","Removes entries from the Manifest to match the DataPacks …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Look up an entry.","A list of cities to download for running the map importer.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Because there are so many Seattle maps and they get …","","Load the player’s config for what files to download, or …","If an entry’s path is system data, return the city.","A list of cities to download for using in A/B Street. …","Saves the player’s config for what files to download.","","","","","","","","","","","","","Uncompressed size in bytes. Because we have some massive …","A single city is identified using this.","A single map is identified using this.","","","","","","Stringify the map name for filenames.","","","","","","","","","","The name of the city, in filename-friendly form – for …","","","","","","","","","A two letter lowercase country code, from …","","","Stringify the city name for debug messages. Don’t …","Stringify the map name for debug messages. Don’t …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a MapName from a city and map within that city.","Transforms a path to a map back to a MapName. Returns <code>None</code> …","Constructs the path to some city-scoped data/input.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns all city names based on importer config.","Returns all city names based on the manifest of available …","Returns all city names available locally.","Returns all city names either available locally or based …","Returns all maps from all cities based on the manifest of …","Returns all maps in a city based on importer config.","Returns all maps from one city based on the manifest of …","Returns all maps from one city that’re available locally.","Returns all maps from one city that’re available either …","Returns all maps from all cities available locally.","Returns all maps from all cities either available locally …","The name of the map within the city, in filename-friendly …","","","Create a CityName from a country code and city.","Create a MapName from a country code, city, and map name.","Parses a CityName from something like “gb/london”; the …","Extract the map and scenario name from a path. Crashes if …","","","","Returns the filesystem path to this map.","","","","","","","","","","","","","","","","Convenient constructor for the main city of the game.","Convenient constructor for the main city of the game.","","","Returns the string to opt into runtime or input files for …","","","Expresses the city as a path, like “gb/london”; the …","","","","","","","","","","","","","Should metric units be used by default for this map? …","Downloads bytes from a URL. This must be called with a …","Download a file from a URL. This must be called with a …","Print download progress to STDOUT. Pass this the receiver, …","Performs an HTTP GET request and returns the raw response. …","Performs an HTTP POST request and returns the response.","","Keeps file extensions","Just list all things from a directory, return sorted by …","Load all serialized things from a directory, return sorted …","","May be a JSON or binary file. Panics on failure.","","","May be a JSON or binary file","","","","Idempotent","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","Returns full paths","","","","Also hands back a callback that’ll add the final result …","","","","","","","","","","","","Returns path on success","",""],"i":[0,0,0,0,0,0,0,0,20,21,14,20,21,0,0,0,0,18,0,0,0,0,0,0,35,17,0,0,35,0,0,0,14,0,0,0,0,0,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,0,0,0,17,0,0,35,35,20,0,0,0,0,0,0,0,17,18,20,17,18,20,17,20,20,18,20,17,18,18,18,20,17,18,17,18,20,17,18,18,17,18,17,17,18,20,17,18,20,17,18,20,17,18,20,17,20,0,0,0,0,28,29,14,14,14,28,29,21,14,28,29,21,14,21,14,21,14,14,21,14,21,14,21,28,29,21,14,21,14,21,14,21,14,21,14,28,29,21,14,14,14,21,28,29,21,14,21,21,21,21,14,21,14,14,14,14,14,14,21,14,21,14,21,0,21,14,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,14,21,14,14,21,14,21,28,29,21,14,28,29,21,14,28,29,21,14,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,35,0,35,35,0,35,35,0,35,35,35,0,0,0,0,35,35,35,35,35,0,35,35,35,35,35,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]]]],0,[[[2,[1]],[4,[3]],5],6],[[[2,[1]],[4,[3]],[2,[1]]],6],0,[[[2,[1]]],7],[3,[[4,[3]]]],[3,[[4,[3]]]],0,[[[2,[1]]],6],[[[2,[1]],[9,[8]]],6],0,0,0,0,0,[3,[[10,[3]]]],[3,[[10,[3]]]],[3,10],0,[[3,11],[[13,[12]]]],[[3,11],[[13,[12]]]],[[3,11],12],[1],[[[2,[1]]],3],0,[14,3],[14,3],[[14,1,1],3],[14,3],[14,3],[[14,1],3],[[14,1],3],[[[2,[1]]],3],[[],3],[[14,1],3],[14,3],[[14,1,1,3],3],[[14,1],3],[[[2,[1]]],3],[14,3],[[[15,[3]]]],0,[[3,11],12],[[3,11],12],[[3,11],[[13,[12]]]],0,[1,[[10,[16]]]],[[[2,[1]]],[[13,[[10,[16]]]]]],0,0,0,[3],[[3,3],[[13,[3]]]],[3],[3,13],0,0,0,[[],17],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],[[19,[18]]]],[[],[[19,[20]]]],[[],[[19,[17]]]],0,[[18,17],18],[[]],[[]],[[]],[[18,1],[[4,[20]]]],0,[[]],[[]],[[]],[1,7],[[],18],[[],17],[1,[[4,[21]]]],0,[17],[18,19],[20,19],[17,19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],22],[[],22],[[],22],0,0,0,0,0,0,0,[[],23],[14,3],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[21,21],[14,14],[[],[[26,[24,25]]]],[[]],[[]],[[21,21],27],[[14,14],27],0,[28,3],[29,3],[21,3],[14,3],[[],[[19,[21]]]],[[],[[19,[14]]]],[[21,21],7],[[14,14],7],[[],7],[[],7],[[21,30],31],[[14,30],31],[[]],[[]],[[]],[[]],[[21,1],14],[1,[[4,[14]]]],[[21,[2,[1]]],3],[[]],[[]],[[]],[[]],[[],[[10,[21]]]],[18,[[10,[21]]]],[[],[[10,[21]]]],[18,[[10,[21]]]],[18,[[10,[14]]]],[21,[[10,[14]]]],[[21,18],[[10,[14]]]],[21,[[10,[14]]]],[[21,18],[[10,[14]]]],[[],[[10,[14]]]],[18,[[10,[14]]]],0,[[21,21],7],[[14,14],7],[[1,1],21],[[1,1,1],14],[1,[[13,[21]]]],[1],[[21,21],[[4,[27]]]],[[14,14],[[4,[27]]]],[[[2,[1]]],3],[14,3],[14,3],[14,3],[[14,1,1],3],[14,3],[14,3],[[14,1],3],[[14,1],3],[[[2,[1]]],3],[[],3],[[14,1],3],[14,3],[[14,1,1,3],3],[[14,1],3],[[[2,[1]]],3],[14,3],[[],21],[1,14],[21,19],[14,19],[14,3],[[]],[[]],[21,3],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],22],[[],22],[[],22],[[],22],[21,7],[[[2,[1]],[4,[3]],5],6],[[[2,[1]],[4,[3]],[2,[1]]],6],[[[15,[3]]]],[[[2,[1]]],6],[[[2,[1]],[9,[8]]],6],[3,[[4,[3]]]],[3,[[4,[3]]]],[3,[[10,[3]]]],[3,10],[[3,11],[[13,[12]]]],[[3,11],12],[[3,11],12],[[3,11],12],[[3,11],[[13,[12]]]],0,[[]],[[]],[[[2,[1]]]],[[],32],[[],33],[[[2,[1]]],7],[[]],0,[1,[[13,[[10,[16]]]]]],[[]],[[],34],0,[3,[[10,[3]]]],[[3,11],[[13,[12]]]],[1,13],[1,13],[1,13],0,0,[35,[[13,[36,37]]]],[[],[[19,[[4,[3]],37]]]],[[[2,[1]]],[[13,[[10,[16]]]]]],0,0,[[],19],[[],19],[[],22],[3],[[3,3],[[13,[3]]]],[3],[3,13]],"p":[[15,"str"],[8,"AsRef"],[3,"String"],[4,"Option"],[3,"Sender"],[8,"Future"],[15,"bool"],[3,"Body"],[8,"Into"],[3,"Vec"],[3,"Timer"],[8,"DeserializeOwned"],[6,"Result"],[3,"MapName"],[3,"Receiver"],[15,"u8"],[3,"DataPacks"],[3,"Manifest"],[4,"Result"],[3,"Entry"],[3,"CityName"],[3,"TypeId"],[8,"Any"],[8,"CloneableAny"],[3,"Global"],[3,"Box"],[4,"Ordering"],[3,"ROOT_DIR"],[3,"ROOT_PLAYER_DIR"],[3,"Formatter"],[6,"Result"],[3,"Events"],[3,"EventsAndRaw"],[3,"Keys"],[3,"FileWithProgress"],[15,"usize"],[3,"Error"]]},\
"abstutil":{"doc":"The contents of this crate need to be organized better:","t":[12,8,8,3,3,8,3,17,3,3,5,5,10,5,0,5,0,10,0,5,5,5,5,5,12,5,5,5,5,10,12,12,12,0,12,12,5,5,5,5,5,0,0,5,5,5,5,5,12,0,5,5,5,0,5,5,5,8,8,10,10,12,3,3,8,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,13,3,13,4,3,3,8,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,5,11,11,5,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,12,11,11,12,5,10,12,12,11,11,11,10,12,12,12,11,11,12,12,12,11,5,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,5,5,5,5,5,5],"n":["0","CloneableAny","CloneableImpl","Counter","FixedMap","IndexableKey","MultiMap","PROGRESS_FREQUENCY_SECONDS","Tags","VecMap","abbreviated_format","args_to_query_string","as_any","basename","cli","cli_args","clone","clone_box","collections","contains_duplicates","deserialize_btreemap","deserialize_hashmap","deserialize_multimap","deserialize_usize","empty","from_binary","from_binary_reader","from_json","from_json_reader","index","inner","inner","key_type","logger","map","map","must_run_cmd","parent_path","plain_list_names","prettyprint_bytes","prettyprint_usize","process","serde","serialize_btreemap","serialize_hashmap","serialize_multimap","serialize_usize","serialized_size_bytes","sum","time","to_binary","to_json","to_json_terse","utils","wraparound_get","args_to_query_string","cli_args","CloneableAny","CloneableImpl","as_any","clone_box","0","Counter","FixedMap","IndexableKey","MultiMap","Tags","VecMap","add","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compare","consume","consume","consume","contains_duplicates","contains_key","contains_key","default","default","default","default","deserialize","deserialize","deserialize","diff","empty","empty","eq","eq","eq","extend","fmt","from","from","from","from","from","get","get","get","get","get","get_mut","get_result","has_any","highest_n","inc","index","index","inner","inner","inner","insert","insert","insert","into","into","into","into","into","into_inner","is","is_any","is_empty","is_empty","is_empty","is_empty","key_type","len","len","map","map","max","max_key","mut_or_insert","ne","ne","ne","new","new","new","new","new","push","remove","remove","remove","serialize","serialize","serialize","set","sorted_asc","subset","sum","sum","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","values","wraparound_get","setup","must_run_cmd","deserialize_btreemap","deserialize_hashmap","deserialize_multimap","deserialize_usize","from_binary","from_binary_reader","from_json","from_json_reader","serialize_btreemap","serialize_hashmap","serialize_multimap","serialize_usize","serialized_size_bytes","to_binary","to_json","to_json_terse","File","Progress","Progress","StackEntry","TimedFileReader","Timer","TimerSink","TimerSpan","TimerSpan","add_result","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel_iter_early","cancel_iter_early","clear_current_line","done","drop","elapsed_seconds","events","events_and_raw","finalized_println","first_update","fmt","from","from","from","from","from","inner","inner_parallelize","into","into","into","into","into","keys","label","last_printed_at","last_printed_at","name","nested_results","nested_time","new","new","new","new_with_sink","next","next","outermost_name","parallelize","parallelize_polite","path","prettyprint_time","println","processed_bytes","processed_items","read","read_file","read_line","reprintln","results","sink","stack","start","start_iter","started_at","started_at","started_at","stop","temporary_println","temporary_println","throwaway","total_bytes","total_items","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","0","0","0","abbreviated_format","basename","parent_path","plain_list_names","prettyprint_bytes","prettyprint_usize"],"q":["abstutil","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","abstutil::cli","","abstutil::clone","","","","abstutil::collections","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","abstutil::logger","abstutil::process","abstutil::serde","","","","","","","","","","","","","","","","abstutil::time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","abstutil::time::StackEntry","","","abstutil::utils","","","","",""],"d":["","Trick to make a cloneable Any from …","","A counter per key","A drop-in replacement for <code>BTreeMap</code>, where the keys have …","Use with <code>FixedMap</code>. From a particular key, extract a <code>usize</code>. …","","","Convenience functions around a string-&gt;string map","Use when your key is just PartialEq, not Ord or Hash.","","Transforms some command-line arguments into URL query …","","","","Returns arguments passed in from the command-line, …","","","","","Deserializes a BTreeMap from a list of tuples. Necessary …","Deserializes a HashMap from a list of tuples.","Deserializes a MultiMap.","Deserializes a <code>usize</code> from a <code>u32</code>.","","Deserializes an object from the bincode format.","Deserializes an object from the bincode format, from a …","Deserializes an object from a JSON string.","Deserializes an object from JSON, from a reader.","","","","","","","","Runs a command, asserts success. STDOUT and STDERR aren’…","","","","","","","Serializes a BTreeMap as a list of tuples. Necessary when …","Serializes a HashMap as a list of tuples, first sorting by …","Serializes a MultiMap.","Serializes a <code>usize</code> as a <code>u32</code> to save space. Useful when you …","The number of bytes for an object serialized to bincode.","","","Transforms an object to bincoded bytes.","Stringifies an object to nicely formatted JSON.","Stringifies an object to terse JSON.","","","Transforms some command-line arguments into URL query …","Returns arguments passed in from the command-line, …","Trick to make a cloneable Any from …","","","","","A counter per key","A drop-in replacement for <code>BTreeMap</code>, where the keys have …","Use with <code>FixedMap</code>. From a particular key, extract a <code>usize</code>. …","","Convenience functions around a string-&gt;string map","Use when your key is just PartialEq, not Ord or Hash.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Find all values that differ. Returns (key, value1, …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","If the key is missing, returns 0","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","If two keys share the maximum, returns one of them …","","","","","","","","","","Doesn’t dedupe","","","","","","","","Values with the same count are grouped together","Remove all entries that aren’t in the specified set of …","","","","","","","","","","","","","","","","","","","","","","","","On native: uses env_log","Runs a command, asserts success. STDOUT and STDERR aren’…","Deserializes a BTreeMap from a list of tuples. Necessary …","Deserializes a HashMap from a list of tuples.","Deserializes a MultiMap.","Deserializes a <code>usize</code> from a <code>u32</code>.","Deserializes an object from the bincode format.","Deserializes an object from the bincode format, from a …","Deserializes an object from a JSON string.","Deserializes an object from JSON, from a reader.","Serializes a BTreeMap as a list of tuples. Necessary when …","Serializes a HashMap as a list of tuples, first sorting by …","Serializes a MultiMap.","Serializes a <code>usize</code> as a <code>u32</code> to save space. Useful when you …","The number of bytes for an object serialized to bincode.","Transforms an object to bincoded bytes.","Stringifies an object to nicely formatted JSON.","Stringifies an object to terse JSON.","","","","","","Hierarchial magic","","","","","","","","","","","","","","","","","","Used to end the scope of a timer early.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Execute the callback over all requests, using all CPUs …","Like <code>parallelize</code>, but leave one CPU free, to avoid …","","","","","","","Then the caller passes this in as a reader","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[32,0,0,0,0,0,0,0,0,0,0,0,55,0,0,0,0,55,0,0,0,0,0,0,20,0,0,0,0,33,31,34,34,0,20,30,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,55,55,32,0,0,0,0,0,0,30,31,20,20,30,30,32,34,31,20,30,32,34,31,20,30,32,34,20,30,32,34,30,31,20,30,0,32,34,31,20,30,34,30,32,34,32,32,20,20,30,32,30,32,31,20,30,32,34,31,20,30,32,34,34,32,32,30,30,33,34,32,31,34,20,32,34,31,20,30,32,34,32,32,32,31,20,30,32,34,31,20,20,30,30,30,31,20,30,32,31,20,30,32,34,31,20,32,34,30,32,34,20,30,30,30,30,20,30,32,34,31,20,30,32,34,31,20,30,32,34,31,20,30,32,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,0,56,0,0,0,0,0,56,44,56,44,57,52,46,56,44,57,52,46,44,46,0,44,44,0,44,44,0,46,46,56,44,57,52,46,52,44,56,44,57,52,46,44,46,52,46,57,57,57,44,52,46,44,44,46,44,44,44,52,0,53,52,46,44,44,44,53,44,44,44,44,44,57,52,46,44,0,44,44,52,46,56,44,57,52,46,56,44,57,52,46,56,44,57,52,46,58,59,60,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,[1,2],[[[3,[2]]],2],[[],4],[[[6,[5]]],2],0,[[],7],0,[[],[[9,[8]]]],0,[[],10],[11,[[15,[[14,[[0,[12,13]],12]]]]]],[11,[[15,[[18,[[0,[12,16,17]],12]]]]]],[11,[[15,[[20,[[0,[12,17,13,19]],[0,[12,17,13,19]]]]]]]],[11,[[15,[1]]]],0,[[],[[15,[21]]]],[22,[[15,[21]]]],[[],[[15,[21]]]],[22,[[15,[21]]]],[[],1],0,0,0,0,0,0,[23],[5,2],[[[24,[2]]],2],[25,2],[1,2],0,0,[[14,26],15],[[18,26],15],[[20,26],15],[[1,26],15],[[],1],0,0,[[],[[3,[27]]]],[[],2],[[],2],0,[28],[[[3,[2]]],2],[[],7],0,0,[[],4],[[],[[9,[8]]]],0,0,0,0,0,0,0,[[[30,[[0,[13,29,19]]]],[0,[13,29,19]],1],1],[[]],[20,14],[[]],[[[30,[[0,[13,29,19]]]]],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[31,[[0,[19,29]]]]]],[[[20,[19,19]]],[[20,[19,19]]]],[[[30,[[0,[19,13,29,19]]]]],[[30,[[0,[19,13,29,19]]]]]],[32,32],[[[34,[[0,[19,33]],19]]],[[34,[[0,[19,33]],19]]]],[[]],[[]],[[]],[[]],[[[30,[[0,[13,29,19]]]],[30,[[0,[13,29,19]]]]],3],[[[31,[[0,[19,29]]]]],3],[20,[[14,[24]]]],[[[30,[[0,[13,29,19]]]]],[[14,[[0,[13,29,19]],1]]]],[[],10],[[32,5],10],[[[34,[33]]],10],[[],[[31,[[0,[19,29]]]]]],[[],20],[[],[[30,[[0,[13,29,19]]]]]],[[],[[34,[33]]]],[[],[[35,[[30,[[0,[13,29,19]]]]]]]],[[],[[35,[32]]]],[[],[[35,[[34,[33]]]]]],[[32,32],3],[[],32],0,[[[20,[29,29]],20],10],[[[30,[[0,[29,13,29,19]]]],30],10],[[32,32],10],[[[30,[[0,[13,29,19]]]],[30,[[0,[13,29,19]]]]]],[[32,36],37],[[]],[[]],[[]],[[]],[[]],[[[31,[[0,[19,29]]]]],38],[20,24],[[[30,[[0,[13,29,19]]]],[0,[13,29,19]]],1],[[32,5],[[38,[2]]]],[[[34,[33]]],38],[[[34,[33]]],38],[[32,5],[[15,[2]]]],[[32,[3,[5]]],10],[[[30,[[0,[13,29,19]]]],1],3],[[[30,[[0,[13,29,19]]]],[0,[13,29,19]]],1],[[],1],[[[34,[33]]]],[32,14],0,0,[20],[[32,[39,[2]],[39,[2]]]],[[[34,[33]],33]],[[]],[[]],[[]],[[]],[[]],[32,[[14,[2,2]]]],[[32,5,5],10],[[32,5,[3,[5]]],10],[[[31,[[0,[19,29]]]]],10],[20,10],[[[30,[[0,[13,29,19]]]]],10],[32,10],0,[[[31,[[0,[19,29]]]]],1],[20,1],0,0,[[[30,[[0,[13,29,19]]]]],1],[[[30,[[0,[13,29,19]]]]],[[0,[13,29,19]]]],[[[31,[[0,[19,29]]]],[0,[19,29]],40]],[[[20,[29,29]],20],10],[[[30,[[0,[29,13,29,19]]]],30],10],[[32,32],10],[[],[[31,[[0,[19,29]]]]]],[[],20],[[],[[30,[[0,[13,29,19]]]]]],[[[14,[2,2]]],32],[[],[[34,[33]]]],[[[31,[[0,[19,29]]]],[0,[19,29]]]],[20],[[32,5],[[38,[2]]]],[[[34,[33]]],38],[[[30,[[0,[13,29,19]]]]],35],[32,35],[[[34,[33]]],35],[[20,24]],[[[30,[[0,[13,29,19]]]]],[[3,[[3,[[0,[13,29,19]]]]]]]],[[[30,[[0,[13,29,19]]]],24]],[[[30,[[0,[13,29,19]]]]],1],0,[[]],[[]],[[]],[[]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],41],[[],41],[[],41],[[],41],[[],41],[[[34,[33]]],[[43,[[42,[38]]]]]],[28],[[]],[23],[11,[[15,[[14,[[0,[12,13]],12]]]]]],[11,[[15,[[18,[[0,[12,16,17]],12]]]]]],[11,[[15,[[20,[[0,[12,17,13,19]],[0,[12,17,13,19]]]]]]]],[11,[[15,[1]]]],[[],[[15,[21]]]],[22,[[15,[21]]]],[[],[[15,[21]]]],[22,[[15,[21]]]],[[14,26],15],[[18,26],15],[[20,26],15],[[1,26],15],[[],1],[[],[[3,[27]]]],[[],2],[[],2],0,0,0,0,0,0,0,0,0,[[44,45,2]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[44],[46,45],[[]],[44],[44],[47,45],[[],48],[[],49],[[38,2]],0,[[46,36],37],[[]],[[]],[[]],[[]],[[]],0,[[44,5,3,40,50],3],[[]],[[]],[[]],[[]],[[]],[[],51],0,0,0,0,0,0,[[[39,[2]]],44],[5,[[15,[52]]]],[[2,1],46],[[5,[9,[53]]],44],[44],[[46,38],38],0,[[44,5,3,40],3],[[44,5,3,40],3],0,[45,2],[2],0,0,[44,[[15,[1,54]]]],[[44,5],15],[[],[[35,[[38,[2]],54]]]],[2],0,0,0,[[44,[39,[2]]]],[[44,[39,[2]],1]],0,0,0,[[44,[39,[2]]]],[[38,2]],[[44,2]],[[],44],0,0,[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],41],[[],41],[[],41],[[],41],[[],41],0,0,0,[1,2],[[[6,[5]]],2],[5,2],[[[24,[2]]],2],[25,2],[1,2]],"p":[[15,"usize"],[3,"String"],[3,"Vec"],[8,"Any"],[15,"str"],[8,"AsRef"],[8,"Iterator"],[8,"CloneableAny"],[3,"Box"],[15,"bool"],[8,"Deserializer"],[8,"Deserialize"],[8,"Ord"],[3,"BTreeMap"],[6,"Result"],[8,"Hash"],[8,"Eq"],[3,"HashMap"],[8,"Clone"],[3,"MultiMap"],[8,"DeserializeOwned"],[8,"Read"],[3,"Command"],[3,"BTreeSet"],[15,"u64"],[8,"Serializer"],[15,"u8"],[15,"isize"],[8,"PartialEq"],[3,"Counter"],[3,"VecMap"],[3,"Tags"],[8,"IndexableKey"],[3,"FixedMap"],[4,"Result"],[3,"Formatter"],[6,"Result"],[4,"Option"],[8,"Into"],[8,"Fn"],[3,"TypeId"],[3,"Iter"],[3,"Flatten"],[3,"Timer"],[15,"f64"],[3,"Progress"],[6,"Instant"],[3,"Events"],[3,"EventsAndRaw"],[15,"u32"],[3,"Keys"],[3,"TimedFileReader"],[8,"TimerSink"],[3,"Error"],[8,"CloneableImpl"],[4,"StackEntry"],[3,"TimerSpan"],[13,"TimerSpan"],[13,"Progress"],[13,"File"]]},\
"cli":{"doc":"A collection of tools, mostly related to importing maps …","t":[13,13,4,13,13,13,13,13,13,13,13,6,13,13,13,13,13,13,13,11,11,0,11,11,11,0,5,5,11,11,0,0,0,5,0,11,11,11,11,5,5,0,5,5,5,5,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,3,12,11,11,11,11,12,11,11,11,12,11,11,11,11,5,5,5,5,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,12,5,12,11,11,11,11,5],"n":["AugmentScenario","ClipOSM","Command","DumpJSON","GenerateHouses","GeoJSONToOsmosis","Import","ImportGrid2Demand","ImportJSONMap","ImportScenario","MinifyMap","ModifierList","OneStepImport","OneshotImport","PickGeofabrik","PrebakeScenario","RandomScenario","RegenerateEverything","RegenerateEverythingExternally","as_any","as_any_mut","augment_scenario","borrow","borrow_mut","clap","clip_osm","driving_side","dump_json","from","from_clap","generate_houses","geojson_to_osmosis","import_grid2demand","import_json_map","import_scenario","into","into_any","into_any_arc","into_any_rc","main","minify_map","one_step_import","parse_modifiers","prebake_scenario","random_scenario","regenerate_everything_externally","try_from","try_into","type_id","vzip","add_lunch_trips","add_return_trips","clip_path","clip_path","create_uk_travel_demand_model","create_uk_travel_demand_model","delete_cancelled_trips","drive_on_left","drive_on_left","filter_crosswalks","filter_crosswalks","geojson_path","input","input","input","input","input","input_scenario","job","map","map","map","map","map","map_name","num_required","num_shards","opts","osm_input","out_path","output","output","path","pbf_path","rng_seed","rng_seed","rng_seed","scenario_modifiers","scenario_name","scenario_path","shard_num","skip_problems","use_geofabrik","add_lunch_trips","add_return_trips","delete_cancelled_trips","pick_lunch_spot","rand_duration","run","clip","run","to_pt","generate_buildings_on_empty_residential_roads","rand_dist","run","run","Record","agent_type","as_any","as_any_mut","borrow","borrow_mut","departure_time","deserialize","fmt","from","geometry","into","into_any","into_any_arc","into_any_rc","parse_linestring","parse_time","parse_trips","run","try_from","try_into","type_id","vzip","Input","as_any","as_any_mut","borrow","borrow_mut","deserialize","from","into","into_any","into_any_arc","into_any_rc","people","run","scenario_name","try_from","try_into","type_id","vzip","run"],"q":["cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cli::Command","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cli::augment_scenario","","","","","","cli::clip_osm","","","cli::generate_houses","","","cli::geojson_to_osmosis","cli::import_grid2demand","","","","","","","","","","","","","","","","","","","","","","","cli::import_scenario","","","","","","","","","","","","","","","","","","cli::one_step_import"],"d":["Modifies the schedule of every person in an existing …","Clips an OSM file to a boundary. This is a simple Rust …","","Print a binary map or scenario file as JSON","Procedurally generates houses along empty residential …","Reads a GeoJSON file, extracts a polygon from every …","Import RawMaps, maps, scenarios, and city overviews for a …","Import a scenario from …","Transform a JSON map that’s been manually edited into …","Import a JSON scenario in the …","Removes nonessential parts of a Map, for the bike network …","","Imports a one-shot A/B Street map from a GeoJSON boundary …","Imports a one-shot A/B Street map from an .osm file in a …","Prints the osm.pbf file from download.geofabrik.de that …","Simulate a full day of a scenario, and write the “…","Generates a random scenario using the proletariat robot …","Regenerate all maps and scenarios from scratch.","Generate a shell script to regenerate all cities that uses …","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Before a person’s final trip home, insert a round-trip …","For people with only a single trip, add a return trip back …","The path to an Osmosis boundary polygon","The path to an Osmosis boundary polygon. If omitted, a …","Generate a simple travel demand model based on 2011 UK …","Generate a simple travel demand model based on 2011 UK …","Delete cancelled trips, and delete people with no …","Do people drive on the left side of the road in this map?","Do people drive on the left side of the road in this map?","Downgrade crosswalks not matching a <code>highway=crossing</code> OSM …","Downgrade crosswalks not matching a <code>highway=crossing</code> OSM …","The path to a GeoJSON file with a boundary","The path to a grid2demand CSV file","The path to a JSON scenario file","The path to a JSON map file to import","The path to an osmosis polygon boundary file","The path to a GeoJSON file","The path to a scenario to augment. This will be modified …","","The path to a map to generate a scenario for","The path to a map matching the grid2demand data","The path to a map matching the scenario data","The path to a map to shrink. The map is modified in-place.","The path to a map to generate houses for","What to name the new imported map. The country will always …","If the tool doesn’t generate at least this many houses, …","If this command is being run in the cloud, parallelize the …","","","The path to write the XML results","The path to write","The GeoJSON file to write","","The path to the input .osm.pbf file","A seed for generating random numbers","A seed for generating random numbers","A seed for generating random numbers","A JSON list of modifiers to transform the scenario. These …","The name of the scenario to generate","The path to a scenario file","If this command is being run in the cloud, parallelize the …","Problems occur when a position is within the map boundary, …","Use Geofabrik to grab OSM input if true, or Overpass if …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[7,7,0,7,7,7,7,7,7,7,7,0,7,7,7,7,7,7,7,7,7,0,7,7,7,0,0,0,7,7,0,0,0,0,0,7,7,7,7,0,0,0,0,0,0,0,7,7,7,7,40,40,41,42,43,42,40,43,42,43,42,43,44,45,46,47,48,40,49,50,44,45,51,52,43,52,53,42,42,41,46,52,54,41,50,40,52,40,50,55,53,45,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,0,0,0,33,33,33,33,0,38,38,38,38,38,38,38,38,38,38,38,0,38,38,38,38,38,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],0,[[]],[[]],[[],2],0,[3,4],[5],[[]],[6,7],0,0,0,[[5,5]],0,[[]],[[[9,[8]]],[[9,[1,8]]]],[10,[[10,[1]]]],[11,[[11,[1]]]],[[],12],[5],0,[13,[[12,[[15,[14]]]]]],[5],[[16,5,5]],[[],12],[[],17],[[],17],[[],18],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[19,20,21,22]],[[19,21]],[19,19],[[23,3,24,20,21],25],[[21,26,26],26],[[5,3,3,[15,[14]],3,16]],[[13,27,13],12],[[5,5,5],12],[[],28],[[20,21,22],[[15,[29]]]],[[21,30,30],31],[[5,32,16,5]],[5,12],0,0,[[],1],[[],1],[[]],[[]],0,[[],[[17,[33]]]],[[33,34],35],[[]],0,[[]],[[[9,[8]]],[[9,[1,8]]]],[10,[[10,[1]]]],[11,[[11,[1]]]],[13,25],[5,[[12,[36]]]],[5,[[12,[[15,[37]]]]]],[[5,5],12],[[],17],[[],17],[[],18],[[]],0,[[],1],[[],1],[[]],[[]],[[],[[17,[38]]]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[10,[[10,[1]]]],[11,[[11,[1]]]],0,[[5,5,3]],0,[[],17],[[],17],[[],18],[[]],[[5,5,4,3,3,3],39]],"p":[[8,"Any"],[3,"App"],[15,"bool"],[4,"DrivingSide"],[3,"String"],[3,"ArgMatches"],[4,"Command"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[6,"Result"],[15,"str"],[4,"ScenarioModifier"],[3,"Vec"],[15,"u64"],[4,"Result"],[3,"TypeId"],[3,"Scenario"],[3,"Map"],[3,"XorShiftRng"],[3,"Timer"],[3,"BuildingID"],[3,"FindClosest"],[4,"Option"],[3,"Duration"],[3,"Polygon"],[3,"Point"],[3,"Polygon"],[15,"f64"],[3,"Distance"],[15,"usize"],[3,"Record"],[3,"Formatter"],[6,"Result"],[3,"Time"],[3,"ExternalPerson"],[3,"Input"],[8,"Future"],[13,"AugmentScenario"],[13,"ClipOSM"],[13,"OneshotImport"],[13,"OneStepImport"],[13,"ImportGrid2Demand"],[13,"ImportScenario"],[13,"ImportJSONMap"],[13,"PickGeofabrik"],[13,"GeoJSONToOsmosis"],[13,"Import"],[13,"RandomScenario"],[13,"MinifyMap"],[13,"GenerateHouses"],[13,"RegenerateEverything"],[13,"DumpJSON"],[13,"PrebakeScenario"]]},\
"collisions":{"doc":"A simple data format to list collisions that’ve occurred …","t":[3,3,13,13,4,13,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,5,5,11,11,11,12,5,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11],"n":["Collision","CollisionDataset","Fatal","Serious","Severity","Slight","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","collisions","deserialize","deserialize","deserialize","eq","equivalent","fmt","from","from","from","import_seattle","import_stats19","into","into","into","location","parse_incdttm","serialize","serialize","serialize","severity","source_url","time","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["collisions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A single collision that occurred in the real world.","A single dataset describing some collisions that happened.","","","A simple ranking for how severe the collision was. …","","","","","","","","","","The collisions imported from the data source.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Import data from Seattle GeoData …","Import data from the UK STATS19 dataset. See …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","A single point describing where the collision occurred.","","","","","The severity reported in the original data source.","A URL pointing to the original data source.","The local time the collision occurred.","","","","","","","","","",""],"i":[0,0,1,1,0,1,2,4,1,2,4,1,1,1,2,2,4,1,1,1,1,2,4,1,0,0,2,4,1,4,0,2,4,1,4,2,4,1,2,4,1,2,4,1,2,4,1],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[[]],0,[[],[[3,[2]]]],[[],[[3,[4]]]],[[],[[3,[1]]]],[[1,1],5],[[],5],[[1,6],7],[[]],[[]],[[]],[[8,9],2],[[8,9],2],[[]],[[]],[[]],0,[9,[[11,[10]]]],[2,3],[4,3],[1,3],0,0,0,[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],12],[[],12],[[],12]],"p":[[4,"Severity"],[3,"CollisionDataset"],[4,"Result"],[3,"Collision"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"ExtraShapes"],[15,"str"],[3,"Duration"],[4,"Option"],[3,"TypeId"]]},\
"convert_osm":{"doc":"","t":[13,13,13,13,13,4,3,4,4,13,5,11,11,11,11,11,11,11,11,5,5,5,11,0,12,12,0,12,11,11,11,11,0,12,12,11,11,11,11,12,12,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,12,5,5,5,5,5,5,5,5,5,12,12,12,12,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,5,5,5,5,5],"n":["Blockface","FixedPerBldg","Gis","JustOSM","None","OnstreetParking","Options","PrivateOffstreetParking","PublicOffstreetParking","SomeAdditionalWhereNoData","add_extra_buildings","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bristol_hack","clip_map","convert","default_for_side","elevation","elevation","extra_buildings","extract","filter_crosswalks","from","from","from","from","gtfs","gtfs_url","include_railroads","into","into","into","into","map_config","onstreet_parking","parking","private_offstreet_parking","public_offstreet_parking","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","use_amenities","0","pct","0","0","add_data","generate_input","scrape_output","extract_osm","find_parking_aisles","get_area_type","get_bldg_amenities","is_bldg","service_road_crosses_parking_lot","0","0","0","0","Route","RouteID","Shape","ShapeID","Stop","StopID","StopTime","Trip","TripID","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dump_kml","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","import","into","into","into","into","into","into","into","into","into","ne","ne","ne","ne","partial_cmp","partial_cmp","partial_cmp","partial_cmp","route_desc","route_id","route_id","route_long_name","route_short_name","route_type","shape_id","shape_id","shape_pt_lat","shape_pt_lon","shape_pt_sequence","stop_id","stop_id","stop_lat","stop_lon","stop_name","stop_sequence","to_owned","to_owned","to_owned","to_owned","trip_id","trip_id","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","DIRECTED_ROAD_THICKNESS","apply_parking","apply_private_offstreet_parking","unknown_parking","use_offstreet_parking","use_parking_hints"],"q":["convert_osm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","convert_osm::OnstreetParking","","convert_osm::PrivateOffstreetParking","convert_osm::PublicOffstreetParking","convert_osm::elevation","","","convert_osm::extract","","","","","","convert_osm::gtfs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","convert_osm::parking","","","","",""],"d":["If OSM data is missing, then try to match data from …","","Pull data from …","If not tagged, there won’t be parking.","","What roads will have on-street parking lanes? Data from …","Configures the creation of a <code>RawMap</code> from OSM and other …","If a building doesn’t have anything from …","How many spots are available in public parking garages?","If OSM data is missing, then infer parking lanes on some …","","","","","","","","","","","","Create a RawMap from OSM and other input data.","","","","If provided, read polygons from this GeoJSON file and add …","","Only include crosswalks that match a <code>highway=crossing</code> OSM …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Configure public transit using this URL to a static GTFS …","OSM railway=rail will be included as light rail if so. …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","[0, 100]","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[33,32,34,33,34,0,0,0,0,33,0,8,33,34,32,8,33,34,32,0,0,0,8,0,8,8,0,8,8,33,34,32,0,8,8,8,33,34,32,8,8,0,8,8,8,33,34,32,8,33,34,32,8,33,34,32,0,35,36,37,38,0,0,0,0,0,0,0,0,0,19,20,21,22,0,0,0,0,0,0,0,0,0,19,20,21,22,24,25,26,27,28,19,20,21,22,24,25,26,27,28,19,20,21,22,19,20,21,22,19,20,21,22,19,20,21,22,24,25,26,27,28,0,19,20,21,22,19,20,21,22,19,20,21,22,19,20,21,22,24,25,26,27,28,19,20,21,22,19,20,21,22,0,19,20,21,22,24,25,26,27,28,19,20,21,22,19,20,21,22,24,24,25,24,24,24,25,26,26,26,26,27,28,27,27,27,28,19,20,21,22,25,28,19,20,21,22,24,25,26,27,28,19,20,21,22,24,25,26,27,28,19,20,21,22,24,25,26,27,28,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,[[1,2],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[[1,4]],[[5,6,[7,[5]],8,4],1],[9,8],0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[1,12,4]],0,0,0,0,[1,3],[[2,1],[[3,[[12,[13]]]]]],[[2,1,[12,[13]]],3],[[1,2,[7,[5]],8,4]],[[1,12]],[14,[[7,[15]]]],[14,[[12,[16]]]],[14,17],[[1,[12,[18]]],17],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19,19],[20,20],[21,21],[22,22],[[]],[[]],[[]],[[]],[[19,19],23],[[20,20],23],[[21,21],23],[[22,22],23],[[],[[10,[19]]]],[[],[[10,[20]]]],[[],[[10,[21]]]],[[],[[10,[22]]]],[[],[[10,[24]]]],[[],[[10,[25]]]],[[],[[10,[26]]]],[[],[[10,[27]]]],[[],[[10,[28]]]],[1],[[19,19],17],[[20,20],17],[[21,21],17],[[22,22],17],[[],17],[[],17],[[],17],[[],17],[[19,29],30],[[20,29],30],[[21,29],30],[[22,29],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],31],[[],31],[[],31],[19],[20],[21],[22],[1,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[19,19],17],[[20,20],17],[[21,21],17],[[22,22],17],[[19,19],[[7,[23]]]],[[20,20],[[7,[23]]]],[[21,21],[[7,[23]]]],[[22,22],[[7,[23]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,[[1,8,4]],[[1,32]],[14,17],[[1,5,4]],[[1,5,4]]],"p":[[3,"RawMap"],[15,"str"],[6,"Result"],[3,"Timer"],[3,"String"],[3,"MapName"],[4,"Option"],[3,"Options"],[4,"DrivingSide"],[4,"Result"],[3,"TypeId"],[3,"Vec"],[3,"OriginalRoad"],[3,"Tags"],[4,"AreaType"],[3,"Amenity"],[15,"bool"],[15,"usize"],[3,"ShapeID"],[3,"TripID"],[3,"StopID"],[3,"RouteID"],[4,"Ordering"],[3,"Route"],[3,"Trip"],[3,"Shape"],[3,"Stop"],[3,"StopTime"],[3,"Formatter"],[6,"Result"],[15,"u64"],[4,"PrivateOffstreetParking"],[4,"OnstreetParking"],[4,"PublicOffstreetParking"],[13,"Blockface"],[13,"SomeAdditionalWhereNoData"],[13,"FixedPerBldg"],[13,"Gis"]]},\
"fifteen_min":{"doc":"","t":[6,0,0,0,0,5,5,0,3,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,3,11,11,11,11,11,11,11,11,5,5,11,12,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,5,11,11,11,11,11,11,11,11,13,3,3,4,3,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,6,3,3,12,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,5,11,11,12,5,5,12,12,12,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,5,5,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["App","bus","find_amenities","find_home","isochrone","main","run","viewer","BusExperiment","BusRoute","ID","Waypoint","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","draw","eq","equivalent","event","fmt","from","from","get_hash","get_hash","hash","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","ne","new_state","panel","recalculate_everything","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","waypoints","world","0","0","FindAmenity","Results","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","create_border_isochrone","create_multi_isochrone","draw","draw","from","from","hovering_on_bldg","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","isochrone","new_state","new_state","on_click","other_event","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","FindHome","Results","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","draw","draw_houses","from","from","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","new_state","new_state","on_click","on_click","options","other_event","score_houses","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Biking","BorderIsochrone","Isochrone","MovementOptions","Options","Walking","amenities_reachable","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","colors","colors","default_thresholds","draw","draw","from","from","from","from","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","movement","new","new","onstreet_parking_spots","options","options","path_to","population","start","start","thresholds","thresholds","thresholds","time_to_reach_building","time_to_reach_building","times_from","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","0","Entry","ExploreAmenities","HoverKey","HoverOnBuilding","Viewer","address","amenity_idx","amenity_type","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bldg","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_panel","draw","draw","draw","draw_star","draw_unwalkable_roads","draw_unwalkable_roads","drawn_route","duration_away","event","event","from","from","from","from","highlight_start","hovering_on_bldg","hovering_on_category","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","isochrone","key","name","new_state","new_state","options_from_controls","options_to_controls","panel","panel","random_start","table","tooltip","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip"],"q":["fifteen_min","","","","","","","","fifteen_min::bus","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fifteen_min::bus::ID","","fifteen_min::find_amenities","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fifteen_min::find_home","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fifteen_min::isochrone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fifteen_min::isochrone::MovementOptions","fifteen_min::viewer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","This is a tool to experiment with the concept of 15-minute …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Calculate isochrones around each amenity on a map and …","","","","","","","","","","Draw an isochrone from every intersection border","For every one of the requested amenity on the map, draw an …","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Ask what types of amenities are necessary to be within a …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","For every house in the map, return the percent of …","","","","","","","","","","Represents the area reachable from all intersections on …","Represents the area reachable from a single building.","The constraints on how we’re moving.","","","Per category of amenity, what buildings have that?","","","","","","","","","","","","","","","","","","","","","Colors used to draw the isochrone","Colors used to draw the isochrone","","Colored polygon contours, uploaded to the GPU and ready …","Colored polygon contours, uploaded to the GPU and ready …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","How many sreet parking spots are on the same road as any …","The options used to generate this isochrone","The options used to generate this isochrone","","How many people live in the returned area, according to …","The center of the isochrone (can be multiple points)","The center of the isochrone (can be multiple points)","Thresholds used to draw the isochrone","Thresholds used to draw the isochrone","","How far away is each building from the start?","How far away is each building from the start?","Calculate the quickest time to reach buildings across the …","","","","","","","","","","","","","","","","","","","","","","(building, scale factor)","","This is the UI state for exploring the isochrone/walkshed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Start with a random building","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,3,0,3,4,3,4,3,4,3,4,3,3,3,4,3,3,4,3,4,3,3,3,3,4,3,4,3,3,4,3,3,4,4,4,3,4,3,4,3,4,3,4,3,4,4,48,49,0,0,50,24,50,24,50,24,50,24,0,0,24,24,50,24,24,50,24,50,24,50,50,24,24,50,24,24,24,50,24,50,24,50,24,50,24,0,0,32,27,32,27,32,27,32,27,27,27,32,27,32,27,32,27,32,32,27,32,27,32,27,32,27,0,32,27,32,27,32,27,32,27,34,0,0,0,0,34,23,23,21,20,34,23,21,20,34,23,21,20,34,23,21,20,34,20,34,20,34,23,21,20,23,21,23,21,20,34,23,21,20,34,23,21,20,34,20,34,23,21,20,34,20,23,21,23,23,21,23,23,23,21,23,21,20,23,21,34,20,34,23,21,20,34,23,21,20,34,23,21,20,34,23,21,20,34,51,0,0,0,0,0,52,52,52,42,47,43,52,42,47,43,52,52,42,47,43,52,42,47,43,52,0,42,43,43,0,0,42,47,52,42,43,42,47,43,52,42,42,42,42,47,43,52,42,47,43,52,52,42,47,43,52,42,47,52,42,43,0,0,42,43,42,43,47,42,47,43,52,42,47,43,52,42,47,43,52,47,42,47,43,52],"f":[0,0,0,0,0,[[]],[1],0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[3,3],[[]],[[4,5,6]],[[3,3],7],[[],7],[[4,8,6],[[9,[6]]]],[[3,10],11],[[]],[[]],[[],12],[[],12],[3],[[]],[[]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[[3,3],7],[[8,6],[[14,[17]]]],0,[[4,8,6]],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[]],[[]],0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[8,6,20],21],[[8,6,22,20],23],[[24,5,6]],0,[[]],[[]],0,[[]],[[]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],0,[[8,20],[[14,[17]]]],[[8,6,23,21,22],[[14,[17]]]],[[24,8,6,25,26],[[9,[6]]]],[[24,8,6],[[9,[6]]]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[]],[[]],0,0,[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[27,5,6]],0,[[]],[[]],[[]],[[]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[[8,20],[[14,[17]]]],[[8,6,[30,[28,29]],[31,[22]]],[[14,[17]]]],[[32,8,6,25,26],[[9,[6]]]],[[27,8,6,25,26],[[9,[6]]]],0,[[27,8,6],[[9,[6]]]],[[6,[31,[22]],20,33],[[30,[28,29]]]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[]],[[]],0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20,20],[34,34],[[]],[[]],0,0,[[],31],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],0,[[8,6,[31,[28]],20],23],[[8,6,[31,[35]],20],21],0,0,0,[[23,36,28],[[38,[37]]]],0,0,0,0,0,0,0,0,[[34,36,[31,[39]]],[[30,[28,40]]]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[8,6,41,23],26],[[42,5,6]],[[43,5,6]],0,[[8,41],44],[[8,6,20],45],0,0,0,[[42,8,6],[[9,[6]]]],[[43,8,6],[[9,[6]]]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],0,[[8,6],38],0,[[8,6,28],[[14,[17]]]],[[8,6,23,22],[[14,[17]]]],[26,34],[[8,20],46],0,0,[[8,6],[[14,[17]]]],0,0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[8,6,23],47],[[]],[[]],[[]],[[]]],"p":[[3,"Settings"],[8,"Any"],[4,"ID"],[3,"BusExperiment"],[3,"GfxCtx"],[3,"SimpleApp"],[15,"bool"],[3,"EventCtx"],[4,"Transition"],[3,"Formatter"],[6,"Result"],[15,"u64"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[8,"State"],[4,"Result"],[3,"TypeId"],[3,"Options"],[3,"BorderIsochrone"],[4,"AmenityType"],[3,"Isochrone"],[3,"Results"],[15,"str"],[3,"Panel"],[3,"Results"],[3,"BuildingID"],[3,"Percent"],[3,"HashMap"],[3,"Vec"],[3,"FindHome"],[3,"Timer"],[4,"MovementOptions"],[3,"IntersectionID"],[3,"Map"],[3,"Path"],[4,"Option"],[4,"Spot"],[3,"Duration"],[3,"Building"],[3,"Viewer"],[3,"ExploreAmenities"],[3,"GeomBatch"],[3,"Drawable"],[3,"Widget"],[3,"HoverOnBuilding"],[13,"Waypoint"],[13,"BusRoute"],[3,"FindAmenity"],[13,"Walking"],[3,"Entry"]]},\
"game":{"doc":"","t":[3,13,13,13,13,13,4,13,13,3,13,13,13,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,0,12,11,12,0,12,5,0,12,0,12,12,12,12,0,11,5,12,12,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,0,12,5,12,12,11,12,12,0,12,5,0,12,12,5,12,12,12,12,11,11,11,11,11,11,12,12,11,11,11,0,12,11,11,11,12,12,12,12,3,3,3,3,3,3,3,3,8,6,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,12,12,12,12,12,12,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,10,11,12,11,12,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,12,11,12,11,12,12,12,11,10,11,12,12,12,12,12,12,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,12,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,0,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,13,3,3,13,4,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,12,12,12,12,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,3,2,2,2,11,11,11,11,12,5,5,5,11,11,11,11,11,11,12,11,11,11,11,5,11,5,11,11,0,0,0,5,5,11,11,11,11,0,2,13,13,17,4,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,13,4,13,13,3,13,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,12,12,17,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,3,17,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,5,12,3,3,2,3,3,11,12,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,5,12,5,11,11,12,5,5,5,11,11,11,11,5,5,5,0,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,0,12,12,0,0,12,5,11,0,12,5,12,0,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,3,12,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,12,3,17,17,3,3,17,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,3,13,4,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,12,11,11,12,11,11,11,11,11,12,12,11,11,11,11,4,13,13,3,13,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,12,12,12,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,5,5,12,12,11,11,11,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,5,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,5,11,12,12,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,0,0,0,11,11,11,11,11,0,11,11,0,0,0,11,11,11,11,3,3,5,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,12,5,12,12,12,11,11,11,11,11,11,11,11,12,3,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,11,11,11,11,3,17,17,3,11,11,11,11,12,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,5,5,5,11,12,12,12,5,12,12,12,11,11,11,11,11,11,11,11,3,11,11,11,11,11,12,11,11,11,11,11,12,11,12,11,11,11,11,3,11,11,11,11,11,12,11,11,11,11,11,11,12,12,11,11,11,11,12,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,12,11,11,12,11,11,11,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,2,2,3,2,2,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,2,2,5,0,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,5,12,12,0,11,11,11,11,12,12,12,12,12,12,11,11,12,0,0,5,0,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,0,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,3,11,11,12,12,11,11,12,12,11,12,11,11,11,11,11,11,12,11,12,11,12,11,11,11,11,3,11,11,11,11,5,5,11,11,11,5,12,11,5,12,11,12,11,11,11,11,12,5,12,5,5,11,11,11,12,12,12,11,11,11,12,12,5,12,11,11,11,11,5,3,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,3,11,11,11,11,11,11,12,12,11,11,11,11,12,11,11,11,11,12,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,5,11,11,12,11,12,11,11,12,5,0,11,11,5,12,11,11,11,0,11,11,11,11,11,11,11,5,5,12,12,12,12,11,11,0,12,0,0,11,12,12,12,5,11,11,12,12,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,5,11,12,11,11,11,11,11,11,11,11,11,11,11,11,3,3,5,11,11,11,11,11,11,11,11,5,11,11,11,11,12,11,12,5,5,11,11,11,11,11,11,11,11,12,12,11,12,5,5,12,12,12,12,12,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,5,12,12,11,12,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,5,11,12,12,11,11,11,11,5,5,5,3,12,11,11,11,11,11,12,5,11,11,11,11,11,5,11,12,12,12,11,11,11,11,13,13,13,8,13,3,3,3,13,13,13,13,13,13,13,13,13,13,13,2,13,13,13,13,13,3,4,13,13,13,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,11,11,11,11,11,11,11,5,0,11,11,12,12,5,11,12,12,11,11,11,10,11,11,11,11,11,11,11,11,10,5,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,0,5,5,11,11,11,11,11,12,0,0,5,12,12,12,12,12,5,12,12,12,11,11,11,11,11,11,12,12,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,11,11,11,11,12,5,11,11,5,5,5,11,5,11,5,11,11,11,11,5,5,5,11,5,12,11,11,11,11,11,11,13,8,4,17,3,13,13,11,11,11,11,11,11,11,11,10,11,11,10,0,10,11,0,11,11,5,11,11,11,11,11,11,0,10,0,12,0,11,0,0,0,11,0,0,11,11,11,11,11,11,11,11,11,12,12,17,3,17,3,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,13,13,13,3,3,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,4,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,5,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,5,11,11,12,11,11,11,11,11,11,11,5,12,11,11,11,11,11,12,12,11,12,12,12,11,11,11,11,11,11,11,12,11,11,6,3,3,12,12,11,11,11,11,12,12,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,12,12,11,12,11,11,12,11,11,11,11,11,11,11,11,3,3,3,3,3,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,3,11,11,11,11,5,11,11,11,11,11,11,0,11,11,11,11,3,11,11,11,11,12,11,11,11,11,11,5,11,11,12,11,11,11,11,3,3,13,2,13,13,4,13,13,13,2,3,3,3,2,2,2,2,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,0,11,11,11,11,11,11,11,12,11,11,11,11,11,11,0,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,12,12,5,0,12,0,12,5,11,11,12,11,12,11,2,0,12,11,12,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,13,2,13,4,13,13,13,2,13,13,13,13,11,11,11,11,11,11,0,11,11,11,0,11,11,11,11,11,0,0,0,11,0,0,11,11,0,11,0,0,0,11,11,11,11,3,6,4,4,13,3,3,13,13,3,13,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,12,12,12,11,12,11,11,11,12,11,11,11,11,11,11,11,12,5,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,11,11,11,12,5,12,11,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,5,5,5,3,3,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,12,11,12,5,5,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,12,12,12,5,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,11,11,5,11,11,11,12,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,3,11,11,11,11,12,11,11,11,11,11,11,11,12,12,11,11,11,11,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,12,5,11,11,5,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,12,5,5,5,11,11,11,11,11,11,11,11,3,3,3,8,12,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,11,11,12,11,12,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,12,12,12,12,12,12,11,12,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,12,12,12,12,12,12,11,12,12,12,12,5,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,13,3,13,13,13,4,8,4,13,13,13,13,13,2,13,2,2,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,11,11,11,0,11,11,11,11,10,11,11,11,10,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,0,10,12,11,2,11,11,11,11,11,11,11,0,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,11,11,11,11,12,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,5,12,11,11,5,11,5,12,11,11,11,12,11,12,12,11,12,12,12,11,11,11,11,3,17,11,11,11,11,11,5,12,11,11,5,11,11,11,11,12,11,11,11,12,12,11,11,11,11,12,3,3,5,0,11,11,11,11,11,11,11,11,11,11,11,5,11,11,0,11,11,11,11,11,11,11,11,11,11,11,5,0,12,11,11,11,11,11,11,11,11,12,3,3,13,4,13,3,13,3,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,11,11,11,11,11,11,5,5,5,11,11,11,11,12,12,11,11,11,11,3,11,11,11,11,12,11,11,11,12,11,11,11,11,12,12,11,11,11,11,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,12,12,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,13,13,17,13,13,13,13,3,13,13,3,4,13,3,3,3,13,5,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,12,11,11,11,11,11,11,5,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,12,11,5,11,12,11,11,11,12,11,12,11,11,11,11,11,11,12,12,12,11,11,12,11,11,11,11,11,11,12,11,12,12,11,12,11,11,12,11,5,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,12,12,11,11,11,11,11,11,11,11,13,13,13,13,4,3,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,3,3,5,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,12,13,13,2,2,2,13,2,4,8,13,11,11,0,11,11,11,0,11,11,11,11,11,11,0,11,0,0,10,0,11,11,11,11,3,3,3,3,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,3,11,11,12,11,11,11,12,11,12,11,11,11,11,11,12,11,5,11,5,12,12,11,12,12,11,12,11,11,11,11,11,5,12,3,3,3,3,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,12,11,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,12,12,11,12,5,11,12,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,12,5,12,11,5,12,11,12,11,11,11,11,11,13,4,13,3,3,13,12,11,11,11,11,11,11,11,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,12,12,12,11,12,12,12,12,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,5,11,11,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Args","Challenges","CompareCounts","Devtools","Gameplay","LoadKML","Mode","Proposals","Sandbox","Setup","SomethingElse","TutorialIntro","Ungap","actdev","actdev_scenario","app","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cam","center_camera","challenge","challenges","challenges","clap","color_scheme","common","compare_counts","continue_app_setup","debug","dev","devtools","devtools","diff_map","diff_map","dump_raw_events","edit","eq","finish_app_setup","flags","flags","from","from","from","from_clap","info","initialize_tutorial","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","layer","load_kml","main","minimal_controls","mode","ne","opts","prebake","pregame","proposals","run","sandbox","sandbox","scale_factor","setup_app","start_time","start_time","start_with_edits","start_with_edits","try_from","try_from","try_from","try_into","try_into","try_into","tutorial","tutorial_intro","type_id","type_id","type_id","ungap","ungap","vzip","vzip","vzip","0","0","0","1","App","FindDelayedIntersections","Flags","PerMap","PerObjectActions","SessionState","ShowEverything","ShowLayers","ShowObject","Transition","add_study_area","agents","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","before_event","before_quit","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_lane_type","calculate_current_selection","canonical_point","clap","clear_everything","clear_sim","click_action","click_on_intersection","clone","clone_into","cs","cs","current_flags","current_selection","currently_delayed","dash_tab","dirty_from_edits","draw","draw_default","draw_map","draw_map","draw_with_opts","dump_before_abort","elevation_contours","empty","free_memory","from","from","from","from","from","from","from","from","from_clap","get_renderables_back_to_front","halt_limit","has_modified_trips","has_prebaked","high_scores","info_panel_tab","init_camera_for_loaded_map","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_secondary","last_gmns_timing_csv","last_warped_from","layer","layers","layers","layers","left_click","live_map_edits","make_warper","map","map","map_loaded","map_switched","mode_shift","mouseover_debug_mode","mouseover_unzoomed_buildings","mouseover_unzoomed_everything","mouseover_unzoomed_intersections","mouseover_unzoomed_roads_and_intersections","mut_cs","mut_draw_map","mut_opts","new","new","new","opts","opts","per_obj","prebaked","prebaked","primary","recalculate_current_selection","report_limit","reset","routing_preferences","run","scenario","secondary","session","set_prebaked","show","show","show_areas","show_buildings","show_intersections","show_labels","show_lanes","show_parking_lots","sim","sim","sim_cb","sim_flags","store_unedited_map_in_secondary","study_area","suspended_sim","swap_map","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tutorial","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unedited_map","ungap_current_trip_name","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Challenge","ChallengesPicker","HighScore","alias","all","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","challenge","cutscene","cutscene","description","edits_name","find","from","from","from","gameplay","goal","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","links","make","new_state","on_click","prebake","record","score","title","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","BossSpeaking","CutsceneBuilder","CutscenePlayer","Extra","Layout","PlayerSpeaking","Scene","ShowMessage","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boss","build","draw","draw","event","event","extra","fg_color","from","from","from","from","from","idx","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","layout","make_panel","make_task","msg","name","name","new","new_state","panel","panel","player","scenes","scenes","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","0","1","prebake_all","CommonState","RoadSelector","RouteSketcher","Warping","as_any","as_any_mut","borrow","borrow_mut","cached_actions","cmp_duration_shorter","color_for_agent_type","color_for_trip_phase","debug_actions","draw","draw_custom_osd","draw_osd","event","from","info_panel","info_panel_open","into","into_any","into_any_rc","jump_to_time_upon_startup","launch_info_panel","list_names","new","osd_for","route_sketcher","select","share","sync_abtest","tool_panel","try_from","try_into","type_id","vzip","warp","warp_to_id","Dragging","Hovering","INTERSECTON_RADIUS","Mode","Neutral","Route","RouteSketcher","add_waypoint","all_roads","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","draw","eq","eq","event","from","from","from","full_path","get_widget_to_describe","idx","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_route_started","is_route_valid","mode","mouseover_i","move_waypoint","ne","ne","new","new","on_click","preview","route","snap_to_intersections","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_mode","update_preview","vzip","vzip","vzip","waypoints","0","at","idx","Erase","Mode","Paint","Pan","RoadSelector","Route","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","dragging","draw","event","from","from","intersections","into","into","into_any","into_any","into_any_rc","into_any_rc","make_controls","mode","new","preview","roads","roads_changed","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","i1","preview_path","PROPOSAL_HOST_URL","ShareProposal","UploadedProposals","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","deserialize","draw","fmt","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","load","md5sums","new_state","on_click","proposal_uploaded","serialize","try_from","try_from","try_into","try_into","type_id","type_id","url","url_flag","vzip","vzip","DebugWarp","WARP_TO_CAM_ZOOM","Warping","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","draw","draw","event","event","from","from","id","inner_warp_to_id","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","new_state","new_state","panel","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","warp_to_id","warper","Actions","DebugMode","PathCostDebugger","ScreenshotTest","SearchResults","actions","all_routes","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blocked_by","blockfinder","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calc_all_routes","common","diff_tags","draw","draw","draw","draw_arterial_crosswalks","draw_bad_intersections","draw_banned_turns","draw_baselayer","event","event","execute","find_bad_signals","find_degenerate_roads","find_large_intersections","floodfill","from","from","from","from","gameplay_mode","hidden","highlighted_agents","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_paused","layers","layers","new_state","new_state","num_matches","objects","objects","panel","path_counter","polygons","query","reimport_map","reset_info","routes","screenshot_done","search_osm","search_results","select_roads","show","todo_maps","tool_panel","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","uber_turns","vzip","vzip","vzip","vzip","Viewer","agent_positions","arrow_for","arrows","as_any","as_any_mut","borrow","borrow_mut","draw","event","find_worst_problems","from","graph","into","into_any","into_any_rc","new_state","panel","root_cause","simple_root_cause","trace_root_cause","try_from","try_into","type_id","vzip","0","Blockfinder","COLORS","MODIFIED","Obj","OneBlock","TO_MERGE","add_block","add_blocks_with_coloring","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","block","blocks","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","draw","draw","draw","eq","equivalent","event","fmt","from","from","from","get_hash","get_hash","hash","id_counter","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","make_panel","ne","new_id","new_state","new_state","on_click","other_event","panel","partial_cmp","partitions","to_merge","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","world","Floodfill","Floodfiller","Scc","Source","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","calculate","clone","clone_into","draw","draw","event","floodfill","from","from","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","new_state","panel","scc","source","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","ObjectDebugger","as_any","as_any_mut","borrow","borrow_mut","debug_json","draw","dump_debug","from","into","into_any","into_any_arc","into_any_rc","try_from","try_into","type_id","vzip","PathCounter","as_any","as_any_mut","borrow","borrow_mut","cnt","demand_across_intersection","draw","draw","event","from","into","into_any","into_any_rc","panel","tooltip","try_from","try_into","type_id","vzip","Item","Point","Polygon","PolygonDebugger","Triangle","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","center","draw","event","from","from","idx","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","items","new_state","noun","panel","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","0","AllRoutesExplorer","PathCostDebugger","RouteExplorer","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","baseline_counts","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","calculate_demand","controls_to_params","costs","current_counts","draw","draw","draw","draw","draw_path","event","event","event","from","from","from","goal","into","into","into","into_any","into_any","into_any","into_any_rc","into_any_rc","into_any_rc","maybe_new","new_state","new_state","panel","panel","panel","params_to_controls","recalc_paths","requests","start","tooltip","tooltip","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","BulkSelect","as_any","as_any_mut","borrow","borrow_mut","draw","event","from","into","into_any","into_any_rc","make_select_panel","new_state","panel","selector","try_from","try_into","type_id","vzip","UberTurnPicker","UberTurnViewer","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","draw","draw","draw","draw_baselayer","from","from","ic","idx","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","legal_turns","members","new_state","new_state","on_click","on_click","on_mouseover","other_event","other_event","panel_changed","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DevToolsMode","as_any","as_any_mut","borrow","borrow_mut","collisions","compare_counts","destinations","from","into","into_any","into_any_arc","into_any_rc","kml","new_state","on_click","polygon","scenario","story","try_from","try_into","type_id","vzip","CollisionsViewer","Filters","aggregated","apply","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","data","draw","eq","event","from","from","from_controls","individual","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","make_controls","ne","new","new_state","panel","pct","severity","show_individual","time_range","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","world","GenericCompareCounts","as_any","as_any_mut","borrow","borrow_mut","compare","draw","from","into","into_any","into_any_rc","new_state","on_click","other_event","try_from","try_into","type_id","vzip","PopularDestinations","as_any","as_any_mut","borrow","borrow_mut","draw","draw","event","from","into","into_any","into_any_rc","make","new_state","panel","per_bldg","try_from","try_into","type_id","vzip","Object","RADIUS","THICKNESS","ViewKML","as_any","as_any","as_any_mut","as_any_mut","attribs","borrow","borrow","borrow_mut","borrow_mut","color","draw","draw","draw_query","event","from","from","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","load_objects","make_object","make_query","new_state","objects","osm_bldg","panel","pick_file","polygon","quadtree","selected","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","PolygonEditor","as_any","as_any_mut","borrow","borrow_mut","draw","edit","event","from","into","into_any","into_any_rc","name","new_state","panel","try_from","try_into","type_id","vzip","ScenarioManager","as_any","as_any_mut","borrow","borrow_mut","draw","draw","event","from","into","into_any","into_any_rc","new_state","panel","scenario","try_from","try_into","type_id","vzip","0","DrawFreehand","EditingMarker","Marker","MarkerID","RecordedStoryMap","StoryMap","StoryMapEditor","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","dirty","draw","draw","draw_baselayer","draw_baselayer","draw_baselayer","eq","equivalent","event","event","fmt","from","from","from","from","from","from","from","from_story","get_hash","get_hash","hash","idx","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","label","lasso","load","markers","markers","name","name","ne","new","new_idx","new_state","new_state","on_click","panel","pts","rebuild_panel","rebuild_world","save","serialize","story","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","world","ConfirmDiscard","EditMode","LoadEdits","RoadEditor","RouteEditor","SaveEdits","StopSignEditor","TrafficSignalEditor","apply_map_edits","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_edit_lane","cancel","changelist","check_blackholes","check_sidewalk_connectivity","cmd_to_id","crosswalks","current_name","discard","draw","draw","draw","draw","draw","event","event","event","event","from","from","from","from","into","into","into","into","into_any","into_any","into_any","into_any","into_any_rc","into_any_rc","into_any_rc","into_any_rc","make_changelist","make_topcenter","map_edit_key","maybe_edit_intersection","mode","mode","multiple_roads","new_state","new_state","new_state","new_state","on_success","orig_dirty","orig_edits","panel","panel","panel","quit","recalc_btn","reset","roads","routes","speed_limit_choices","stop_signs","tool_panel","top_center","traffic_signals","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validate","vzip","vzip","vzip","vzip","zones","0","CrosswalkEditor","ID","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","draw","eq","equivalent","event","fmt","from","from","get_hash","get_hash","hash","id","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","ne","new_state","panel","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","world","SelectSegments","as_any","as_any_mut","base_edits","base_road","borrow","borrow_mut","candidates","current","draw","draw","event","from","into","into_any","into_any_rc","new_state","new_state","on_destroy","panel","recalculate","selected","try_from","try_into","type_id","vzip","RoadEditor","as_any","as_any_mut","borrow","borrow_mut","build_lane_highlights","can_reverse","compress_edits","create","draw","draw_drop_position","draw_drop_position","event","fade_irrelevant","fade_irrelevant","from","hovering_on_lane","into","into_any","into_any_rc","lane_for_idx","lane_highlights","lane_type_to_icon","main_panel","make_main_panel","make_top_panel","modify_current_lane","new_state","new_state_without_lane","num_edit_cmds_originally","orig_road_state","r","recalc_all_panels","recalc_hovering","recalc_lane_highlights","redo_stack","selected_lane","selected_lane_bg","top_panel","try_from","try_into","type_id","vzip","width_choices","RouteEditor","as_any","as_any_mut","borrow","borrow_mut","draw","event","from","into","into_any","into_any_rc","new_state","panel","route","try_from","try_into","type_id","vzip","StopSignEditor","as_any","as_any_mut","borrow","borrow_mut","draw","from","geom","id","into","into_any","into_any_arc","into_any_rc","mode","new_state","on_click","on_mouseover","other_event","selected_sign","try_from","try_into","type_id","vzip","BundleEdits","TrafficSignalEditor","add_new_edit","apply","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","change_stage","check_for_missing_turns","clone","clone_into","command_stack","commit","current_stage","draw","draw_baselayer","draw_current","draw_multiple_signals","edits","eq","event","fade_irrelevant","fade_irrelevant","from","from","get_current","gmns","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","make_side_panel","make_top_panel","members","mode","movement_selected","movements","ne","new_state","offsets","original","picker","preview","recalc_draw_current","redo_stack","side_panel","signals","squish_polygons_together","synchronize","to_owned","tooltip","top_panel","try_from","try_from","try_into","try_into","type_id","type_id","validate_all_members","vzip","vzip","warn_changed","ChangeDuration","as_any","as_any_mut","borrow","borrow_mut","draw_baselayer","edit_entire_signal","from","idx","into","into_any","into_any_arc","into_any_rc","new_state","on_click","other_event","panel_changed","try_from","try_into","type_id","vzip","Record","Snapper","add_crosswalks","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","cardinal_direction","deserialize","fmt","from","from","geometry","get_mvmnt","green_time","import","import_all","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","movements","mvmt_txt_id","new","osm_ids","parse_linestring","parse_osm_ids","protection","roads_incoming","roads_outgoing","stage","timing_plan_id","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ShowAbsolute","ShowRelative","TuneRelative","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","base","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","draw","draw","draw","from","from","from","i1","i2","into","into","into","into_any","into_any","into_any","into_any_rc","into_any_rc","into_any_rc","labels","labels","labels","members","members","members","new_state","new_state","new_state","on_click","on_click","on_click","on_mouseover","on_mouseover","other_event","other_event","other_event","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","SignalPicker","as_any","as_any_mut","borrow","borrow_mut","draw","event","from","into","into_any","into_any_rc","make_btn","members","mode","new_state","panel","try_from","try_into","type_id","vzip","PreviewTrafficSignal","as_any","as_any_mut","borrow","borrow_mut","draw","event","from","into","into_any","into_any_rc","make_previewer","new_state","panel","time_panel","try_from","try_into","type_id","vzip","check_blackholes","check_sidewalk_connectivity","fix_sidewalk_direction","ZoneEditor","allow_through_traffic","as_any","as_any_mut","borrow","borrow_mut","draw","draw","draw_zone","event","from","into","into_any","into_any_rc","make_instructions","new_state","orig_members","panel","selector","try_from","try_into","type_id","vzip","Area","BldgInfo","BldgPeople","ContextualActions","Crowd","DataOptions","Details","InfoPanel","IntersectionArrivals","IntersectionDelay","IntersectionDemand","IntersectionInfo","IntersectionProblems","IntersectionTraffic","IntersectionTrafficSignal","LaneDebug","LaneInfo","LaneProblems","LaneTraffic","OpenTrip","ParkedCar","ParkingLot","PersonBio","PersonSchedule","PersonTrips","ProblemOptions","Tab","TransitRoute","TransitStop","TransitVehicleStatus","actions","active_id","active_keys","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","building","cached_actions","can_jump_to_time","changed_settings","clone","clone","clone","clone_into","clone_into","clone_into","color_for_problem_type","debug","disabled_series","disabled_series","disabled_types","disabled_types","do_time_warp","draw","draw_extra","draw_extra","eq","eq","event","execute","from","from","from","from","from","from_controls","from_controls","from_id","gameplay_mode","header_btns","hyperlinks","hyperlinks","intersection","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_paused","is_paused","lane","make_table","make_tabs","ne","ne","new","new","new","panel","parking_lot","person","problem_count","show_before","show_before","show_end_of_day","show_end_of_day","tab","throughput","time","time_warpers","time_warpers","to_controls","to_controls","to_id","to_owned","to_owned","to_owned","tooltips","tooltips","transit","trip","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","variant","vzip","vzip","vzip","vzip","vzip","warpers","warpers","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","1","1","1","1","2","draw_occupants","header","info","info_body","people","people_body","area","area_body","arrivals","current_demand","current_demand_body","delay","delay_body","delay_plot","header","info","info_body","problems","problems_body","traffic","traffic_body","traffic_signal","traffic_signal_body","debug","debug_body","header","info","info_body","problems","problems_body","traffic","traffic_body","header","info","info_body","bio","bio_body","cmp_duration_shorter","crowd","crowd_body","current_status","header","parked_car","parked_car_body","schedule","schedule_body","trips","trips_body","bus_header","bus_status","bus_status_body","describe_schedule","route","route_body","stop","stop_body","OpenTrip","as_any","as_any_mut","borrow","borrow_mut","cached_routes","cancelled","clone","clone_into","describe_problems","draw_problems","endpoint","eq","finished","from","future","into","into_any","into_any_arc","into_any_rc","make_elevation","make_timeline","make_trip_details","new","ongoing","show_after","single","to_owned","try_from","try_into","type_id","vzip","Close","Layer","LayerOutcome","PANEL_PLACEMENT","PickLayer","Replace","Transition","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","draw","draw","draw_baselayer","draw_minimap","elevation","event","event","favorites","from","from","header","into","into","into_any","into_any","into_any_rc","into_any_rc","map","name","pandemic","panel","parking","pick","population","problems","problems_diff","simple_event","traffic","transit","try_from","try_from","try_into","try_into","type_id","type_id","update","vzip","vzip","0","0","CONTOUR_STEP_SIZE","ElevationContours","INTERSECTION_SEARCH_RADIUS","SteepStreets","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","closest_elevation","draw","draw","draw","draw","draw_minimap","draw_minimap","event","event","from","from","into","into","into_any","into_any","into_any_rc","into_any_rc","make_colorer","make_contours","make_legend","name","name","new","new","panel","panel","tooltip","tooltip","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Favorites","ShowFavorites","add","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","buildings","contains","deserialize","draw","draw","draw_minimap","event","from","from","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","load","name","new","panel","path","remove","serialize","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BikeActivity","Static","amenities","as_any","as_any","as_any_mut","as_any_mut","blackholes","borrow","borrow","borrow_mut","borrow_mut","draw","draw","draw","draw","draw_minimap","draw_minimap","edits","event","event","from","from","high_stress","into","into","into_any","into_any","into_any_rc","into_any_rc","name","name","name","new","new","no_sidewalks","panel","panel","time","tooltip","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Dead","Exposed","Infected","Options","Pandemic","Recovered","Sane","Seir","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","draw","draw","draw_minimap","eq","eq","event","fmt","from","from","from","heatmap","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","make_controls","name","ne","new","options","opts","panel","state","time","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Bldg","Efficiency","Loc","Lot","Occupancy","Road","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","draw","draw","draw","draw","draw_minimap","draw_minimap","eq","equivalent","event","event","from","from","from","garages","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","looking_for_parking","lots","name","name","ne","new","new","new","onstreet","panel","panel","partial_cmp","private_bldgs","time","time","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","0","Options","PopulationMap","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","draw","draw","draw_minimap","eq","event","from","from","heatmap","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","make_controls","name","ne","new","options","opts","panel","time","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Options","ProblemMap","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","draw","draw","draw_minimap","eq","event","export_raw_problems","from","from","heatmap","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","make_controls","modes","name","ne","new","new","options","opts","panel","show","time","time1","time2","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","types","vzip","vzip","Options","ProblemTypes","RelativeProblemMap","after_intersection","after_road","as_any","as_any","as_any_mut","as_any_mut","before_intersection","before_road","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","disabled_types","draw","draw","draw_minimap","eq","event","from","from","from_controls","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","make_controls","name","ne","new","new","opts","panel","show","time","to_controls","to_owned","tooltip","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Backpressure","CompareThroughput","Delay","Jam","PedestrianCrowding","Throughput","TrafficJams","adjacent_to","agent_types","all_polygons","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cluster_jams","draw","draw","draw","draw","draw","draw","draw","draw","draw","draw","draw","draw_minimap","draw_minimap","draw_minimap","draw_minimap","draw_minimap","draw_minimap","epicenter","event","event","event","event","event","event","export_throughput","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","members","name","name","name","name","name","name","new","new","new","new","new","new","panel","panel","panel","panel","panel","panel","time","time","time","time","time","time","tooltip","tooltip","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","world","TransitNetwork","as_any","as_any_mut","borrow","borrow_mut","draw","draw","draw_minimap","event","from","into","into_any","into_any_rc","name","new","panel","try_from","try_into","type_id","vzip","TitleScreen","as_any","as_any_mut","borrow","borrow_mut","enter_state","from","into","into_any","into_any_arc","into_any_rc","new_state","proposals","try_from","try_into","type_id","vzip","Proposals","as_any","as_any_mut","borrow","borrow_mut","current","from","into","into_any","into_any_arc","into_any_rc","launch","new_state","on_click","proposals","try_from","try_into","type_id","vzip","Actions","BackToTitleScreen","Finalizing","GameplayMode","GotPrebaked","GotScenario","LoadStage","LoadingMap","LoadingPrebaked","LoadingScenario","MinimapController","SandboxControls","SandboxLoader","SandboxMode","SpeedSetting","TimePanel","TimeWarpScreen","TutorialPointer","TutorialState","actions","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","async_new","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_interact","common","contextual_actions","controls","dashboards","draw","draw","draw","event","event","event","execute","finalize","from","from","from","from","from","from","gameplay","gameplay","gameplay","gameplay_mode","gameplay_mode","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_daytime","is_paused","is_paused","last_cs","maybe_exit_sandbox","minimap","minimap","misc_tools","mode","mouseover_unzoomed_agent_circle","new","on_destroy","recalc_unzoomed_agent","recreate_panels","route_preview","simple_new","spawn_agents_around","speed","stage","start_from_savestate","time_panel","time_warp","tool_panel","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","1","ActiveTraffic","CommuterPatterns","CommuterPatterns","DashTab","ModeShift","ParkingOverhead","RiskSummaries","TrafficSignalDemand","TrafficSignals","TransitRoutes","TravelTimes","TripTable","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","commuter","eq","fmt","from","generic_trip_table","into","into_any","into_any_arc","into_any_rc","launch","misc","mode_shift","parking_overhead","picker","risks","selector","tab_changed","to_owned","traffic_signals","transition","travel_times","trip_problems","trip_table","try_from","try_into","type_id","vzip","Block","BlockID","BlockSelection","BorderType","Both","CommuterPatterns","Filter","Incoming","Locked","Loop","NothingSelected","Outgoing","PanelState","Unlocked","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bldg_to_block","bldgs","bldgs","blocks","border_to_block","borders","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_block_drawable","build_shape_for_border","building_counts","clone","clone_into","count_per_block","current_block","depart_from","depart_until","draw","draw_all_blocks","eq","eq","event","filter","from","from","from","from","from","from","from","from_block","group_bldgs","id","include_borders","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","make_panel","max_count","modes","ne","ne","new_state","panel","partition_sidewalk_loops","proper","redraw_panel","roads","shape","to_owned","total_trips","trips_from_block","trips_to_block","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","base","compare_to","open_trip_transition","preview_route","preview_trip","ActiveTraffic","TransitRoutes","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","downsample","draw","draw","event","event","from","from","into","into","into_any","into_any","into_any_rc","into_any_rc","new_state","new_state","panel","panel","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Entry","Filters","ModeShift","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","distance","draw","estimated_biking_time","estimated_driving_time","event","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","make_table","max_biking_time","max_distance","max_driving_time","max_elevation_gain","new_state","panel","produce_raw_data","show_route_gaps","show_route_gaps","tab","table","total_elevation_gain","total_elevation_loss","trip","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Entry","Filters","ParkingOverhead","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","draw","driving_duration","ends_off_map","ends_off_map","event","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","make_table","new_state","panel","parking_duration","percent_overhead","produce_raw_data","starts_off_map","starts_off_map","tab","table","total_duration","trip","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","walking_duration","Filter","RiskSummaries","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","draw","event","export_problems","from","from","include_no_changes","include_no_changes","includes_mode","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","modes","new_state","panel","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","RectangularSelector","as_any","as_any_mut","borrow","borrow_mut","corners","draw","event","from","into","into_any","into_any_rc","new_state","panel","region","try_from","try_into","type_id","vzip","Demand","TrafficSignalDemand","all_demand","all_demand","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","count","draw","draw_baselayer","event","from","from","hour","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","new_state","panel","raw","rebuild_world","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","world","Filter","TravelTimes","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","changes_pct","contingency_table","draw","event","export_times","from","from","get_trips","include_no_changes","include_no_changes","includes_mode","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","make_panel","modes","new","new_state","panel","pct_diff","scatter_plot","summary_boxes","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CLEAR_COLOR_SCALE","Matrix","MatrixOptions","TripProblemFilter","__private_field","add_pt","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bucketize_isizes","buckets_x","buckets_y","color_scale_for_bucket","deref","draw","entries","finished_trip_count","fmt_y_axis","from","from","from","idx","include_no_changes","includes_mode","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","new","problem_matrix","tooltip_for_bucket","total_height","total_width","trip_problems","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","CancelledTrip","Filters","FinishedTrip","TripTable","UnfinishedTrip","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancelled_trips_table","departure","departure","departure","draw","duration_after","duration_before","duration_before","duration_before","end","end","ends_in","event","finished_trips_table","from","from","from","from","from","id","id","id","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","make_table_cancelled_trips","make_table_finished_trips","make_table_unfinished_trips","mode","mode","mode","modes","modified","modified_trips","new","off_map_ends","off_map_starts","panel","percent_waiting","produce_raw_data","reason","recompute_filters","start","start","starts_in","tab","table_tabs","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unfinished_trips_table","unmodified_trips","vzip","vzip","vzip","vzip","vzip","waiting","Actdev","FinalScore","FixTrafficSignals","Freeform","Future","GameplayMode","GameplayState","LoadScenario","Nothing","OptimizeCommute","Path","PlayScenario","Scenario","Tutorial","Tutorial","TutorialPointer","TutorialState","actdev","allows","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","can_edit_roads","can_edit_stop_signs","can_examine_objects","can_jump_to_time","can_move_canvas","challenge_header","chose_back_to_challenges","chose_next","clone","clone_into","cmp","commute","downcast","downcast_mut","downcast_rc","downcast_ref","draw","draw","eq","equivalent","event","event","fix_traffic_signals","freeform","from","from","from","has_common","has_minimap","has_time_panel","has_tool_panel","initialize","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is","map_name","ne","new_state","next_mode","on_destroy","panel","partial_cmp","play_scenario","recreate_panels","retry","scenario","spawn_agents_around","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","tutorial","type_id","type_id","type_id","vzip","vzip","vzip","0","0","0","0","0","1","1","1","2","2","0","0","0","About","Actdev","as_any","as_any","as_any_mut","as_any_mut","bg_traffic","borrow","borrow","borrow_mut","borrow_mut","draw","draw","event","find_active_trip","from","from","has_tool_panel","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","new_state","on_click","once","recreate_panels","scenario_name","top_right","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","OptimizeCommute","as_any","as_any_mut","borrow","borrow_mut","cutscene_pt1","cutscene_pt2","cutscene_task","done","draw","event","final_score","from","get_score","goal","into","into_any","into_any_rc","mode","new_state","once","person","recreate_panels","time","top_right","trips","try_from","try_into","type_id","vzip","FixTrafficSignals","THRESHOLD","as_any","as_any_mut","borrow","borrow_mut","cutscene_pt1","cutscene_pt1_task","done_at","draw","event","final_score","from","into","into_any","into_any_rc","mode","new_state","on_destroy","recreate_panels","time","top_right","try_from","try_into","type_id","vzip","worst","ChangeScenario","Freeform","actions","area_spawner","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","draw","draw","event","execute","from","from","importers","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","new_state","new_state","on_click","recreate_panels","spawn_agents_around","spawner","top_right","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","Area","AreaSpawner","DrawingArea","Mode","Neutral","Obj","PickingDestination","SelectRectangle","areas","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borders","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buildings","clone","clone_into","draw","draw","eq","equivalent","event","event","fmt","from","from","from","from","from","get_hash","get_hash","hash","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","mode","ne","new","new","new_state","panel","polygon","preview","pt1","rebuild_world","rect","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","world","0","source","Input","as_any","as_any_mut","borrow","borrow_mut","deserialize","from","import_grid2demand","import_json","import_json_scenario","into","into_any","into_any_arc","into_any_rc","people","scenario_name","try_from","try_into","type_id","vzip","AgentSpawner","as_any","as_any_mut","borrow","borrow_mut","confirmed","draw","event","from","goal","into","into_any","into_any_rc","new_state","panel","start","try_from","try_into","type_id","vzip","ChangeMode","CountTrips","DepartureSummary","EditScenarioModifiers","PlayScenario","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","count","count_trips","departures_per_mode","draw","draw","draw","event","event","event","first_trip","from","from","from","from","from","get_filters","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","modifiers","modifiers","modifiers","new","new_state","new_state","new_state","new_state","on_click","on_destroy","panel","panel","recalc_count","recreate_panels","scenario_name","scenario_name","scenario_name","top_right","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","CAR_BIKE_CONTENTION_GOAL","Camera","Done","ESCORT","Escort","FixBikes","InspectObjects","LowParking","Message","Nil","PauseResume","Stage","Task","TimeControls","Tutorial","TutorialPointer","TutorialState","WatchBikes","actions","aligned","arrow","arrow","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bldg","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_examine_objects","can_move_canvas","car_parked","clone","clone","clone_into","clone_into","cmp","current","custom_spawn","custom_spawn","draw","dynamic_arrow","eq","eq","equivalent","event","execute","fire_station","following_car","from","from","from","from","from","from","has_common","has_minimap","has_time_panel","has_tool_panel","icon","icon","initialize","inner_event","inspected_bike_lane","inspected_border","inspected_building","inspected_stop_sign","interaction","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","intro_story","label","last_finished_task","left_aligned","make_bike_lane_scenario","make_gameplay","make_scenario","make_state","make_top_right","message","messages","msg","msg_panel","ne","new","new","new","new","next","num_pauses","parking_found","part","partial_cmp","partial_cmp","prank_done","prev","recreate_panels","reset_state","scenario","scenario","scenarios_to_prebake","score_delivered","stage","stage","stages","start","task","to_owned","to_owned","top_right","top_txt","transition","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","txt","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","warp_to","warp_to","warped","was_paused","window_dims","MinimapController","as_any","as_any_mut","borrow","borrow_mut","draw_extra","from","has_layer","has_zorder","into","into_any","into_any_arc","into_any_rc","make_agent_toggles","make_legend","make_tool_panel","make_unzoomed_panel","make_zoomed_side_panel","panel_changed","panel_clicked","try_from","try_into","type_id","vzip","RoutePreview","TrafficRecorder","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","draw","draw","event","event","from","from","into","into","into_any","into_any","into_any_rc","into_any_rc","make_btn","members","new","new_state","panel","preview","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Fast","Faster","Fastest","Realtime","SpeedSetting","TimePanel","as_any","as_any","as_any_mut","as_any_mut","baseline_finished_trips","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create_time_panel","draw","eq","event","from","from","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","is_paused","new","override_height","panel","partial_cmp","pause","paused","recreate_panel","resume","setting","time","to_owned","trips_completion_bar","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","JumpToTime","TimeWarpScreen","area_under_curve","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","build_jump_to_delay_button","build_jump_to_time_btn","compare_count","draw","draw","draw_baselayer","event","event","from","from","halt_upon_delay","into","into","into_any","into_any","into_any_rc","into_any_rc","maybe_mode","new_state","new_state","on_destroy","panel","panel","sim_time_started","tabs","target","target","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","wall_time_started","AddLanes","Explore","ExploreMap","Layers","ModeShiftData","PredictImpact","RoutingPreferences","Tab","TakeLayers","Trip","as_any","as_any_mut","bike_network","borrow","borrow_mut","eq","explore","from","handle_action","into","into_any","into_any_arc","into_any_rc","layers","make_left_panel","predict","quick_sketch","take_layers","trip","try_from","try_into","type_id","vzip","DEDICATED_TRAIL","DrawNetworkLayer","GREENWAY","PAINTED_BIKE_LANE","PROTECTED_BIKE_LANE","__private_field","__private_field","__private_field","__private_field","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","draw","draw_intersections","draw_roads","from","from","from","from","from","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_greenway","new","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","ExploreMap","as_any","as_any_mut","borrow","borrow_mut","draw","event","from","into","into_any","into_any_rc","layers","new_state","take_layers","top_panel","try_from","try_into","type_id","vzip","Layers","as_any","as_any_mut","bike_network","borrow","borrow_mut","draw","elevation","event","fade_map","from","highlight_road_type","into","into_any","into_any_rc","labels","layer_icon_pos","legend_btn","make_legend","make_zoom_controls","map_edit_key","minimized","new","panel","road_types","show_panel","steep_streets","try_from","try_into","type_id","update_panel","vzip","zoom_enabled_cache_key","zoom_enabled_cache_key","CandidateTrip","Filters","ModeShiftData","NetworkGaps","Results","ShowGaps","all_candidate_trips","annual_co2_emissions_tons","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bike_req","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","count_per_road","default","default","describe","draw","draw","driving_distance","empty","estimated_biking_time","event","filtered_trips","filters","from","from","from","from","from","from","from_controls","from_scenario","gaps","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","layers","make_top_panel","max_biking_time","max_elevation_gain","new_state","num_trips","pct","recalculate_gaps","results","take_layers","to_controls","tooltip","top_panel","total_driving_distance","total_elevation_gain","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","QuickSketch","as_any","as_any_mut","borrow","borrow_mut","draw","event","from","into","into_any","into_any_rc","layers","make_quick_changes","map_edit_key","new_state","proposal_management","route_sketcher","take_layers","top_panel","try_from","try_into","type_id","update_top_panel","vzip","AltRoute","ID","MainRoute","RoutingPreferences","TripPlanner","Waypoint","alt_routes","app_session_current_trip_name","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","avoid_hills","avoid_stressful_roads","before_after_button","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","draw","eq","eq","equivalent","event","files","fmt","from","from","from","get_hash","get_hash","hash","input_panel","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","layers","main_route","mut_files","name","ne","ne","new_state","on_destroy","recalculate_routes","results","routing_params","sync_from_file_management","take_layers","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_input_panel","vzip","vzip","vzip","waypoints","world","0","0","BuiltRoute","RouteDetails","RouteStats","alt_route","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","closest_path_segment","compare_routes","details","details_widget","dist_along_high_stress_roads","draw","draw","draw_high_stress","draw_traffic_signals","draw_unprotected_turns","eq","event","from","from","from","hitboxes","hover_on_line_plot","hover_on_route_tooltip","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","main_route","make_detail_widget","ne","new_route","num_traffic_signals","num_unprotected_turns","paths","preferences","stats","tooltip_for_alt","total_distance","total_down","total_time","total_up","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["game","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::Mode","","","","game::appgame::challenges","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::challenges::cutscene","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::challenges::cutscene::Layout","","game::challenges::prebake","game::common","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::common::route_sketcher","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::common::route_sketcher::Mode","","","game::common::select","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::common::select::Mode","","game::common::share","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::common::warp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::debug","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::debug::blocked_by","","","","","","","","","","","","","","","","","","","","","","","","","game::debug::blockfinder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::debug::floodfill","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::debug::floodfill::Source","game::debug::objects","","","","","","","","","","","","","","","","","game::debug::path_counter","","","","","","","","","","","","","","","","","","","","game::debug::polygons","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::debug::polygons::Item","","","game::debug::routes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::debug::select_roads","","","","","","","","","","","","","","","","","","","game::debug::uber_turns","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::devtools","","","","","","","","","","","","","","","","","","","","","","","game::devtools::collisions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::devtools::compare_counts","","","","","","","","","","","","","","","","","","game::devtools::destinations","","","","","","","","","","","","","","","","","","","","game::devtools::kml","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::devtools::polygon","","","","","","","","","","","","","","","","","","","game::devtools::scenario","","","","","","","","","","","","","","","","","","","game::devtools::story","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::edit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::edit::crosswalks","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::edit::multiple_roads","","","","","","","","","","","","","","","","","","","","","","","","","","game::edit::roads","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::edit::routes","","","","","","","","","","","","","","","","","","game::edit::stop_signs","","","","","","","","","","","","","","","","","","","","","","","game::edit::traffic_signals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::edit::traffic_signals::edits","","","","","","","","","","","","","","","","","","","","","game::edit::traffic_signals::gmns","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::edit::traffic_signals::offsets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::edit::traffic_signals::picker","","","","","","","","","","","","","","","","","","","","game::edit::traffic_signals::preview","","","","","","","","","","","","","","","","","","","game::edit::validate","","","game::edit::zones","","","","","","","","","","","","","","","","","","","","","","","game::info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::info::Tab","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::info::building","","","","","","game::info::debug","","game::info::intersection","","","","","","","","","","","","","","","game::info::lane","","","","","","","","","game::info::parking_lot","","","game::info::person","","","","","","","","","","","","","game::info::transit","","","","","","","","game::info::trip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::layer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::layer::LayerOutcome","","game::layer::elevation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::layer::favorites","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::layer::map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::layer::pandemic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::layer::parking","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::layer::parking::Loc","","","game::layer::population","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::layer::problems","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::layer::problems_diff","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::layer::traffic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::layer::transit","","","","","","","","","","","","","","","","","","","","game::pregame","","","","","","","","","","","","","","","","","game::pregame::proposals","","","","","","","","","","","","","","","","","","","game::sandbox","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::LoadStage","","","","game::sandbox::dashboards","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards::commuter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards::commuter::BlockSelection","","","game::sandbox::dashboards::generic_trip_table","","","game::sandbox::dashboards::misc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards::mode_shift","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards::parking_overhead","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards::risks","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards::selector","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards::traffic_signals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards::travel_times","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards::trip_problems","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards::trip_table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::gameplay","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::gameplay::GameplayMode","","","","","","","","","","game::sandbox::gameplay::LoadScenario","","","game::sandbox::gameplay::actdev","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::gameplay::commute","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::gameplay::fix_traffic_signals","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::gameplay::freeform","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::gameplay::freeform::area_spawner","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::gameplay::freeform::area_spawner::Mode","","game::sandbox::gameplay::freeform::importers","","","","","","","","","","","","","","","","","","","","game::sandbox::gameplay::freeform::spawner","","","","","","","","","","","","","","","","","","","","game::sandbox::gameplay::play_scenario","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::gameplay::tutorialgame::sandbox::minimap","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::misc_tools","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::speed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::time_warp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::ungap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::ungap::bike_network","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::ungap::explore","","","","","","","","","","","","","","","","","","","game::ungap::layers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::ungap::predict","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::ungap::quick_sketch","","","","","","","","","","","","","","","","","","","","","","","","game::ungap::trip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::ungap::trip::ID","","game::ungap::trip::results","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","Start in ActDev mode for a particular site name.","Start by showing an ActDev scenario. Either “base” or …","","","","","","","","","","","","","","Initially position the camera here. The format is an …","","Start playing a particular challenge","","Start by listing gameplay challenges","","The color scheme for map elements, agents, and the UI.","","Start in a tool for comparing traffic counts","","","Dev mode exposes experimental tools useful for debugging, …","This directory contains extra/experimental tools not …","Start by listing internal developer tools","","Load the map at this path as a secondary debug map to …","Print raw widgetry events to the console for debugging","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Start by showing this KMl file in a debug viewer","","When making a screen recording, enable this option to hide …","","","","Run a configured set of simulations and record prebaked …","","Start by showing community proposals","","","Start in the simulation sandbox mode","Override the monitor’s auto-detected scale factor","","","Start the simulation at this time","","Start with these map edits loaded. This should be the name …","","","","","","","Start on a particular tutorial stage","Start at the tutorial intro screen","","","","","Launch Ungap the Map, a bike network planning tool","","","","","","","","The top-level data that lasts through the entire game, no …","","","All of the state that’s bound to a specific map.","","","","","","","Load an extra GeoJSON file, and add the area to the map …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ensure the map edits are blank, reset the simulation, and …","Returns whatever was there","","If an intersection was clicked, return its ID.","","","","","","","","","If we ever left edit mode and resumed without restarting …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Any ScenarioModifiers in effect?","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Is this the original “secondary” state, loaded via –…","","","","","","","","If true, all map edits immediately apply to the live …","","","","","","","","","","","","","","","","","","","","","","Only exists in some gameplay modes. Must be carefully …","State (like the simulation and drawing stuff) associated …","Assumes some defaults.","","","","","The most recent Scenario loaded from a file. Don’t …","Represents state for a different version of the <code>primary</code> …","Static data that lasts the entire session. Use sparingly.","","","","","","","","","","","","","","","Display an extra area with this name on the map. This gets …","Only filled out in edit mode. Stored here once to avoid …","This swaps the primary and secondary PerMaps. Depending on …","","","","","","","","","","","","","","","","","","","","","","","","","","","If the map has been edited and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Allow toggling of dev mode and warping to an object by ID.","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","If you want a simulation to start after midnight, pass the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","True if the route changed","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Has the user even picked a start point?","Has the user specified a full route?","","","","","","","","True if something changed. False if this component doesn’…","","","","","","","","","","","","","","","","","","","","","","","","Click and drag to unselect roads","","Click and drag to select roads","No selecting, just normal click-and-drag controls.","A tool for selecting multiple roads.","The user is choosing two intersections, to select the …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Intersections can’t be selected directly. If all roads …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","This will point to a URL with the new edits and the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Visualize the graph of what agents are blocked by others.","","","","","","","","","","Trace the root cause for everyone, find the most common …","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","Figure out why some agent is blocked. Draws an arrow for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","A state to count the number of trips that will cross …","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","See how live-tuned routing parameters affect all requests …","Evaluate why an alternative path wasn’t chosen, by …","See how live-tuned routing parameters affect a single …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the indices of all matching collisions","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Loads and clips objects to the current map. Also returns …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","A simple tool to place markers and free-hand shapes over a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","After a single road has been edited, these states let the …","","","Mode is just used for <code>allows</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","Always starts focused on a certain lane.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Snaps a line to a vehicle movement across an intersection. …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","This imports timing.csv from …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Looks at all changed roads and makes sure sidewalk …","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draw extra things when unzoomed or zoomed.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","When a button with this label is clicked, open this info …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","When a button with this label is clicked, time-warp and …","","","","","","","","Show these tooltips over the map. If the tooltip is …","","","","","","","","","","","","","","","","","","","","","","","","","When a button with this label is clicked, warp to this ID.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","Draws the timeline for a single trip, with tooltips","Creates the timeline, location warp, and time warp buttons …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Creates the top row for any layer panel.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Also returns the steepest street and a row explaining the …","","Returns the colored categories used and a row explaining …","","","","","","","","","","","","","","","","","A set of buildings that the player has starred, persisted …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This does not immediately initialize anything (like …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If you don’t need to chain any transitions after the …","","","","Assumes that the map and simulation have already been set …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Aka a 2D histogram. Tracks matching IDs in each cell.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","The caller should handle Outcome::ClickCustom with Vec for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a boxed object from a boxed trait object if the …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Must be called after the scenario has been setup. The …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Returns true if the trait object wraps an object of type …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A gameplay mode with specific controls for integration with","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","True if done","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Idempotent. This must be called before <code>make_gameplay</code> or …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Launches the tutorial gameplay along with its cutscene","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","<code>is_enabled</code>: are (car, bike, bus, pedestrian) toggles …","","","","","","","","","","","Draws a preview of the path for the agent under the mouse …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","5 sim seconds per real second","30 sim seconds per real second","1 sim hour per real second","1 sim second per real second","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Shows the bike network while unzoomed. Handles thickening …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","A bottom-right panel for managing a bunch of toggleable …","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A temporary structure that the caller should unpack and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","“main” is determined by <code>app.session.routing_preferences</code>","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,12,12,12,12,12,0,12,12,0,12,12,12,16,16,0,6,16,12,6,16,12,6,16,12,6,16,12,16,6,16,0,16,16,16,0,16,0,0,16,0,16,6,16,16,0,12,0,6,16,6,16,12,16,0,6,6,16,12,6,16,12,6,16,12,6,16,12,0,16,0,16,6,12,6,16,0,16,0,0,16,16,0,6,16,6,16,6,16,12,6,16,12,16,16,6,16,12,0,16,6,16,12,347,348,349,348,0,0,0,0,0,0,0,0,0,0,0,7,4,43,44,7,38,45,50,33,4,43,44,7,38,45,50,33,4,4,4,43,44,7,38,45,50,33,4,43,44,7,38,45,50,33,38,4,7,33,4,7,45,4,33,33,4,4,7,7,50,38,7,4,4,4,7,4,4,38,38,4,4,43,44,7,38,45,50,33,33,4,50,7,4,38,38,7,4,43,44,7,38,45,50,33,4,43,44,7,38,45,50,33,43,44,45,50,33,4,43,44,7,38,45,50,33,7,38,7,7,27,44,44,45,33,4,4,7,7,4,38,4,4,4,4,4,4,4,4,43,44,45,4,4,4,4,7,4,4,50,45,38,50,7,4,4,4,27,44,43,43,43,43,43,43,4,7,7,33,4,33,7,4,33,4,43,44,7,38,45,50,33,4,43,44,7,38,45,50,33,38,4,43,44,7,38,45,50,33,7,38,4,43,44,7,38,45,50,33,0,0,0,51,51,51,57,54,51,57,54,51,57,54,51,57,54,54,0,51,51,57,51,51,57,54,51,57,51,57,54,51,57,54,51,57,54,51,57,54,54,54,54,54,0,57,57,51,51,57,54,51,57,54,51,57,54,51,57,54,350,0,0,350,0,350,0,0,58,350,351,60,61,58,350,351,60,61,58,350,351,60,61,58,350,351,60,61,58,58,60,61,60,61,58,58,58,350,351,60,61,60,58,350,351,60,61,58,350,351,60,61,58,350,351,58,350,351,60,61,351,0,60,351,58,60,58,61,60,61,58,58,60,58,350,351,60,61,58,350,351,60,61,58,350,351,60,61,58,350,351,60,61,352,352,0,0,0,0,0,69,69,69,69,69,0,0,0,69,69,69,69,69,69,69,69,69,69,69,0,69,0,69,69,0,0,0,0,0,69,69,69,69,0,0,78,78,0,0,78,0,0,75,76,76,75,78,76,75,78,76,75,78,76,75,78,75,78,75,78,76,75,78,76,76,75,78,75,76,75,76,75,78,76,75,78,75,78,76,75,78,76,76,76,76,75,75,78,76,75,76,76,76,76,75,78,76,75,78,76,75,78,76,75,78,76,76,76,75,78,75,353,354,354,355,0,355,355,0,355,79,355,79,355,79,355,79,355,79,79,79,79,355,79,79,355,79,355,79,355,79,79,79,79,79,79,79,355,79,355,79,355,79,355,356,356,0,0,0,81,80,81,80,81,80,81,80,80,81,80,81,80,81,80,81,80,81,80,81,80,80,80,81,81,80,80,81,80,81,80,81,80,81,81,81,80,0,0,0,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,0,84,85,84,85,84,84,85,84,85,85,84,85,84,85,84,85,84,85,0,84,0,0,0,0,0,86,88,88,357,86,89,88,357,86,89,0,0,88,357,86,89,88,357,86,89,0,88,0,88,89,357,0,0,0,88,88,89,86,0,0,0,0,88,357,86,89,86,88,88,88,357,86,89,88,357,86,89,86,89,88,357,86,89,86,88,88,88,89,357,0,88,88,0,0,357,0,88,0,89,0,88,0,88,89,88,88,357,86,89,88,357,86,89,88,357,86,89,0,88,357,86,89,0,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,98,0,0,0,0,0,0,97,97,97,102,98,97,102,98,102,97,97,102,98,97,102,98,98,98,98,97,102,102,98,98,97,98,97,102,98,98,98,98,97,97,102,98,97,102,98,98,97,102,98,0,98,97,97,102,102,102,97,98,97,97,98,97,102,98,97,102,98,97,102,98,97,102,98,97,104,0,104,0,106,104,106,104,106,104,106,104,104,104,104,106,106,106,106,106,104,106,104,106,104,104,106,104,106,106,106,106,104,106,104,106,104,106,104,106,104,358,0,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,0,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,0,111,111,0,111,110,111,110,111,110,111,110,111,110,110,110,110,111,110,110,111,110,111,111,110,111,110,110,110,110,110,111,110,111,110,111,110,111,359,360,361,0,0,0,114,115,116,114,115,116,115,114,115,116,114,115,116,0,0,116,115,114,115,116,115,116,114,115,116,114,115,116,114,114,115,116,114,115,116,114,115,116,116,114,115,114,115,116,0,114,115,114,115,116,114,115,116,114,115,116,114,115,116,114,115,116,0,122,122,122,122,122,122,122,122,122,122,0,122,122,122,122,122,122,122,0,0,123,124,123,124,123,124,123,124,123,124,124,124,123,124,124,124,123,124,123,124,123,123,124,124,123,123,124,123,124,123,123,124,124,123,124,123,124,123,124,123,124,0,125,125,125,125,0,0,0,125,125,125,125,125,0,125,125,0,0,0,125,125,125,125,0,0,0,129,130,129,130,129,130,129,130,129,130,130,129,130,130,129,129,0,130,129,130,129,129,130,129,129,129,129,130,130,0,129,129,129,130,129,130,129,130,129,130,129,130,0,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,0,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,0,0,0,0,136,138,136,138,138,136,138,136,138,138,136,136,136,136,136,138,136,138,136,138,138,136,138,0,0,0,136,136,138,136,0,138,136,136,136,138,136,138,136,138,136,138,0,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,0,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,142,0,0,0,0,0,0,0,144,147,362,146,145,142,143,144,147,362,146,145,142,143,144,147,362,146,145,142,143,144,147,362,146,145,142,143,142,143,142,143,143,144,144,145,144,146,145,142,142,144,145,142,144,147,362,146,145,142,143,144,142,142,142,146,144,147,362,146,145,142,143,144,147,362,146,145,142,143,147,362,146,145,142,143,144,147,362,146,145,142,143,362,145,147,147,143,147,143,142,147,145,144,146,146,144,362,144,144,147,143,144,142,143,144,147,362,146,145,142,143,144,147,362,146,145,142,143,144,147,362,146,145,142,143,144,147,362,146,145,142,143,144,0,0,0,0,0,0,0,0,0,149,150,151,152,149,150,151,152,149,150,151,152,149,150,151,152,0,150,149,0,0,0,0,150,152,149,150,151,152,149,149,150,151,152,149,150,151,152,149,150,151,152,149,150,151,152,149,150,151,152,0,0,149,0,149,151,0,149,150,151,152,150,149,149,150,151,152,149,150,150,0,0,0,0,149,149,0,149,150,151,152,149,150,151,152,149,150,151,152,0,149,150,151,152,0,155,0,0,156,155,156,155,156,155,156,155,155,155,156,155,155,156,155,156,155,155,155,155,156,156,155,156,155,155,156,155,155,156,156,155,156,155,156,155,156,155,156,155,156,0,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,0,160,160,160,160,0,0,160,160,160,0,160,160,0,160,160,160,160,160,160,160,160,0,160,0,0,160,160,160,160,160,160,160,160,160,160,160,0,160,160,160,160,160,0,0,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,0,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,0,0,168,169,168,169,168,169,168,169,168,169,168,0,169,169,168,169,168,168,168,168,0,0,169,168,0,168,168,169,169,0,168,169,168,169,169,168,169,0,0,168,168,168,168,169,168,0,168,0,0,168,168,168,169,0,169,169,168,168,168,169,168,169,168,169,168,168,169,168,0,170,170,170,170,170,0,170,170,170,170,170,170,170,170,170,170,170,170,170,170,0,0,0,174,173,174,173,174,173,174,173,0,173,173,174,173,173,174,173,0,0,174,173,174,173,174,173,174,173,174,173,174,173,0,0,173,174,174,173,173,174,173,174,173,174,173,174,173,0,0,0,178,179,180,178,179,180,179,178,179,180,178,179,180,178,179,180,178,179,180,180,180,178,179,180,178,179,180,178,179,180,178,179,180,178,179,180,178,179,180,178,179,180,178,179,178,179,180,178,179,180,178,179,180,178,179,180,178,179,180,0,181,181,181,181,181,181,181,181,181,181,0,181,181,181,181,181,181,181,181,0,182,182,182,182,182,182,182,182,182,182,0,182,182,182,182,182,182,182,0,0,0,0,183,183,183,183,183,183,183,0,183,183,183,183,183,0,183,183,183,183,183,183,183,183,73,73,73,0,73,0,0,0,73,73,73,73,73,73,73,73,73,73,73,0,73,73,73,73,73,0,0,73,73,73,71,184,184,184,191,73,185,186,184,191,73,185,186,184,191,73,185,186,184,191,73,185,186,0,184,191,73,73,185,186,73,185,186,0,0,185,186,185,186,0,184,184,191,185,186,184,71,184,191,73,185,186,185,186,73,71,0,184,191,0,184,191,73,185,186,184,191,73,185,186,191,73,185,186,184,191,73,185,186,71,184,0,0,0,185,186,184,185,186,184,0,0,0,185,186,185,186,184,0,184,184,191,185,186,73,73,185,186,184,191,0,0,184,191,73,185,186,184,191,73,185,186,184,191,73,185,186,73,184,191,73,185,186,184,191,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,363,376,377,379,381,384,385,377,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,199,199,199,199,0,199,199,0,0,0,199,0,199,0,199,199,199,199,0,0,0,199,0,199,199,199,199,199,199,199,206,0,0,0,0,206,206,206,205,206,205,206,205,206,205,386,205,205,386,0,386,205,0,206,205,0,206,205,206,205,206,205,0,386,0,205,0,205,0,0,0,386,0,0,206,205,206,205,206,205,205,206,205,387,388,0,0,0,0,207,208,207,208,207,208,207,208,208,207,208,207,208,207,208,207,208,207,208,207,208,207,208,207,208,207,208,207,207,208,207,208,207,208,207,208,207,208,207,208,207,208,207,208,0,0,209,210,209,210,209,210,209,210,209,209,209,209,210,210,210,210,210,209,210,209,210,209,209,210,209,209,210,210,210,209,209,209,210,209,210,209,210,209,210,209,0,0,211,212,211,212,211,211,212,211,212,211,212,211,212,211,212,211,211,212,211,212,211,211,212,211,212,211,212,211,212,211,211,212,211,211,212,211,212,212,212,211,212,211,212,211,212,211,214,214,214,0,0,214,214,0,216,214,215,216,214,215,216,214,215,216,214,215,214,215,214,215,216,216,216,214,215,216,214,216,214,215,215,216,214,215,216,214,215,214,215,216,214,215,0,216,215,216,216,216,216,215,216,214,215,216,214,215,216,214,215,216,214,215,216,214,215,217,0,0,217,0,217,218,219,217,218,219,217,218,219,217,218,219,217,217,217,217,218,219,218,219,218,219,217,217,218,219,218,219,217,218,218,219,217,218,219,217,217,218,219,217,218,218,218,219,217,218,219,217,218,218,219,217,218,218,219,217,218,219,217,218,219,217,218,219,217,218,219,217,389,390,391,0,0,222,221,222,221,222,221,222,221,221,221,222,222,222,221,222,222,221,221,222,221,222,221,221,222,221,0,222,221,222,222,222,222,222,221,222,221,222,221,222,221,222,221,0,0,224,223,224,223,224,223,224,223,223,223,224,224,224,223,224,0,224,223,223,224,223,224,223,223,224,223,0,223,224,223,224,223,224,224,224,223,224,223,223,223,224,223,224,223,224,223,223,224,223,0,0,0,227,227,227,226,227,226,227,227,227,226,227,226,226,226,226,227,227,227,226,227,227,226,226,227,226,227,226,226,227,226,0,227,226,227,226,227,227,226,227,226,226,227,227,226,227,226,227,226,227,226,0,0,0,0,0,0,0,228,230,228,229,230,231,232,228,233,234,229,230,231,232,228,233,234,229,230,231,232,228,233,234,229,230,231,232,228,233,234,0,229,230,231,232,233,234,229,230,231,232,233,229,230,231,232,233,234,228,229,230,231,232,233,234,0,229,230,231,232,228,233,234,229,230,231,232,228,233,234,229,230,231,232,228,233,234,228,229,230,231,232,228,233,234,228,229,230,231,232,233,234,229,230,231,232,233,234,229,230,231,232,233,234,229,230,231,232,233,234,230,231,229,230,231,232,228,233,234,229,230,231,232,228,233,234,229,230,231,232,228,233,234,229,230,231,232,228,233,234,234,0,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,0,392,392,392,392,0,392,392,392,392,392,392,0,392,392,392,392,0,237,237,237,237,237,237,237,237,237,237,0,237,237,237,237,237,237,237,0,0,393,0,393,393,0,393,393,393,0,0,0,0,0,0,0,0,0,238,239,243,240,238,393,241,239,243,240,238,393,241,239,239,243,240,238,393,241,239,243,240,238,393,241,238,243,239,239,0,239,240,241,239,240,241,238,241,239,243,240,238,393,241,0,239,238,238,239,239,243,240,238,393,241,239,243,240,238,393,241,240,238,393,239,243,240,238,393,241,0,238,238,239,0,0,243,0,241,0,243,239,239,243,243,239,0,0,241,239,243,0,243,239,243,240,238,393,241,239,243,240,238,393,241,239,243,240,238,393,241,239,243,240,238,393,241,394,395,396,396,244,0,244,0,244,244,244,0,244,244,244,244,244,244,244,244,244,244,0,244,244,244,0,244,244,244,244,244,0,0,0,244,0,0,244,244,0,244,0,0,0,244,244,244,244,0,0,0,0,248,0,0,248,246,0,246,248,0,246,245,252,249,248,251,246,250,245,252,249,248,251,246,250,245,249,251,245,245,249,245,252,249,248,251,246,250,245,252,249,248,251,246,250,245,0,252,246,246,245,245,250,250,245,245,246,250,245,245,245,252,249,248,251,246,250,250,0,249,250,245,252,249,248,251,246,250,245,252,249,248,251,246,250,252,249,248,251,246,250,245,252,249,248,251,246,250,0,252,250,246,250,245,245,0,251,245,251,249,246,252,245,245,245,252,249,248,251,246,250,245,252,249,248,251,246,250,245,252,249,248,251,246,250,245,252,249,248,251,246,250,397,398,398,0,0,0,0,0,253,254,253,254,253,254,253,254,0,253,254,253,254,253,254,253,254,253,254,253,254,253,254,253,254,253,254,253,254,253,254,253,254,0,0,0,255,256,257,255,256,257,255,256,257,255,256,257,256,255,256,256,255,255,256,257,255,256,257,255,256,257,256,257,255,256,257,0,257,257,257,257,255,255,0,0,255,255,255,256,256,256,255,256,257,255,256,257,255,256,257,255,256,257,0,0,0,259,260,261,259,260,261,259,260,261,259,260,261,259,260,260,261,259,259,260,261,259,260,261,259,260,261,260,261,259,260,261,0,259,259,260,260,0,260,261,259,259,260,260,259,260,261,259,260,261,259,260,261,259,260,261,260,0,0,262,263,262,263,262,263,262,263,262,262,0,262,263,263,263,263,262,263,262,263,263,262,263,263,262,262,262,263,262,263,262,263,262,263,0,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,0,0,266,267,267,266,267,266,267,266,267,266,266,267,267,267,267,266,267,267,266,267,266,266,267,266,267,267,266,267,267,266,267,266,267,266,267,266,267,0,0,269,268,269,268,269,268,269,268,268,0,269,269,0,269,268,268,268,268,268,269,268,269,268,268,269,268,269,268,268,269,269,0,0,0,269,268,269,268,269,268,269,268,0,0,0,0,276,275,275,278,276,275,278,276,275,278,276,275,278,276,0,275,275,278,276,275,275,399,278,275,278,276,275,399,399,275,278,276,275,278,276,275,276,275,278,276,275,0,278,278,278,399,275,278,276,275,278,276,275,278,276,275,278,276,0,0,0,0,0,279,282,280,283,281,279,282,280,283,281,279,282,280,283,281,279,282,280,283,281,279,282,280,283,279,282,282,280,283,282,280,281,279,279,279,282,280,283,281,282,280,283,279,282,280,283,281,279,282,280,283,281,282,280,283,281,279,282,280,283,281,0,0,0,282,280,283,281,282,281,279,281,281,279,282,0,280,279,282,280,281,279,279,279,282,280,283,281,279,282,280,283,281,279,282,280,283,281,279,281,279,282,280,283,281,282,53,0,53,53,286,0,0,0,286,53,286,53,286,0,53,0,0,0,53,286,284,53,286,284,53,286,284,53,286,284,53,53,53,242,53,242,0,284,284,53,53,53,0,242,242,242,242,242,284,53,53,242,284,0,0,286,284,53,242,242,242,242,53,286,284,53,286,284,53,53,286,284,53,242,53,53,284,284,242,284,53,0,242,284,53,0,53,286,284,53,286,284,53,0,286,284,53,286,284,53,400,401,402,403,404,401,402,403,401,403,405,406,407,0,0,287,288,287,288,287,287,288,287,288,287,288,287,0,287,288,287,287,288,287,288,288,287,288,287,288,287,287,287,287,287,288,287,288,287,288,287,288,0,289,289,289,289,289,289,0,289,289,289,0,289,0,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,0,0,291,291,291,291,291,0,291,291,291,0,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,0,0,0,0,292,293,292,293,292,293,292,293,292,293,292,0,292,293,0,292,293,292,293,293,292,293,292,293,293,292,0,0,292,292,293,292,293,292,293,292,293,294,0,0,408,0,408,0,408,0,295,295,408,296,297,294,295,408,296,297,294,297,295,408,296,297,294,295,408,296,297,294,297,294,294,295,296,294,294,295,296,294,295,408,296,297,294,294,294,294,295,408,296,297,294,295,408,296,297,294,297,294,295,408,296,297,294,295,294,296,297,295,295,297,296,296,295,296,294,295,408,296,297,294,295,408,296,297,294,295,408,296,297,294,295,408,296,297,294,295,409,410,0,298,298,298,298,298,298,0,0,0,298,298,298,298,298,298,298,298,298,298,0,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,0,0,0,0,0,301,302,303,305,300,301,302,303,305,300,301,302,303,305,300,301,302,303,305,300,300,303,300,301,302,303,301,302,303,305,301,302,303,305,300,303,301,302,303,305,300,301,302,303,305,300,305,300,301,302,303,305,300,301,302,303,300,301,302,303,305,305,301,302,303,303,301,301,302,303,301,301,302,303,305,300,301,302,303,305,300,301,302,303,305,300,301,302,303,305,300,0,312,312,0,312,312,312,312,0,312,312,0,0,312,0,0,0,312,0,306,306,306,310,313,306,314,311,312,310,313,306,314,311,312,0,310,313,306,314,311,312,310,313,306,314,311,312,310,310,314,311,312,311,312,311,314,313,313,310,306,311,312,311,310,0,314,314,310,313,306,314,311,312,310,310,310,310,306,306,310,310,314,314,314,314,314,310,313,306,314,311,312,310,313,306,314,311,312,311,312,310,313,306,314,311,312,0,312,310,306,0,310,313,314,314,314,313,313,310,311,313,306,314,311,314,314,314,311,311,312,314,314,310,314,310,313,314,314,314,311,314,310,313,311,312,310,312,0,310,313,306,314,311,312,310,313,306,314,311,312,306,310,313,306,314,311,312,310,313,306,314,311,312,313,313,310,314,314,0,316,316,316,316,316,316,316,316,316,316,316,316,0,316,0,316,316,316,316,316,316,316,316,0,0,317,318,317,318,317,318,317,318,317,318,317,318,317,318,317,318,317,318,317,318,0,318,317,318,318,317,317,318,317,318,317,318,317,318,319,319,319,319,0,0,320,319,320,319,320,320,319,320,319,319,319,320,320,319,320,320,319,320,319,320,319,319,320,319,320,320,320,320,319,320,320,320,320,320,320,319,320,320,319,320,319,320,319,320,319,0,0,0,321,322,321,322,321,322,321,322,0,0,0,321,322,322,321,322,321,322,322,321,322,321,322,321,322,321,321,322,322,321,322,322,321,321,322,321,322,321,322,321,322,321,322,322,323,323,0,0,0,323,0,0,0,323,323,323,0,323,323,323,0,323,323,323,323,323,323,0,323,0,0,411,0,323,323,323,323,0,0,0,0,0,325,326,327,328,329,325,326,327,328,329,325,326,327,328,329,325,326,327,328,329,325,326,327,328,325,326,327,328,329,329,329,329,325,326,327,328,329,325,326,327,328,329,325,326,327,328,325,326,327,328,329,325,326,327,328,0,329,329,325,326,327,328,329,325,326,327,328,329,325,326,327,328,329,325,326,327,328,0,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,0,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,0,324,0,324,324,324,324,324,324,324,324,324,324,324,324,0,324,0,0,0,0,0,0,336,334,332,335,336,333,332,412,334,335,336,333,332,412,334,333,335,336,333,332,412,334,335,336,333,332,412,334,412,332,334,334,335,412,333,336,333,335,336,336,335,336,333,332,412,334,332,336,336,335,336,333,332,412,334,335,336,333,332,412,334,333,332,334,335,336,333,332,412,334,335,0,332,332,335,334,0,336,336,335,332,335,335,334,333,335,336,333,332,412,334,335,336,333,332,412,334,335,336,333,332,412,334,335,336,333,332,412,334,0,337,337,337,337,337,337,337,337,337,337,337,0,337,337,0,337,337,337,337,337,337,337,337,339,0,339,0,0,339,341,341,341,339,340,341,339,340,340,340,0,341,339,340,341,339,340,339,340,339,340,340,341,339,340,339,341,341,339,341,339,340,339,339,339,341,341,339,340,341,339,340,339,340,341,339,340,341,341,341,340,339,340,341,341,341,0,340,341,341,339,340,341,339,340,341,339,340,341,339,340,341,341,339,340,341,341,413,414,0,0,0,343,344,343,345,344,343,345,344,343,345,344,343,345,343,0,344,344,345,343,344,343,343,343,345,343,344,343,345,344,343,343,344,343,345,344,343,345,345,344,343,345,343,0,345,343,345,345,343,343,343,344,345,345,345,345,344,343,345,344,343,345,344,343,345,344,343,345],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],2],0,0,0,[[3,4,5,6,[8,[7]]],[[11,[[10,[9]]]]]],0,0,0,0,0,0,0,0,[[12,12],5],[[3,4,5,[8,[13]],[8,[14]],6],[[11,[[10,[9]]]]]],0,0,[[]],[[]],[[]],[15,16],0,0,[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],0,0,[[]],0,0,[[12,12],5],0,0,0,0,[20],0,0,0,[[3,6]],0,0,0,0,[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,[[],22],[[],22],[[],22],0,0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[23,24],25],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[4],[[4,26]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[4,3,27,5,5,5],[[8,[28]]]],[[7,28],[[8,[29]]]],[[],2],[[4,3]],[7,13],0,[[4,3,[31,[30]]],[[8,[32]]]],[33,33],[[]],[4,34],0,0,0,0,0,0,[[4,35,36,27]],[[4,35]],[4,37],0,[[4,35,36]],[[4,26]],0,[[],38],[4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,33],[[4,39,40,41,27],[[11,[42]]]],0,0,[4,8],0,0,[[7,3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],0,0,0,0,[[],43],[44,43],0,[[45,3,[31,[30]]],5],0,[[4,3,29,[8,[46]],[8,[28]]],[[10,[9]]]],[4,23],0,[[23,13,33,47,34,3,48],7],[[4,3,23,48]],0,[[4,3,27],[[8,[28]]]],[[4,3],[[8,[28]]]],[[4,3],[[8,[28]]]],[[4,3],[[8,[28]]]],[[4,3],[[8,[28]]]],[4,34],[4,37],[4,47],[[],43],[[],44],[[],45],[4,47],0,0,[4,49],0,0,[[4,3]],0,[45],0,[[50,13,23],5],0,0,0,[[4,8]],[28,5],[[44,28],5],0,0,0,0,0,0,[4,13],0,0,0,0,0,0,[4],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],[[52,[30,[11,[51]]]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[53],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],0,[[3,4,8],[[10,[9]]]],[[3,4],[[10,[9]]]],[[54,3,4,24,55],[[56,[4]]]],0,[[57,4,53]],0,0,[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[58,[31,[30]]],58],[[58,3,[10,[59]]],[[10,[9]]]],[[60,35,4]],[[61,35,4]],[[60,3,4],[[56,[4]]]],[[61,3,4],[[56,[4]]]],[[58,24,46,[31,[30]]],58],[[],62],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],0,[[3,24,59,63],55],0,0,0,0,[24,58],[[3,64,62],[[10,[9]]]],0,0,[[58,[31,[30]]],58],0,0,[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],[[],22],[[]],[[]],[[]],[[]],[[]],0,0,[[]],0,0,0,0,[[],1],[[],1],[[]],[[]],0,[[4,65,65],[[11,[66]]]],[[4,67],62],[[4,68],62],[[3,4],[[8,[[56,[4]]]]]],[[69,35,4]],[[35,4,70]],[[35,4]],[[69,3,4,71],[[8,[[56,[4]]]]]],[[]],0,[[69,4],[[8,[28]]]],[[]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],[65,[[10,[72]]]],[[69,3,4,73,71]],[[70,59,[74,[30]]]],[[],69],[[4,28],70],0,0,0,[[3,4]],[3,55],[[],21],[[],21],[[],22],[[]],0,0,0,0,0,0,0,0,0,[[75,4,32]],[[76,4],[[11,[77]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[75,75],[78,78],[[]],[[]],[[76,35]],[[75,75],5],[[78,78],5],[[76,3,4],5],[[]],[[]],[[]],0,[[76,3],64],[[75,32],[[8,[63]]]],[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[76,5],[76,5],0,[[76,3],[[8,[32]]]],[[75,23,63,32],63],[[75,75],5],[[78,78],5],[4,76],[[],75],[[76,24],5],0,0,0,[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[76,3,4]],[[76,4]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],0,[[79,35,4,5]],[[79,3,4,[8,[24]]],5],[[]],[[]],0,[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[[79,3],64],0,[[3,4,[74,[77]]],79],0,0,[[79,3,4]],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[]],[[]],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[],[[21,[80]]]],[[81,35,4]],[[80,82],83],[[]],[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[[],80],0,[[3,4,24],[[10,[9]]]],[[81,3,4,24,55],[[56,[4]]]],[30],[80,21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],0,0,[[]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[84,35,4]],[[85,35,4]],[[84,3,4],[[56,[4]]]],[[85,3,4],[[56,[4]]]],[[]],[[]],0,[[3,4,24],[[8,[[56,[4]]]]]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[[3,29,[8,[46]],[8,[28]],7],[[10,[9]]]],[3,[[10,[9]]]],0,[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[]],[[]],[[3,4,24],[[56,[4]]]],0,0,0,0,0,0,[[86,4,28],11],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[3,4]],0,[[87,87]],[[88,35,4]],[[89,35,4]],0,[[3,4],90],[[3,4],90],[[3,4],90],[88,91],[[88,3,4],[[56,[4]]]],[[89,3,4],[[56,[4]]]],[[86,3,4,28,30,5],[[56,[4]]]],[4],[4],[4],0,[[]],[[]],[[]],[[]],[86,53],0,0,[[]],[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[86,5],[88,43],0,[[3,4],[[10,[9]]]],[[3,4,[11,[92]]],[[10,[9]]]],0,0,0,0,0,0,0,[[3,4,[8,[[11,[93]]]]],[[10,[9]]]],[[88,3]],0,0,[[30,3,4],[[56,[4]]]],0,0,[[88,28],5],0,0,[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],0,[[]],[[]],[[]],[[]],0,0,[[94,4,95],8],0,[[],1],[[],1],[[]],[[]],[[94,35,4]],[[94,3,4],[[56,[4]]]],[[94,3,4]],[[]],0,[[]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],[[3,4],[[10,[9]]]],0,0,[[94,95],96],[[94,4,95]],[[],21],[[],21],[[],22],[[]],0,0,0,0,0,0,0,[[97,3,4,98,62,99]],[[97,3,4,[11,[100]],48]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[98,98],[[]],[[98,98],101],[[97,35,4]],[[102,35,4]],0,[[98,98],5],[[],5],[[97,3,4],[[56,[4]]]],[[98,82],83],[[]],[[]],[[]],[[],103],[[],103],[98],0,[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[3,55],[[98,98],5],[97,98],[[3,4],[[10,[9]]]],[[3,4,99],[[10,[9]]]],[[102,3,4,24,55],[[56,[4]]]],[[102,3,4],[[56,[4]]]],0,[[98,98],[[8,[101]]]],0,0,[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[]],[[]],[[]],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[104,23,105]],[104,104],[[]],[[106,35,4]],0,[[106,3,4],[[56,[4]]]],[[3,4,107],[[10,[9]]]],[[]],[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[[3,4,104,105],[[10,[9]]]],0,[[3,4,107],[[10,[9]]]],0,[[]],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[]],[[]],0,0,[[],1],[[],1],[[]],[[]],[[28,23,13]],[[108,35,4]],[[28,23,13]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[[],21],[[],21],[[],22],[[]],0,[[],1],[[],1],[[]],[[]],0,[[3,4,32],[[10,[9]]]],[[109,35,4]],0,[[109,3,4],[[56,[4]]]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],0,0,[[],21],[[],21],[[],22],[[]],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],0,[[110,35,4]],[[110,3,4],[[56,[4]]]],[[]],[[]],0,[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],0,[[3,24,[11,[111]],[8,[29]]],[[10,[9]]]],0,0,[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[]],[[]],0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[[]],[[]],[[]],[[4,112,48],[[113,[77]]]],[55],0,0,[[114,35,4]],[[115,35,4]],[[116,35,4]],0,0,[[114,3,4],[[56,[4]]]],[[115,3,4],[[56,[4]]]],[[116,3,4],[[56,[4]]]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[[3,4,117,118],[[8,[[10,[9]]]]]],[[3,4,119],[[10,[9]]]],[[3,4],[[10,[9]]]],0,0,0,[[3,120,121],64],[[114,3,4]],0,0,0,0,[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[]],[[]],[[]],0,[[],1],[[],1],[[]],[[]],[[122,35,4]],[[122,3,4],[[56,[4]]]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],[[3,79],55],[[3,4,77],[[10,[9]]]],0,0,[[],21],[[],21],[[],22],[[]],0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[123,35,4]],[[124,35,4]],0,[124,91],[[]],[[]],0,0,[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],0,0,[[3,4,32],[[10,[9]]]],[[3,4,[74,[32]],63,5],[[10,[9]]]],[[123,3,4,24,55],[[56,[4]]]],[[124,3,4,24,55],[[56,[4]]]],[[123,3,4]],[[123,3,4],[[56,[4]]]],[[124,3,4],[[56,[4]]]],[[124,3,4,55],[[8,[[56,[4]]]]]],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[]],[[]],0,[[],1],[[],1],[[]],[[]],0,0,0,[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],0,[[3,4],[[10,[9]]]],[[125,3,4,24,55],[[56,[4]]]],0,0,0,[[],21],[[],21],[[],22],[[]],0,0,[[3,4,126,[11,[63]]],[[128,[127]]]],[[129,126],[[11,[63]]]],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],0,[[130,35,4]],[[129,129],5],[[130,3,4],[[56,[4]]]],[[]],[[]],[55,129],[[3,4,126,[11,[63]]],[[128,[127]]]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[3,64],[[129,129],5],[[],129],[[3,4],[[10,[9]]]],0,[[63,63],46],0,0,0,[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[]],[[]],0,0,[[],1],[[],1],[[]],[[]],0,[[131,35,4]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],[[3,4,30,30],[[10,[9]]]],[[131,3,4,24,55],[[56,[4]]]],[[131,3,4],[[56,[4]]]],[[],21],[[],21],[[],22],[[]],0,[[],1],[[],1],[[]],[[]],[[132,35,4]],0,[[132,3,4],[[56,[4]]]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],[[3,4,[113,[133]],[8,[134]]],[[10,[9]]]],[[3,4,135],[[10,[9]]]],0,0,[[],21],[[],21],[[],22],[[]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[[]],0,[[136,35,4]],0,0,[[136,3,4],[[56,[4]]]],[[]],[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[[4,[8,[30]],5,48]],[[34,137,[52,[30,30]],[11,[29]],24,63],138],[[4,24]],[[3,4,[8,[30]]],[[10,[9]]]],0,0,0,[[3,4],[[56,[4]]]],0,0,0,[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[]],[[]],0,[[],1],[[],1],[[]],[[]],[[139,35,4]],0,[[139,3,4],[[56,[4]]]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],0,[[3,4,30,[11,[140]]],[[10,[9]]]],0,[[],21],[[],21],[[],22],[[]],0,[[],1],[[],1],[[]],[[]],[[141,35,4]],0,[[141,3,4],[[56,[4]]]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],[[135,3,4],[[10,[9]]]],0,0,[[],21],[[],21],[[],22],[[]],0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[142,142],[143,143],[[]],[[]],[[],[[21,[143]]]],0,[[144,35,4]],[[145,35,4]],[144,91],[146,91],[145,91],[[142,142],5],[[],5],[[144,3,4],[[56,[4]]]],[[145,3,4],[[56,[4]]]],[[142,82],83],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[3,4,147],[[10,[9]]]],[[],103],[[],103],[142],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],0,0,[[4,143],[[8,[147]]]],0,0,0,0,[[142,142],5],[[],147],0,[[3,4],[[10,[9]]]],[[3,63,24],[[10,[9]]]],[[146,3,4,24,55],[[56,[4]]]],0,0,[[144,3]],[[144,3,4]],[[147,4]],[143,21],0,[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[3,4,14]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[4,107],5],0,0,0,0,[148,[[8,[28]]]],0,0,0,[[149,35,4]],[[150,35,4]],[[151,35,4]],[[152,35,4]],0,[[149,3,4],[[56,[4]]]],[[150,3,4],[[56,[4]]]],[[151,3,4],[[56,[4]]]],[[152,3,4],[[56,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[[3,4],55],[[3,4],55],0,[[3,4,32,53],[[8,[[10,[9]]]]]],0,0,0,[[3,4,53],[[10,[9]]]],[[3,4,[31,[30]],5,[8,[[56,[4]]]],[10,[59]]],[[10,[9]]]],[[3,4,53],[[10,[9]]]],[[3,[10,[59]]],[[10,[9]]]],0,0,0,0,0,0,[[149,3,4],[[56,[4]]]],[[150,3,4]],0,0,0,[[4,[8,[153]]],[[11,[[154,[153]]]]]],0,0,0,0,[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],0,[[]],[[]],[[]],[[]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[155,155],[[]],[[156,35,4]],[[155,155],5],[[],5],[[156,3,4],[[56,[4]]]],[[155,82],83],[[]],[[]],[[],103],[[],103],[155],0,[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[[155,155],5],[[3,4,32],[[10,[9]]]],0,[[]],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[]],[[]],0,0,[[],1],[[],1],0,0,[[]],[[]],0,0,[[157,35,4]],0,[[157,3,4],[[56,[4]]]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],[[3,4,77,158,158,14],[[10,[9]]]],0,[[157,3,4]],0,[[157,3,4]],0,[[],21],[[],21],[[],22],[[]],0,[[],1],[[],1],[[]],[[]],[[3,4,[8,[107]],[8,[107]]]],[159,5],[[160,4],[[8,[14]]]],[[3,4,77,[8,[107]]],[[10,[9]]]],[[160,35,4]],[[4,77,63,63],161],0,[[160,3,4],[[56,[4]]]],[[4,77],161],0,[[]],0,[[]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],[[160,4,63],107],0,[159,[[8,[24]]]],0,[[3,4,162,[8,[107]],[8,[107]]],55],[[3,4,63,5,77,158],55],[[160,3,4,[8,[163]],59],[[56,[4]]]],[[3,4,107],[[10,[9]]]],[[3,4,77],[[10,[9]]]],0,0,0,[[160,3,4]],[[160,3,4]],[[160,3,4]],0,0,[3,62],0,[[],21],[[],21],[[],22],[[]],[[4,107],[[11,[[154,[164]]]]]],0,[[],1],[[],1],[[]],[[]],[[165,35,4]],[[165,3,4],[[56,[4]]]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],[[3,4,166],[[10,[9]]]],0,0,[[],21],[[],21],[[],22],[[]],0,[[],1],[[],1],[[]],[[]],[[167,35,4]],[[]],0,0,[[]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],0,[[3,4,32,53],[[10,[9]]]],[[167,3,4,24,55],[[56,[4]]]],[[167,3,4]],[[167,3,4],[[56,[4]]]],0,[[],21],[[],21],[[],22],[[]],0,0,[[168,3,4,63,59]],[[169,4]],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[168,3,4,63]],[[4,74],[[8,[169]]]],[169,169],[[]],0,[[169,3,4]],0,[[168,35,4]],[168,91],0,[[3,4,74,63],161],0,[[169,169],5],[[168,3,4],[[56,[4]]]],[[4,74],161],0,[[]],[[]],[[4,74],169],0,[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[[3,4,74,63],55],[[3,4,5,5],55],0,0,0,0,[[169,169],5],[[3,4,[74,[32]],53],[[10,[9]]]],0,0,0,0,[[168,3,4]],0,0,0,[[[11,[118]]],11],[[4,74],169],[[]],0,0,[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[168,4],25],[[]],[[]],0,0,[[],1],[[],1],[[]],[[]],[170,91],[[3,4,32,53,169],[[10,[9]]]],[[]],0,[[]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[[3,4,171,63],[[10,[9]]]],[[170,3,4,24,55],[[56,[4]]]],[[170,3,4],[[56,[4]]]],[[170,3,4,55],[[8,[[56,[4]]]]]],[[],21],[[],21],[[],22],[[]],0,0,[[171,23]],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[172,24],[[],[[21,[173]]]],[[173,82],83],[[]],[[]],0,[[174,24,23],[[25,[175]]]],0,[[23,32,24],[[25,[171]]]],[[3,4,24],[[10,[9]]]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],0,0,[[23,32],[[25,[174]]]],0,[176,25],[176,[[25,[[11,[177]]]]]],0,0,0,0,0,[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[[]],[[]],[[]],[[178,35,4]],[[179,35,4]],[[180,35,4]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],0,0,0,0,0,0,[[3,4,[74,[32]]],[[10,[9]]]],[[3,4,32,[74,[32]]],[[10,[9]]]],[[3,4,32,32,[74,[32]]],[[10,[9]]]],[[178,3,4,24,55],[[56,[4]]]],[[179,3,4,24,55],[[56,[4]]]],[[180,3,4,24,55],[[56,[4]]]],[[178,3,4]],[[179,3,4]],[[178,3,4],[[56,[4]]]],[[179,3,4],[[56,[4]]]],[[180,3,4],[[56,[4]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[]],[[]],[[]],0,[[],1],[[],1],[[]],[[]],[[181,35,4]],[[181,3,4],[[56,[4]]]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],[[3,63],64],0,0,[[3,[74,[32]],53],[[10,[9]]]],0,[[],21],[[],21],[[],22],[[]],0,[[],1],[[],1],[[]],[[]],[[182,35,4]],[[182,3,4],[[56,[4]]]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],[[3,4,[74,[32]],63],[[10,[9]]]],[[3,4],[[10,[9]]]],0,0,[[],21],[[],21],[[],22],[[]],[[3,4,148],[[8,[[10,[9]]]]]],[[3,4,148],[[8,[[10,[9]]]]]],[23,[[11,[148]]]],0,0,[[],1],[[],1],[[]],[[]],[[183,35,4]],0,[[3,4,74]],[[183,3,4],[[56,[4]]]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],[[3,74],64],[[3,4,77],[[10,[9]]]],0,0,0,[[],21],[[],21],[[],22],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[4,28],11],[[184,4],[[8,[28]]]],[184,11],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[73,55],[[8,[73]]]],[73,73],[185,185],[186,186],[[]],[[]],[[]],[[4,187],62],0,[185,[[188,[30]]]],[186,[[188,[30]]]],0,0,[[71,4,189,190]],[[184,35,4]],0,0,[[185,185],5],[[186,186],5],[[184,3,4,71]],[[3,4,28,30,5],[[56,[4]]]],[[]],[[]],[[]],[[]],[[]],[55,185],[55,186],[[4,28],73],[[],53],[3,64],0,0,0,[[]],[[]],[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[[],5],0,0,[[3,11],[[11,[64]]]],[[3,137,73,11],64],[[185,185],5],[[186,186],5],[[3,4,73,71],184],[[],185],[[],186],0,0,0,[[3,4,24,59,186],64],0,0,0,0,0,[[3,4,24,59,185],64],0,0,0,[[185,3,4],64],[[186,3,4],64],[[73,4],[[8,[28]]]],[[]],[[]],[[]],0,0,0,0,[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],[[],22],[73],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[191,4,133,[8,[192]]]],[[3,4,191,133,73],64],[[3,4,191,133],64],[[3,4,191,133],64],[[3,4,191,133],64],[[3,4,191,133],64],[[3,4,191,193],64],[[3,4,193],64],[[3,4,191,32,185],64],[[3,4,191,32],64],[[3,4,32],64],[[3,4,191,32,185,5],64],[[3,4,32,185,5],64],[[3,4,32,185,5],64],[[3,4,191,32,73],64],[[3,4,191,32],64],[[3,4,32],64],[[3,4,191,32,186],64],[[3,4,32,186],64],[[3,4,191,32,185],64],[[3,4,32,185],64],[[3,4,191,32],64],[[3,4,32],64],[[3,4,191,107],64],[[3,4,107],64],[[3,4,191,107,73],64],[[3,4,191,107],64],[[3,4,107],64],[[3,4,191,107,186],64],[[3,4,107,186],64],[[3,4,191,107,185],64],[[3,4,107,185],64],[[3,191,194,73],64],[[3,4,191,194],64],[[3,4,194],64],[[3,4,191,192,5],64],[[3,4,191,192],64],[[65,65],66],[[3,4,191],64],[[3,4,191],64],[[3,195,23],64],[[3,4,191,192,73,5],64],[[3,4,191,196,5],64],[[3,4,191,196],64],[[3,4,191,192,5],64],[[3,4,192],64],[[3,4,191,192,52,5],64],[[3,4,191,192,52],64],[[3,4,191,196,73],64],[[3,4,191,196],64],[[3,4,191,196],64],[197,70],[[3,4,191,166],64],[[3,4,191,166],64],[[3,4,191,198],64],[[3,4,191,198],64],0,[[],1],[[],1],[[]],[[]],0,[[3,4,189,199,191],64],[199,199],[[]],[[3,49,189,200,201],64],[[3,4,49,191,189,23]],[[119,4]],[[199,199],5],[[3,4,192,52,189,191],64],[[]],[[3,4,189,199,191],64],[[]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[[3,62,5,202,23,203],64],[[3,4,189,[8,[46]]],64],[[3,4,189,199,191,[11,[204]],23,[8,[46]]],64],[[],199],[[3,4,189,95,199,191],64],0,[189,[[52,[189,199]]]],[[]],[[],21],[[],21],[[],22],[[]],0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[35,4]],[[205,35,4]],[205,91],[35],0,[[3,4],[[8,[206]]]],[[205,3,4],[[56,[4]]]],0,[[]],[[]],[[3,24],64],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],0,[[],[[8,[24]]]],0,0,0,[[3,4],[[10,[9]]]],0,0,0,[[3,55],[[8,[206]]]],0,0,[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[3,4],[[8,[[56,[4]]]]]],[[]],[[]],0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],0,[[207,35,4]],[[208,35,4]],0,0,[[207,35]],[[208,35]],[[207,3,4],[[8,[206]]]],[[208,3,4],[[8,[206]]]],[[]],[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[[3,4]],[[3,4,164,164]],[3],[207,[[8,[24]]]],[208,[[8,[24]]]],[[3,4],207],[[3,4],208],0,0,0,0,[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[]],[[]],0,0,[[4,133]],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],0,[[4,133],5],[[],[[21,[209]]]],[[210,35,4]],0,[[210,35]],[[210,3,4],[[8,[206]]]],[[]],[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[4,209],[210,[[8,[24]]]],[[3,4],210],0,[4,30],[[4,133]],[209,21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[]],[[]],0,0,[[3,4],211],[[],1],[[],1],[[],1],[[],1],[[3,4],211],[[]],[[]],[[]],[[]],[[212,35,4]],[[211,35,4]],0,0,[[212,35]],[[211,35]],[[3,4],211],[[212,3,4],[[8,[206]]]],[[211,3,4],[[8,[206]]]],[[]],[[]],[[3,4],211],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[212,[[8,[24]]]],[211,[[8,[24]]]],0,[[3,4],212],[[3,213,24,30,64],211],[[3,4],211],0,0,0,0,[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[]],[[]],0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[214,214],[215,215],[[]],[[]],[[216,35,4]],0,[[216,35]],[[214,214],5],[[215,215],5],[[216,3,4],[[8,[206]]]],[[214,82],83],[[]],[[]],[[]],0,[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[[3,4,215,[8,[64]]],55],[216,[[8,[24]]]],[[215,215],5],[[3,4,215],216],[216,215],0,0,0,0,[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[]],[[]],[[]],0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[217,217],[[]],[[217,217],101],[[218,35,4]],[[219,35,4]],0,0,[[218,35]],[[219,35]],[[217,217],5],[[],5],[[218,3,4],[[8,[206]]]],[[219,3,4],[[8,[206]]]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],0,0,[218,[[8,[24]]]],[219,[[8,[24]]]],[[217,217],5],[[3,4,5,5,5,5,5],218],[[3,4],219],[220,217],0,0,0,[[217,217],[[8,[101]]]],0,0,0,[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[]],[[]],[[]],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[221,221],[[]],[[222,35,4]],0,[[222,35]],[[221,221],5],[[222,3,4],[[8,[206]]]],[[]],[[]],0,[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[[3,4,221,[8,[64]]],55],[222,[[8,[24]]]],[[221,221],5],[[3,4,221],222],[222,221],0,0,0,[[]],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[]],[[]],0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[223,223],[[]],[[224,35,4]],0,[[224,35]],[[223,223],5],[[224,3,4],[[8,[206]]]],[4,[[25,[30]]]],[[]],[[]],0,[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[[3,4,223,[8,[64]],63],55],0,[224,[[8,[24]]]],[[223,223],5],[[3,4,223],224],[4,223],[[224,4],223],0,0,[[223,200,190,225],5],0,0,0,[[]],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],0,[[]],[[]],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],0,0,[[]],[[]],[[]],[[]],[226,226],[[]],0,[[227,35,4]],0,[[227,35]],[[226,226],5],[[227,3,4],[[8,[206]]]],[[]],[[]],[55,226],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[[3,226,64],55],[227,[[8,[24]]]],[[226,226],5],[[3,4,226],227],[[],226],0,0,[[226,225],5],0,[[226,3],64],[[]],0,[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[]],[[]],0,0,0,0,0,0,0,[[228,23,32],5],0,[[228,23],[[11,[118]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[23,11],11],[[229,35,4]],[[230,35,4]],[[231,35,4]],[[232,35,4]],[[233,35,4]],[[234,35,4]],0,0,0,0,0,[[229,35]],[[230,35]],[[231,35]],[[232,35]],[[233,35]],[[234,35]],0,[[229,3,4],[[8,[206]]]],[[230,3,4],[[8,[206]]]],[[231,3,4],[[8,[206]]]],[[232,3,4],[[8,[206]]]],[[233,3,4],[[8,[206]]]],[[234,3,4],[[8,[206]]]],[4,25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],0,[229,[[8,[24]]]],[230,[[8,[24]]]],[231,[[8,[24]]]],[232,[[8,[24]]]],[233,[[8,[24]]]],[234,[[8,[24]]]],[[3,4],229],[[3,4,[74,[67]]],230],[[3,4],231],[[3,4],232],[[3,4],233],[[3,4],234],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],1],[[],1],[[]],[[]],[[235,35,4]],0,[[235,35]],[[235,3,4],[[8,[206]]]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],[235,[[8,[24]]]],[[3,4,5,5,5],235],0,[[],21],[[],21],[[],22],[[]],0,[[],1],[[],1],[[]],[[]],[[3,4,[11,[24]]],[[10,[9]]]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[[3,4],[[10,[9]]]],0,[[],21],[[],21],[[],22],[[]],0,[[],1],[[],1],[[]],[[]],0,[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[[3,4,236],[[56,[4]]]],[[3,[8,[30]]],[[10,[9]]]],[[237,3,4,24,55],[[56,[4]]]],0,[[],21],[[],21],[[],22],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[238,4,28],11],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[4,53,[10,[72]]],[[10,[9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[239,238],0,0,[[239,35,4]],[[240,35,4]],[[241,35,4]],[[239,3,4],[[56,[4]]]],[[240,3,4],[[56,[4]]]],[[241,3,4],[[56,[4]]]],[[238,3,4,28,30,5],[[56,[4]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[238,53],0,[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[4,5],[238,5],0,0,[3,[[56,[4]]]],0,0,0,0,[[3,4]],[[3,4,242],243],[[239,3,4]],0,[[243,3,4]],0,[[4,53],[[10,[9]]]],0,0,0,[4,[[10,[9]]]],0,0,0,[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[]],[[]],[244,244],[[]],0,[[244,244],5],[[244,82],83],[[]],0,[[]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[[244,3,4],[[10,[9]]]],0,0,0,[[244,3,4],64],0,0,[[244,4,55],[[8,[244]]]],[[]],0,[[244,3,4,55],[[8,[[56,[4]]]]]],0,0,0,[[],21],[[],21],[[],22],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[245,246,3,4]],[[247,248,23],118],0,[246,246],[[]],[[245,249],11],0,0,0,[[245,35,4]],0,[[246,246],5],[[250,250],5],[[245,3,4],[[56,[4]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[4,48],25],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[[3,4],55],0,0,[[246,246],5],[[250,250],5],[[3,4],[[10,[9]]]],0,[4,[[11,[251]]]],0,[[245,[8,[252]],3,4]],0,0,[[]],0,0,0,[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[4,63],[[56,[4]]]],[[35,4,189,161]],[[35,4,55,161,[8,[90]]]],0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[11,11],[[253,35,4]],[[254,35,4]],[[253,3,4],[[56,[4]]]],[[254,3,4],[[56,[4]]]],[[]],[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[[3,4],[[10,[9]]]],[[3,4],[[10,[9]]]],0,0,[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],0,[[255,35,4]],0,0,[[255,3,4],[[56,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[[3,4],[[258,[4,256,257]]]],0,0,0,0,[[3,4],[[10,[9]]]],0,[[3,4],[[11,[256]]]],[[3,4,258],90],0,0,0,0,0,0,[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[]],[[]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[259,35,4]],0,0,0,[[259,3,4],[[56,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[4,[[258,[4,260,261]]]],[[3,4],[[10,[9]]]],0,0,0,[4,[[11,[260]]]],0,0,0,0,0,0,[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[]],[[]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[262,35,4]],[[262,3,4],[[56,[4]]]],[4,[[25,[30]]]],[[]],[[]],[263,5],0,[[263,120],5],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],0,[[3,4,5],[[10,[9]]]],0,[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[]],[[]],0,[[],1],[[],1],[[]],[[]],0,[[264,35,4]],[[264,3,4],[[56,[4]]]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],[[3,[19,[[265,[[8,[118]]]]]]],[[10,[9]]]],0,0,[[],21],[[],21],[[],22],[[]],0,0,[[4,48],[[137,[32,266]]]],0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[266,190],[[113,[175]]]],[[267,35,4]],[267,91],[[267,3,4],[[56,[4]]]],[[]],[[]],0,[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[[3,4],[[10,[9]]]],0,0,[[267,3,4]],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],0,[[3,4,268],64],[[269,35,4]],[[269,3,4],[[56,[4]]]],[4,[[25,[30]]]],[[]],[[]],[[268,4],11],[268,5],0,[[268,120],5],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[[3,4,268],55],0,[[],268],[[3,4,268],[[10,[9]]]],0,[[65,65],46],[[3,4,268],64],[[3,4,268],64],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[]],[[]],0,0,0,0,0,[[[275,[[0,[270,271]],[0,[272,273,274]],[0,[272,273,274]]]],[0,[270,271]],[0,[272,273,274]],[0,[272,273,274]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[63,[[11,[163]]]],0,0,0,[276,277],[[[275,[[0,[270,271]],[0,[272,273,274]],[0,[272,273,274]]]],3,4,[278,[[0,[272,273,274]],[0,[272,273,274]]]]],64],0,[4,63],0,[[]],[[]],[[]],[[[275,[[0,[270,271]],[0,[272,273,274]],[0,[272,273,274]]]],63,63],63],[[],5],[120,5],[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[[[11,[[0,[272,273,274]]]],[11,[[0,[272,273,274]]]]],[[275,[[0,[270,271]],[0,[272,273,274]],[0,[272,273,274]]]]]],[[3,4,11],64],0,0,0,[[4,187],11],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[]],[[]],[[]],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[279,35,4]],0,0,0,0,0,0,0,[[279,3,4],[[56,[4]]]],0,[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[4,[[258,[4,280,281]]]],[4,[[258,[4,282,281]]]],[4,[[258,[4,283,281]]]],0,0,0,0,0,0,[[3,4],279],0,0,0,0,[4],0,0,0,0,0,0,0,[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[53,14],5],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[53,5],[53,5],[[],5],[53,5],[[],5],[[3,24],64],0,0,[53,53],[[]],[[53,53],101],0,[[[10,[242]]],[[21,[[10,[242]],[10,[242]]]]]],[242,8],[[[19,[242]]],[[21,[[19,[242]],[19,[242]]]]]],[242,8],[[35,4]],[[284,35,4]],[[53,53],5],[[],5],[[3,4,243,238],[[8,[[56,[4]]]]]],[[284,3,4],[[56,[4]]]],0,0,[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[53,3,4],[[10,[242]]]],[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[242,5],[53,92],[[53,53],5],[[3,30,53,[8,[53]]],[[10,[9]]]],0,[4],0,[[53,53],[[8,[101]]]],0,[[3,4]],0,[[53,4,285,48],286],0,[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,[[],22],[[],22],[[],22],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[[]],[[287,35,4]],[[288,35,4]],[[287,3,4,243,238],[[8,[[56,[4]]]]]],[4,8],[[]],[[]],[287,5],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[[3,30,5],[[10,[242]]]],[[288,3,4,24,55],[[56,[4]]]],0,[[287,3,4]],0,0,[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[]],[[]],0,[[],1],[[],1],[[]],[[]],[[3,4,53],[[10,[9]]]],[[3,4,53],[[10,[9]]]],[53,[[10,[59]]]],0,[[289,35,4]],[[289,3,4,243,238],[[8,[[56,[4]]]]]],[[3,4,53,65,65,65],[[10,[9]]]],[[]],[4],0,[[]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],0,[[3,4,290,65],[[10,[242]]]],0,0,[[289,3,4]],0,0,0,[[],21],[[],21],[[],22],[[]],0,0,[[],1],[[],1],[[]],[[]],[[3,4,53],[[10,[9]]]],[3,64],0,[[291,35,4]],[[291,3,4,243,238],[[8,[[56,[4]]]]]],[[3,4,53,5],[[10,[9]]]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],0,[3,[[10,[242]]]],[[291,4]],[[291,3,4]],0,0,[[],21],[[],21],[[],22],[[]],0,0,0,[[4,28],11],0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[292,35,4]],[[293,35,4]],[[292,3,4,243,238],[[8,[[56,[4]]]]]],[[3,4,28,24],[[56,[4]]]],[[]],[[]],0,[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[[3,4],[[10,[242]]]],[[3,4,24],[[10,[9]]]],[[293,3,4,24,55],[[56,[4]]]],[[292,3,4]],[[32,4]],0,0,[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[294,294],[[]],[[295,35,4]],[[296,35]],[[294,294],5],[[],5],[[295,3,4],[[56,[4]]]],[[296,3],5],[[294,82],83],[[]],[[]],[[]],[[]],[[]],[[],103],[[],103],[294],[[]],[[]],[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],0,[[294,294],5],[3,296],[[4,118],297],[3,[[10,[9]]]],0,0,0,0,[[295,3,4]],0,[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],[[],22],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],1],[[],1],[[]],[[]],[[],[[21,[298]]]],[[]],[3,[[56,[4]]]],[3,[[56,[4]]]],[[23,30,48],[[25,[30]]]],[[]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],0,0,[[],21],[[],21],[[],22],[[]],0,[[],1],[[],1],[[]],[[]],0,[[299,35,4]],[[299,3,4],[[56,[4]]]],[[]],0,[[]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],[[3,4,[8,[133]]],[[10,[9]]]],0,0,[[],21],[[],21],[[],22],[[]],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[300,120,190,190],63],0,0,[[301,35,4]],[[302,35,4]],[[303,35,4]],[[301,3,4,243,238],[[8,[[56,[4]]]]]],[[302,3,4],[[56,[4]]]],[[303,3,4],[[56,[4]]]],0,[[]],[[]],[[]],[[]],[[]],[[303,4]],[[]],[[]],[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],0,0,0,[4,300],[[3,4,24,[11,[304]]],[[10,[242]]]],[[3,30,[11,[304]]],[[10,[9]]]],[[3,4,30,[11,[304]]],[[10,[9]]]],[[3,4],[[10,[9]]]],[[305,3,4,24,55],[[56,[4]]]],[[301,4]],0,0,[[303,3,4]],[[301,3,4]],0,0,0,0,[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],[[],22],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[4,28],11],0,[[306,307],306],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[308,309],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[310,5],[310,5],0,[311,311],[312,312],[[]],[[]],[[311,311],101],0,[[313,[10,[59]]],313],0,[[310,35,4]],[[306,[10,[59]]],306],[[311,311],5],[[312,312],5],[[],5],[[310,3,4,243,238],[[8,[[56,[4]]]]]],[[3,4,28,24],[[56,[4]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[310,5],[310,5],[310,5],[310,5],[[306,24],306],0,[[3,4]],[[310,3,4,243,314],[[8,[[56,[4]]]]]],0,0,0,0,[314,312],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[3,[[10,[9]]]],[312,24],0,[306,306],[23,315],[[3,4,311],[[10,[242]]]],0,[[314,3,4],[[10,[242]]]],[[314,3,5],55],[314,[[8,[306]]]],0,[[313,306],313],0,[[311,311],5],[312,313],[70,306],[[3,4],314],[[63,63],311],[314],0,0,0,[[311,311],[[8,[101]]]],[[312,312],[[8,[101]]]],0,[314],[[310,3,4]],[314],[[4,311],[[8,[315]]]],[[313,315],313],[23,[[11,[315]]]],0,[314,313],0,0,[[3,4],[[10,[9]]]],0,[[]],[[]],0,[[312,3,314],70],[[4,314],[[56,[4]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[]],[[]],[[]],[[]],[[]],[[]],[[313,28,[8,[46]]],313],0,0,0,0,0,[[],1],[[],1],[[]],[[]],[[316,35,4]],[[]],[[316,4],5],[[316,4],5],[[]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[[3,4],[[11,[64]]]],[[316,3,4],64],[[3,4],64],[[316,3,4],55],[[316,3,4],64],[[316,3,4,55]],[[316,3,4,24],[[8,[[56,[4]]]]]],[[],21],[[],21],[[],22],[[]],0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[317,35]],[[318,35,4]],[[317,3,4],[[8,[[56,[4]]]]]],[[318,3,4],[[56,[4]]]],[[]],[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[[3,63],64],0,[[],317],[[3,[74,[32]]],[[10,[9]]]],0,0,[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[]],[[]],0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[[]],[319,319],[[]],[[320,3,4],64],[[320,35]],[[319,319],5],[[320,3,4,[8,[53]]],[[8,[[56,[4]]]]]],[[]],[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[320,5],[[3,4],320],0,0,[[319,319],[[8,[101]]]],[[320,3,4]],0,[[320,3,4]],[[320,3,4,319]],0,0,[[]],[[320,3,4],64],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[]],[[]],0,0,[[11,46,46],118],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[3,65],64],[[3,190],64],[[63,63],30],[[321,35,4]],[[322,35,4]],[322,91],[[321,3,4],[[56,[4]]]],[[322,3,4],[[56,[4]]]],[[]],[[]],0,[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],0,[[3,4,[8,[53]]],[[10,[9]]]],[[3,4,190,[8,[65]]],[[10,[9]]]],[[322,3,4]],0,0,0,0,0,0,[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],0,[[]],[[]],[[323,323],5],0,[[]],[[323,3,4,24],[[8,[[56,[4]]]]]],[[]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],0,[[323,3,4,64],55],0,0,[[],324],0,[[],21],[[],21],[[],22],[[]],0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[325,62],[326,62],[327,62],[328,62],[[329,35]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[162,5],[[3,4],329],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],[[],22],[[]],[[]],[[]],[[]],[[]],0,[[],1],[[],1],[[]],[[]],[[330,35,4]],[[330,3,4],[[56,[4]]]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],0,[[3,4,324],[[10,[9]]]],[330,324],0,[[],21],[[],21],[[],22],[[]],0,[[],1],[[],1],0,[[]],[[]],[[324,35,4]],0,[[324,3,4],[[8,[[56,[4]]]]]],0,[[]],[[324,3,4,24]],[[]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],0,[324,307],[[62,24],331],[[324,3,4],64],[3,64],0,0,[[3,4],324],0,0,[[324,3,4]],0,[[],21],[[],21],[[],22],[[324,3,4]],[[]],[3],0,0,0,0,0,0,0,0,0,[[332,333],5],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],332],[[],334],[334,70],[[335,35,4]],0,0,[3,336],0,[[335,3,4],[[56,[4]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[55,332],[[3,4,135,48],336],0,[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],0,[[3,4],55],0,0,[[3,4,324],[[10,[9]]]],0,[[63,63],46],[[336,3,4,48]],0,[335,324],[[332,3],64],0,0,0,0,[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],1],[[],1],[[]],[[]],[[337,35,4]],[[337,3,4],[[56,[4]]]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[19,[[19,[1]]]],0,[[3,4,[11,[77]],[8,[338]]],[[11,[30]]]],0,[[3,4,324],[[10,[9]]]],[[3,4],64],0,[337,324],0,[[],21],[[],21],[[],22],[[337,3,4]],[[]],0,0,0,0,0,0,0,[4,8],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,0,[[3,4],64],[[]],[[]],[[]],[[]],[[]],[[]],[339,339],[340,340],[[]],[[]],[[],340],[[341,35,4]],[[339,339],5],[[340,340],5],[[],5],[[341,3,4],[[56,[4]]]],0,[[339,82],83],[[]],[[]],[[]],[[],103],[[],103],[339],0,[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],0,0,[341,342],[340,24],[[339,339],5],[[340,340],5],[[3,4,324],[[10,[9]]]],[[341,3,4]],[[341,3,4]],0,[340,121],[[341,3,4]],[341,324],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[341,3,4,64]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[3,4,[11,[119]],343,340],344],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],0,[[4,345,345,340],70],0,0,0,[[343,35,55]],0,0,0,0,[[345,345],5],[[343,3,4,346,55],[[8,[[56,[4]]]]]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[[[10,[17]]],[[10,[1,17]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[[3,4,[11,[119]]],344],[[3,4,345,11],64],[[345,345],5],[[3,4,[11,[119]],62,[8,[62]],340],344],0,0,0,0,0,0,0,0,0,0,[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[]],[[]],[[]]],"p":[[8,"Any"],[3,"App"],[3,"EventCtx"],[3,"App"],[15,"bool"],[3,"Setup"],[3,"PerMap"],[4,"Option"],[8,"State"],[3,"Box"],[3,"Vec"],[4,"Mode"],[3,"Sim"],[3,"MapEdits"],[3,"ArgMatches"],[3,"Args"],[3,"Global"],[3,"Arc"],[3,"Rc"],[3,"Settings"],[4,"Result"],[3,"TypeId"],[3,"Map"],[15,"str"],[6,"Result"],[3,"Canvas"],[8,"ShowObject"],[4,"ID"],[3,"Pt2D"],[3,"String"],[8,"Into"],[3,"IntersectionID"],[3,"Flags"],[3,"ColorScheme"],[3,"GfxCtx"],[3,"DrawOptions"],[3,"DrawMap"],[3,"SessionState"],[3,"Bounds"],[3,"Prerender"],[3,"AgentCache"],[8,"Renderable"],[3,"ShowLayers"],[3,"ShowEverything"],[3,"PerObjectActions"],[15,"f64"],[3,"Options"],[3,"Timer"],[3,"Analytics"],[3,"FindDelayedIntersections"],[3,"Challenge"],[3,"BTreeMap"],[4,"GameplayMode"],[3,"ChallengesPicker"],[3,"Panel"],[4,"Transition"],[3,"HighScore"],[3,"CutsceneBuilder"],[8,"Fn"],[3,"CutscenePlayer"],[3,"ShowMessage"],[3,"Color"],[15,"usize"],[3,"Widget"],[3,"Duration"],[3,"TextSpan"],[4,"AgentType"],[4,"TripPhaseType"],[3,"CommonState"],[3,"Text"],[8,"ContextualActions"],[8,"FnOnce"],[4,"Tab"],[3,"BTreeSet"],[3,"Route"],[3,"RouteSketcher"],[3,"RoadID"],[4,"Mode"],[3,"RoadSelector"],[3,"UploadedProposals"],[3,"ShareProposal"],[3,"Formatter"],[6,"Result"],[3,"Warping"],[3,"DebugWarp"],[3,"Actions"],[3,"Tags"],[3,"DebugMode"],[3,"ScreenshotTest"],[3,"Drawable"],[4,"DrawBaselayer"],[3,"MapName"],[3,"OriginalRoad"],[3,"Viewer"],[4,"AgentID"],[4,"DelayCause"],[3,"Blockfinder"],[3,"Obj"],[3,"Block"],[3,"Perimeter"],[4,"Ordering"],[3,"OneBlock"],[15,"u64"],[4,"Source"],[4,"PathConstraints"],[3,"Floodfiller"],[3,"LaneID"],[3,"ObjectDebugger"],[3,"PathCounter"],[3,"PolygonDebugger"],[4,"Item"],[3,"Pathfinder"],[3,"Counter"],[3,"RouteExplorer"],[3,"AllRoutesExplorer"],[3,"PathCostDebugger"],[3,"PathRequest"],[3,"Polygon"],[4,"TripEndpoint"],[4,"TripMode"],[3,"RoutingParams"],[3,"BulkSelect"],[3,"UberTurnPicker"],[3,"UberTurnViewer"],[3,"DevToolsMode"],[3,"CollisionDataset"],[3,"DummyID"],[3,"World"],[3,"Filters"],[3,"CollisionsViewer"],[3,"GenericCompareCounts"],[3,"PopularDestinations"],[3,"BuildingID"],[3,"HeatmapOptions"],[3,"Scenario"],[3,"ViewKML"],[3,"HashMap"],[3,"Object"],[3,"PolygonEditor"],[3,"LonLat"],[3,"ScenarioManager"],[3,"MarkerID"],[3,"RecordedStoryMap"],[3,"StoryMapEditor"],[3,"DrawFreehand"],[3,"EditingMarker"],[3,"StoryMap"],[4,"EditCmd"],[3,"EditMode"],[3,"SaveEdits"],[3,"LoadEdits"],[3,"ConfirmDiscard"],[3,"Speed"],[3,"Choice"],[3,"ID"],[3,"CrosswalkEditor"],[3,"SelectSegments"],[3,"EditRoad"],[4,"LaneType"],[3,"RoadEditor"],[3,"GeomBatch"],[3,"Road"],[15,"isize"],[3,"Distance"],[3,"RouteEditor"],[3,"TransitRouteID"],[3,"StopSignEditor"],[3,"TrafficSignalEditor"],[3,"BundleEdits"],[3,"ChangeDuration"],[3,"ControlTrafficSignal"],[3,"Angle"],[3,"Record"],[3,"Snapper"],[3,"MovementID"],[8,"Deserializer"],[3,"NodeID"],[3,"ShowAbsolute"],[3,"ShowRelative"],[3,"TuneRelative"],[3,"SignalPicker"],[3,"PreviewTrafficSignal"],[3,"ZoneEditor"],[3,"InfoPanel"],[3,"DataOptions"],[3,"ProblemOptions"],[4,"ProblemType"],[3,"HashSet"],[3,"TripID"],[3,"Time"],[3,"Details"],[3,"PersonID"],[3,"AreaID"],[3,"ParkingLotID"],[3,"Person"],[3,"CarID"],[3,"TransitRoute"],[3,"TransitStopID"],[3,"OpenTrip"],[3,"TripInfo"],[3,"Percent"],[3,"Path"],[3,"UnitFmt"],[3,"TripPhase"],[3,"PickLayer"],[4,"LayerOutcome"],[3,"SteepStreets"],[3,"ElevationContours"],[3,"Favorites"],[3,"ShowFavorites"],[3,"Static"],[3,"BikeActivity"],[3,"ColorDiscrete"],[4,"Seir"],[3,"Options"],[3,"Pandemic"],[4,"Loc"],[3,"Occupancy"],[3,"Efficiency"],[4,"ParkingSpot"],[3,"Options"],[3,"PopulationMap"],[3,"Options"],[3,"ProblemMap"],[4,"Problem"],[3,"ProblemTypes"],[3,"RelativeProblemMap"],[3,"Jam"],[3,"Backpressure"],[3,"Throughput"],[3,"CompareThroughput"],[3,"TrafficJams"],[3,"Delay"],[3,"PedestrianCrowding"],[3,"TransitNetwork"],[3,"PermanentMapEdits"],[3,"Proposals"],[3,"Actions"],[3,"SandboxMode"],[3,"BackToTitleScreen"],[3,"SandboxLoader"],[8,"GameplayState"],[3,"SandboxControls"],[4,"DashTab"],[3,"CommuterPatterns"],[4,"BlockSelection"],[3,"Intersection"],[4,"BorderType"],[3,"Block"],[3,"Filter"],[3,"Loop"],[3,"PanelState"],[3,"ActiveTraffic"],[3,"TransitRoutes"],[3,"ModeShift"],[3,"Entry"],[3,"Filters"],[3,"Table"],[3,"ParkingOverhead"],[3,"Entry"],[3,"Filters"],[3,"RiskSummaries"],[3,"Filter"],[3,"RectangularSelector"],[3,"RefCell"],[3,"Demand"],[3,"TrafficSignalDemand"],[3,"Filter"],[3,"TravelTimes"],[8,"CloneableAny"],[8,"Clone"],[8,"Copy"],[8,"PartialOrd"],[8,"Display"],[3,"Matrix"],[3,"CLEAR_COLOR_SCALE"],[3,"ColorScale"],[3,"MatrixOptions"],[3,"TripTable"],[3,"CancelledTrip"],[3,"Filters"],[3,"FinishedTrip"],[3,"UnfinishedTrip"],[3,"FinalScore"],[3,"XorShiftRng"],[4,"LoadScenario"],[3,"Actdev"],[3,"About"],[3,"OptimizeCommute"],[3,"OrigPersonID"],[3,"FixTrafficSignals"],[3,"Freeform"],[3,"ChangeScenario"],[3,"Obj"],[3,"AreaSpawner"],[3,"SelectRectangle"],[3,"Area"],[3,"Input"],[3,"AgentSpawner"],[3,"CountTrips"],[3,"PlayScenario"],[3,"EditScenarioModifiers"],[3,"ChangeMode"],[4,"ScenarioModifier"],[3,"DepartureSummary"],[3,"Message"],[3,"ScreenPt"],[15,"i64"],[4,"OsmID"],[3,"Tutorial"],[3,"TutorialPointer"],[4,"Task"],[3,"Stage"],[3,"TutorialState"],[3,"ScenarioGenerator"],[3,"MinimapController"],[3,"RoutePreview"],[3,"TrafficRecorder"],[4,"SpeedSetting"],[3,"TimePanel"],[3,"JumpToTime"],[3,"TimeWarpScreen"],[4,"Tab"],[3,"Layers"],[3,"DEDICATED_TRAIL"],[3,"PROTECTED_BIKE_LANE"],[3,"PAINTED_BIKE_LANE"],[3,"GREENWAY"],[3,"DrawNetworkLayer"],[3,"ExploreMap"],[3,"ButtonBuilder"],[3,"Filters"],[3,"CandidateTrip"],[3,"Results"],[3,"ShowGaps"],[3,"ModeShiftData"],[3,"QuickSketch"],[4,"BufferType"],[4,"ID"],[3,"RoutingPreferences"],[3,"TripPlanner"],[3,"TripManagement"],[3,"RouteDetails"],[3,"BuiltRoute"],[3,"RouteStats"],[4,"Outcome"],[13,"LoadKML"],[13,"CompareCounts"],[13,"Gameplay"],[4,"Layout"],[3,"Scene"],[13,"Extra"],[13,"Hovering"],[13,"Dragging"],[4,"Mode"],[13,"Route"],[3,"SearchResults"],[13,"Floodfill"],[13,"Point"],[13,"Triangle"],[13,"Polygon"],[3,"Marker"],[13,"PersonTrips"],[13,"PersonBio"],[13,"PersonSchedule"],[13,"TransitVehicleStatus"],[13,"TransitStop"],[13,"TransitRoute"],[13,"ParkedCar"],[13,"BldgInfo"],[13,"BldgPeople"],[13,"ParkingLot"],[13,"Crowd"],[13,"Area"],[13,"IntersectionInfo"],[13,"IntersectionTraffic"],[13,"IntersectionDelay"],[13,"IntersectionDemand"],[13,"IntersectionArrivals"],[13,"IntersectionTrafficSignal"],[13,"IntersectionProblems"],[13,"LaneInfo"],[13,"LaneDebug"],[13,"LaneTraffic"],[13,"LaneProblems"],[8,"Layer"],[13,"Replace"],[13,"Transition"],[13,"Road"],[13,"Bldg"],[13,"Lot"],[3,"TitleScreen"],[4,"LoadStage"],[13,"GotScenario"],[13,"LoadingPrebaked"],[13,"GotPrebaked"],[13,"Unlocked"],[13,"Locked"],[8,"TripProblemFilter"],[13,"Freeform"],[13,"PlayScenario"],[13,"OptimizeCommute"],[13,"Actdev"],[13,"Tutorial"],[13,"Path"],[13,"Scenario"],[13,"Future"],[4,"Mode"],[13,"DrawingArea"],[13,"PickingDestination"],[8,"TakeLayers"],[3,"NetworkGaps"],[13,"AltRoute"],[13,"Waypoint"]]},\
"geom":{"doc":"","t":[12,12,12,12,12,12,12,12,12,12,3,4,3,3,3,3,3,17,3,3,3,8,3,3,3,3,13,13,13,13,13,13,3,3,3,3,3,3,4,3,3,3,13,3,0,11,11,11,11,12,12,0,12,0,11,11,11,11,0,12,11,11,5,0,0,0,11,11,11,11,10,12,5,5,0,10,12,12,11,11,12,12,0,12,12,12,12,12,12,11,12,12,12,12,12,12,0,12,0,0,0,12,12,12,12,12,12,12,0,12,12,11,5,0,0,0,12,0,11,11,10,12,12,5,11,11,11,11,11,11,11,12,12,12,12,11,12,3,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,17,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,5,12,3,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,12,11,11,12,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,17,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,3,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,10,10,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["0","0","0","0","0","0","0","0","1","1","Angle","ArrowCap","Bounds","Circle","CornerRadii","Distance","Duration","EPSILON_DIST","FindClosest","GPSBounds","HashablePt2D","HgramValue","Histogram","InfiniteLine","Line","LonLat","Max","Mean","Min","P50","P90","P99","Percent","PolyLine","Polygon","Pt2D","Ring","Speed","Statistic","Tessellation","Time","Triangle","Triangle","UnitFmt","angle","borrow","borrow","borrow_mut","borrow_mut","bottom_left","bottom_right","bounds","center","circle","clone","clone","clone_into","clone_into","conversions","count","default","deserialize","deserialize_f64","distance","duration","find_closest","fmt","from","from","from","from_u64","geometries","geometries_to_geojson","geometries_with_properties_to_geojson","gps","hgram_zero","histogram","indices","into","into","latitude","length","line","longitude","max","max_lat","max_lon","max_x","max_y","metric","metric","min","min_lat","min_lon","min_x","min_y","percent","points","polygon","polyline","pt","pt1","pt2","pt3","pts","pts","quadtree","radius","ring","rings","round_durations","serialize","serialize_f64","speed","stats","tessellation","tessellation","time","to_owned","to_owned","to_u64","top_left","top_right","trim_f64","try_from","try_from","try_into","try_into","type_id","type_id","uniform","x","x_nan","y","y_nan","zero","0","Angle","ZERO","add","approx_eq","approx_parallel","average","borrow","borrow_mut","clone","clone_into","degrees","deserialize","eq","fmt","fmt","from","into","invert_y","ne","neg","new_rads","normalized_degrees","normalized_radians","opposite","partial_cmp","reorient","rotate_degs","serialize","shortest_rotation_towards","simple_shortest_rotation_towards","to_owned","to_string","try_from","try_into","type_id","Bounds","GPSBounds","add_buffer","as_bbox","borrow","borrow","borrow_mut","borrow_mut","center","clone","clone","clone_into","clone_into","contains","contains","convert","convert_back","deserialize","deserialize","eq","eq","fmt","fmt","from","from","from","from","from_polygons","get_max_world_pt","get_rectangle","get_rectangle","height","into","into","max_lat","max_lon","max_x","max_y","min_lat","min_lon","min_x","min_y","ne","ne","new","new","scale","serialize","serialize","to_bounds","to_circle","to_owned","to_owned","try_convert","try_from","try_from","try_into","try_into","type_id","type_id","union","update","update","width","zero","Circle","TRIANGLES_PER_CIRCLE","borrow","borrow_mut","center","clone","clone_into","contains_pt","deserialize","fmt","fmt","from","get_bounds","into","new","radius","serialize","to_outline","to_owned","to_partial_tessellation","to_polygon","to_ring","to_string","try_from","try_into","type_id","pts_to_line_string","0","Distance","ZERO","abs","add","add_assign","borrow","borrow_mut","centimeters","clone","clone_into","cmp","const_meters","default","deserialize","div","div","div","eq","feet","fmt","fmt","from","from_u64","from_u64","hgram_zero","inches","inner_meters","into","meters","miles","mul","mul_assign","ne","neg","partial_cmp","round_up_for_axis","safe_percent","serialize","sqrt","sub","sub_assign","sum","to_feet","to_miles","to_owned","to_string","to_string","to_u64","to_u64","try_from","try_into","type_id","0","Duration","EPSILON","ZERO","abs","add","add_assign","borrow","borrow_mut","clone","clone_into","cmp","const_seconds","default","deserialize","div","div","epsilon_eq","eq","f64_minutes","fmt","fmt","from","from_u64","from_u64","get_parts","hgram_zero","hours","inner_seconds","into","make_intervals_for_max","milliseconds","minutes","mul","mul","ne","neg","num_minutes_rounded_up","parse","partial_cmp","realtime_elapsed","rem","round_up","seconds","serialize","sub","sub_assign","sum","to_owned","to_rounded_string","to_string","to_string","to_u64","to_u64","try_from","try_into","type_id","FindClosest","add","add_polygon","all_close_pts","borrow","borrow_mut","closest_pt","from","geometries","into","new","quadtree","try_from","try_into","type_id","LonLat","borrow","borrow_mut","center","clone","clone_into","cmp","deserialize","eq","fast_dist","fmt","fmt","from","gps_dist","into","latitude","longitude","ne","new","parse_geojson_polygons","parse_wkt_linestring","partial_cmp","read_osmosis_polygon","serialize","to_geojson","to_owned","to_pt","to_string","try_from","try_into","type_id","write_osmosis_polygon","x","y","0","0","1","1","InfiniteLine","Line","angle","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","contains_pt","crosses","deserialize","deserialize","dist_along","dist_along_of_point","eq","fmt","fmt","fmt","fmt","from","from","from_pt_angle","infinite","intersection","intersection","intersection_infinite","into","into","is_counter_clockwise","length","make_polygons","middle","must_dist_along","must_new","ne","new","percent_along","percent_along_of_point","percent_slice","points","pt1","pt2","reversed","serialize","serialize","shift_either_direction","shift_left","shift_right","slice","to_owned","to_owned","to_polyline","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unbounded_dist_along","unbounded_percent_along","0","Percent","borrow","borrow_mut","clone","clone_into","eq","fmt","from","inner","int","into","ne","of","to_owned","to_string","try_from","try_into","type_id","Polygon","area","borrow","borrow_mut","center","centered_on","clip_polyline","clip_ring","clone","clone_into","concave_hull","contains_pt","convex_hull","deserialize","difference","dummy","eq","fmt","fmt","from","from_geojson","from_geojson_bytes","from_multi","from_rings","from_triangle","get_bounds","get_outer_ring","get_rings","intersection","intersects","intersects_polyline","into","into_outer_ring","maybe_rectangle","maybe_rounded_rectangle","must_scale","ne","pill","polylabel","pretessellated","rectangle","rectangle_centered","rectangle_two_corners","rings","rotate","rotate_around","rounded_rectangle","scale","serialize","simplify","tessellation","to_geo","to_geojson","to_outline","to_owned","to_string","transform","translate","triangles","try_from","try_from","try_into","type_id","union_all_into_multipolygon","with_holes","ArrowCap","MITER_THRESHOLD","PolyLine","Triangle","append","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","dashed_arrow","dashed_lines","deduping_new","deserialize","dist_along","dist_along_of_point","dummy","eq","exact_dashed_polygons","exact_slice","extend","extend_to_length","first_half","first_line","first_pt","fix_angles","fmt","fmt","force_extend","from","from","from_geojson","get_bounds","get_four_corners_of_thickened","get_slice_ending_at","get_slice_starting_at","interpolate_points","intersection","intersection_infinite","into","into","into_points","last_line","last_pt","length","length","lines","make_arrow","make_double_arrow","make_polygons","maybe_exact_slice","maybe_make_arrow","maybe_reverse","middle","must_dist_along","must_extend","must_new","must_shift_left","must_shift_right","ne","new","optionally_push","overall_angle","points","project_pt","pts","quadrant","reversed","safe_get_slice_ending_at","safe_get_slice_starting_at","second_half","serialize","shift_either_direction","shift_from_center","shift_left","shift_right","shift_with_corrections","shift_with_sharp_angles","slice","step_along","step_along_start_end","thicken_tessellation","to_geo","to_geojson","to_owned","to_set","to_string","to_thick_boundary","to_thick_ring","trim_to_endpts","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_new","HashablePt2D","Pt2D","angle_to","approx_dedupe","approx_eq","borrow","borrow","borrow_mut","borrow_mut","center","clone","clone","clone_into","clone_into","cmp","deserialize","dist_to","eq","eq","fast_dist","fmt","fmt","fmt","from","from","from","from","hash","into","into","ne","new","offset","partial_cmp","project_away","raw_dist_to","serialize","simplify_rdp","to_geojson","to_gps","to_hashable","to_owned","to_owned","to_pt2d","to_string","try_from","try_from","try_into","try_into","type_id","type_id","x","x","x_nan","y","y","y_nan","zero","Ring","all_intersections","as_geo_linestring","borrow","borrow_mut","clone","clone_into","contains_pt","deduping_new","deserialize","doubles_back","eq","fmt","fmt","from","get_both_slices_btwn","get_shorter_slice_between","get_shorter_slice_btwn","get_slice_between","into","into_points","into_polygon","must_new","ne","new","points","polylabel","pts","serialize","split_points","to_geojson","to_outline","to_owned","to_string","translate","try_from","try_from","try_into","type_id","0","Speed","ZERO","add","borrow","borrow_mut","clone","clone_into","cmp","const_meters_per_second","deserialize","div","eq","fmt","from","from_dist_time","inner_meters_per_second","into","km_per_hour","meters_per_second","miles_per_hour","mul","mul","ne","neg","partial_cmp","serialize","sub","to_owned","to_string","try_from","try_into","type_id","HgramValue","Histogram","Max","Mean","Min","P50","P90","P99","Statistic","add","all","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","count","count","default","describe","deserialize","eq","fmt","from","from","from_u64","hgram_zero","histogram","into","into","max","min","new","partial_cmp","percentile","remove","seems_eq","select","serialize","to_owned","to_owned","to_string","to_u64","try_from","try_from","try_into","try_into","type_id","type_id","Tessellation","Triangle","borrow","borrow","borrow_mut","borrow_mut","center","clone","clone","clone_into","clone_into","consume","deserialize","difference","downsize","eq","fmt","fmt","from","from","from","from","from_ring","get_bounds","indices","inplace_multi_transform","into","into","ne","new","points","pt1","pt2","pt3","rotate","rotate_around","scale","scale_xy","serialize","to_geo","to_geojson","to_owned","to_owned","transform","translate","triangles","try_from","try_from","try_into","try_into","type_id","type_id","union","union_all","0","START_OF_DAY","Time","add","add_assign","ampm_tostring","as_filename","borrow","borrow_mut","clamped_sub","clone","clone_into","cmp","default","deserialize","eq","fmt","fmt","from","get_hours","get_parts","hash","inner_seconds","into","ne","parse","partial_cmp","percent_of","round_seconds","seconds_since_midnight","serialize","sub","sub","to_owned","to_percent","to_string","try_from","try_into","type_id"],"q":["geom","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom::angle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom::bounds","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom::circle","","","","","","","","","","","","","","","","","","","","","","","","","","geom::conversions","geom::distance","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom::duration","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom::find_closest","","","","","","","","","","","","","","","geom::gps","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom::line","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom::percent","","","","","","","","","","","","","","","","","","","geom::polygon","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom::polyline","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom::pt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom::ring","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom::speed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom::stats","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom::tessellation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom::time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","An angle, stored in radians.","","Represents a rectangular boundary of <code>Pt2D</code> points.","A circle, defined by a center and radius.","","A distance, in meters. Can be negative.","A duration, in seconds. Can be negative.","","A quad-tree to quickly find the closest points to some …","Represents a rectangular boundary of <code>LonLat</code> points. After …","This represents world space, NOT LonLat.","","","","A line segment.","Represents a (longitude, latitude) point.","","","","","","","Most of the time, [0, 1]. But some callers may go outside …","","","This represents world-space in meters.","Maybe a misnomer, but like a PolyLine, but closed.","In meters per second. Can be negative.","","A tessellated polygon, ready for rendering.","In seconds since midnight. Can’t be negative.","","","Specifies how to stringify different geom objects.","","","","","","","","","","","","","","","Conversions between this crate and <code>geo</code>. Long-term, we …","","","","Deserializes a trimmed <code>f64</code> from an <code>i32</code>.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Create a GeoJson with one feature per geometry, and no …","Create a GeoJson with one feature per geometry, with the …","","","","Groups of three indices make up the triangles","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Default settings using metric.","Display in metric; US imperial otherwise.","","","","","","","These points aren’t in any meaningful order. It’s not …","","","","","","","","","","","","","Round <code>Duration</code>s to a whole number of seconds.","","Serializes a trimmed <code>f64</code> as an <code>i32</code> to save space.","","","","","","","","","","","Reduce the precision of an f64. This helps ensure …","","","","","","","","","","","","","","An angle, stored in radians.","","","True if this angle is within some degrees of another, …","True if this angle is within some degrees of another, …","Calculates the average of some angles.","","","","","Create an angle in degrees.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Create an angle in radians.","Returns [0, 360)","Returns [0, 2pi)","Invert the direction of this angle.","","I don’t know how to describe what this does. Use for …","Rotates this angle by some degrees.","","Logically this returns [-180, 180], but keep in mind when …","Returns [-180, 180]","","","","","","Represents a rectangular boundary of <code>Pt2D</code> points.","Represents a rectangular boundary of <code>LonLat</code> points. After …","Expand the existing boundary by some distance evenly on …","Converts the boundary to the format used by <code>aabb_quadtree</code>.","","","","","The center point of this boundary.","","","","","True if the point is within the boundary.","True if the point is within the boundary.","Convert all points to map-space. The points may be outside …","Convert map-space points back to <code>LonLat</code>s. This is only …","","","","","","","Create a boundary covering some points.","Returns the argument unchanged.","Create a boundary covering some points.","Returns the argument unchanged.","Create a boundary covering some polygons.","The bottom-right corner of the boundary, in map-space.","Creates a rectangle covering this boundary.","Returns points in order covering this boundary.","The height of this boundary.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","A boundary including no points.","A boundary including no points.","Transform the boundary by scaling its corners.","","","Converts the boundary to map-space.","Creates a circle centered in the middle of this boundary. …","","","Convert all points to map-space, failing if any points are …","","","","","","","Unions two boundaries.","Update the boundary to include this point.","Update the boundary to include this point.","The width of this boundary.","","A circle, defined by a center and radius.","","","","","","","True if the point is inside the circle.","","","","Returns the argument unchanged.","Get the boundary containing this circle.","Calls <code>U::from(self)</code>.","Creates a circle.","","","Creates an outline around the circle, strictly contained …","","Renders some percent, between [0, 1], of the circle. The …","Renders the circle as a polygon.","Returns the ring around the circle.","","","","","","","A distance, in meters. Can be negative.","","Returns the absolute value of this distance.","","","","","Creates a distance in centimeters.","","","","","","","","","","","Creates a distance in feet.","","","Returns the argument unchanged.","","","","Creates a distance in inches.","Returns the distance in meters. Prefer to work with …","Calls <code>U::from(self)</code>.","Creates a distance in meters.","Creates a distance in miles.","","","","","","Rounds this distance up to a higher, more “even” value …","Calculates a percentage, usually in [0.0, 1.0], of self / …","","Returns the square root of this distance.","","","","Returns the distance in feet.","Returns the distance in miles.","","Describes the distance according to formatting rules. …","","","","","","","","A duration, in seconds. Can be negative.","","","","","","","","","","","","","","","","If two durations are within this amount, they’ll print …","","Creates a duration in minutes.","","","Returns the argument unchanged.","","","Splits the duration into (hours, minutes, seconds, …","","Creates a duration in hours.","Returns the duration in seconds. Prefer working in …","Calls <code>U::from(self)</code>.","Returns (rounded max, the boundaries)","Creates a duration in milliseconds.","Creates a duration in minutes.","","","","","Returns the duration as a number of minutes, rounded up.","Parses a duration such as “3:00” to …","","Returns the duration elapsed from this moment in real time.","","Rounds a duration up to the nearest whole number multiple.","Creates a duration in seconds.","","","","","","Shows only the largest unit (hours, minute, seconds), …","Describes the duration according to formatting rules.","","","","","","","A quad-tree to quickly find the closest points to some …","Add an object to the quadtree, remembering some key …","Adds the outer ring of a polygon to the quadtree.","For every object within some distance of a query point, …","","","Finds the closest point on the existing geometry to the …","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Creates the quad-tree, limited to points contained in the …","","","","","Represents a (longitude, latitude) point.","","","Finds the average of a set of coordinates.","","","","","","Pretty meaningless units, for comparing distances very …","","","Returns the argument unchanged.","Returns the Haversine distance to another point.","Calls <code>U::from(self)</code>.","","","","Note the order of arguments!","Extract polygons from a raw GeoJSON string. For …","Parses a WKT-style line-string into a list of coordinates.","","Parses a file in the …","","","","Transform this to a world-space point. Can go out of …","","","","","Writes a set of points to a file in the …","Returns the longitude of this point.","Returns the latitude of this point.","","","","","","A line segment.","The angle of the line segment, from the first to the …","","","","","","","","","","Determine if two line segments intersect, but more so than …","","","Returns a point along the line segment, unless the …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns an infinite line passing through this line’s two …","If two line segments intersect – including endpoints – …","Fails for parallel lines.","If the line segment intersects with an infinite line – …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Length of the line segment","Returns a thick line segment.","","Equivalent to <code>self.dist_along(dist).unwrap()</code>. Use this to …","Equivalent to <code>Line::new(pt1, pt2).unwrap()</code>. Use this to …","","Creates a line segment between two points, which must not …","","","Returns a subset of this line, with two percentages along …","Returns the two points in this line segment.","Returns the first point in this line segment.","Returns the second point in this line segment.","Returns a reversed line segment","","","Perpendicularly shifts the line to the right if positive …","Perpendicularly shifts the line over to the left. Width …","Perpendicularly shifts the line over to the right. Width …","","","","Returns a polyline containing these two points.","","","","","","","","","","","","Most of the time, [0, 1]. But some callers may go outside …","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","Usually m^2, unless the polygon is in screen-space","","","Returns the arithmetic mean of the outer ring’s points. …","","Doesn’t handle multiple crossings in and out.","","","","","Does this polygon contain the point in its interior?","","","","An arbitrary placeholder value, when Option types aren’t …","","","","Returns the argument unchanged.","","Extracts all polygons from raw bytes representing a …","","","","","","","","Do two polygons intersect at all?","Does this polygon intersect a polyline?","Calls <code>U::from(self)</code>.","","Top-left at the origin. Doesn’t take Distance, because …","Top-left at the origin. Doesn’t take Distance, because …","When <code>factor</code> is known to be over 1, then scaling can’t …","","A rectangle, two sides of which are fully rounded …","Find the “pole of inaccessibility” – the most …","","Top-left at the origin. Doesn’t take Distance, because …","","","","","","Top-left at the origin. Doesn’t take Distance, because …","When <code>factor</code> is small, this may collapse Rings and thus …","","If simplification fails, just keep the original polygon","","","Optionally map the world-space points back to GPS.","Creates the outline around the polygon (both the exterior …","","","Transformations must preserve Rings.","","","","","","","Union all of the polygons into one geo::MultiPolygon","","","","","","One or both args might be empty.","","","","","","","","Don’t draw the dashes too close to the ends.","First dedupes adjacent points","","","","An arbitrary placeholder value, when Option types aren’t …","","","No excess leftover distance allowed.","Glue together two polylines in order. The last point of …","If the current line is at least this long, return it. …","","","","","","","Like <code>extend</code>, but handles the last and first point not …","Returns the argument unchanged.","Returns the argument unchanged.","","","This does the equivalent of make_polygons, returning the …","Panics if the pt is not on the polyline. Returns None if …","Returns None if the point is the last point.","","Also return the angle of the line where the hit was found","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","If the length is too short, just give up and make the …","","This produces a <code>Polygon</code> with a valid <code>Ring</code>. It may crash if …","","Fail if the length is too short.","","","","Like <code>extend</code>, but panics on failure.","","","","","","Extends <code>self</code> by a single point. If the new point is close …","Returns the angle from the start to end of this polyline.","","Returns the point on the polyline closest to the query.","","Returns the quadrant where the overall angle of this …","","Same as get_slice_ending_at, but returns None if the point …","Same as get_slice_starting_at, but returns None if the …","","","Perpendicularly shifts the polyline to the right if …","<code>self</code> represents some center, with <code>total_width</code>. Logically …","","","","","Returns the excess distance left over from the end","Walk along the PolyLine, starting <code>buffer_ends</code> from the …","Walk along the PolyLine, from <code>start_buffer</code> to …","Just produces a Tessellation","","Produces a GeoJSON linestring, optionally mapping the …","","","","","Like make_polygons, but make sure the points actually form …","","","","","","","","Doesn’t check for duplicates. Use at your own risk.","This represents world space, NOT LonLat.","This represents world-space in meters.","","","","","","","","","","","","","","","","","","Pretty meaningless units, for comparing distances very …","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","If distance is negative, this projects a point in …","","","Simplifies a list of points using Ramer-Douglas-Peuckr","","Can go out of bounds.","","","","","","","","","","","","","","","","","","","Maybe a misnomer, but like a PolyLine, but closed.","Be careful with the order of results. Hits on an earlier …","Print the coordinates of this ring as a <code>geo::LineString</code> …","","","","","","First dedupes adjacent points","","Look for “bad” rings that double back on themselves. …","","","","Returns the argument unchanged.","","Assuming both points are somewhere along the ring, return …","","Assuming both points are somewhere along the ring, return …","Calls <code>U::from(self)</code>.","","","","","","","Find the “pole of inaccessibility” – the most …","","","Extract all PolyLines and Rings. Doesn’t handle crazy …","Produces a GeoJSON polygon, optionally mapping the …","Draws the ring with some thickness, with half of it …","","","Translates the ring by a fixed offset.","","","","","","In meters per second. Can be negative.","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Describes the speed according to formatting rules.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","None if empty","","Could implement PartialEq, but be a bit more clear how …","","","","","","","","","","","","","A tessellated polygon, ready for rendering.","","","","","","","","","","","Returns (points, indices) for rendering","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","The <code>points</code> are not necessarily a <code>Ring</code>, which has strict …","","Groups of three indices make up the triangles","Equivalent to …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","These points aren’t in any meaningful order. It’s not …","","","","","","","","","","Produces a GeoJSON multipolygon consisting of individual …","","","","","","","","","","","","","","","","In seconds since midnight. Can’t be negative.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Rounded down. 6:59:00 is hour 6.","(hours, minutes, seconds, centiseconds)","","For RNG range generation. Don’t abuse.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[14,20,33,38,39,41,32,60,38,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,57,57,57,57,57,57,0,0,0,0,0,0,0,0,0,0,48,0,0,1,2,1,2,2,2,0,26,0,1,2,1,2,0,56,2,1,0,0,0,0,2,1,2,2,55,36,0,0,0,55,56,28,1,2,24,40,0,24,56,23,23,19,19,1,1,56,23,23,19,19,0,28,0,0,0,44,44,44,40,29,36,26,0,25,1,1,0,0,0,0,25,0,1,2,55,2,2,0,1,2,1,2,1,2,2,22,52,22,52,2,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,19,19,19,23,19,23,19,19,23,19,23,19,23,23,23,19,23,19,23,19,23,19,19,23,23,19,23,19,23,19,19,23,23,23,19,19,23,23,19,19,19,23,19,23,19,19,23,23,19,19,23,23,19,23,19,23,19,23,19,19,23,19,19,0,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,20,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,33,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,38,39,38,39,0,0,38,38,39,38,39,38,39,38,39,38,38,38,39,38,38,38,38,38,39,39,38,39,39,38,38,39,38,38,39,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,39,38,38,38,38,38,39,38,38,39,38,39,38,39,38,39,38,38,41,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,0,0,48,40,48,40,48,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,40,40,40,48,40,40,40,40,40,40,40,40,40,48,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,40,40,40,40,48,40,48,40,48,40,40,0,0,22,22,22,22,52,22,52,22,22,52,22,52,52,22,22,22,52,22,22,22,52,22,22,22,52,52,22,52,52,22,22,52,22,22,22,22,22,22,22,22,52,52,22,22,52,22,52,22,52,22,22,52,22,22,52,22,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,32,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,57,57,57,57,57,57,0,56,57,57,56,57,56,57,56,57,56,57,56,56,56,56,57,57,57,57,56,55,55,56,57,56,56,56,56,57,56,56,56,56,57,57,56,57,55,57,56,57,56,57,56,0,0,28,44,28,44,28,28,44,28,44,28,28,28,0,28,28,44,28,28,28,44,28,28,28,28,28,44,28,28,28,44,44,44,28,28,28,28,28,28,28,28,44,28,28,28,28,44,28,44,28,44,28,28,60,60,0,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,[1,1],[2,2],[[]],[[]],0,0,[[],2],[[],[[3,[1]]]],[4,[[3,[5]]]],0,0,0,[[2,6],7],[[]],[5,2],[[]],[8],0,[[[10,[9]]],11],[10,11],0,[[]],0,0,[[]],[[]],0,0,0,0,0,0,0,0,0,[[],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,3],[[5,12],3],0,0,0,0,0,[[]],[[]],[[],8],0,0,[5,5],[[],3],[[],3],[[],3],[[],3],[[],13],[[],13],[5,2],0,0,0,0,[[],2],0,0,0,[[14,14],14],[[14,14,5],15],[[14,14,5],15],[[[10,[14]]],14],[[]],[[]],[14,14],[[]],[5,14],[[],[[3,[14]]]],[[14,14],15],[[14,6],7],[[14,6],7],[[]],[[]],[14,14],[[14,14],15],[14,14],[5,14],[14,5],[14,5],[14,14],[[14,14],[[17,[16]]]],[14,14],[[14,5],14],[14,3],[[14,14],14],[[14,14],5],[[]],[[],18],[[],3],[[],3],[[],13],0,0,[[19,20]],[19,21],[[]],[[]],[[]],[[]],[19,22],[19,19],[23,23],[[]],[[]],[[19,22],15],[[23,24],15],[23,[[10,[22]]]],[23,[[10,[24]]]],[[],[[3,[19]]]],[[],[[3,[23]]]],[[19,19],15],[[23,23],15],[[19,6],7],[[23,6],7],[[],19],[[]],[[[10,[24]]],23],[[]],[[],19],[23,22],[19,25],[23,[[10,[24]]]],[19,5],[[]],[[]],0,0,0,0,0,0,0,0,[[19,19],15],[[23,23],15],[[],19],[[],23],[[19,5],19],[19,3],[23,3],[23,19],[19,26],[[]],[[]],[23,[[17,[[10,[22]]]]]],[[],3],[[],3],[[],3],[[],3],[[],13],[[],13],[[19,19]],[[19,22]],[[23,24]],[19,5],[[],19],0,0,[[]],[[]],0,[26,26],[[]],[[26,22],15],[[],[[3,[26]]]],[[26,6],7],[[26,6],7],[[]],[26,19],[[]],[[22,20],26],0,[26,3],[[26,20],[[27,[25]]]],[[]],[[26,5],28],[26,25],[26,29],[[],18],[[],3],[[],3],[[],13],[[],30],0,0,0,[20,20],[[20,20],20],[[20,20]],[[]],[[]],[31,20],[20,20],[[]],[[20,20],16],[5,20],[[],20],[[],[[3,[20]]]],[[20,32],33],[[20,5],20],[[20,20],5],[[20,20],15],[5,20],[[20,6],7],[[20,6],7],[[]],[8,20],[8,20],[[],20],[5,20],[20,5],[[]],[5,20],[5,20],[[20,5],20],[[20,5]],[[20,20],15],[20,20],[[20,20],[[17,[16]]]],[20,20],[[20,20],5],[20,3],[20,20],[[20,20],20],[[20,20]],[[],20],[20,5],[20,5],[[]],[[20,1],18],[[],18],[20,8],[20,8],[[],3],[[],3],[[],13],0,0,0,0,[33,33],[[33,33],33],[[33,33]],[[]],[[]],[33,33],[[]],[[33,33],16],[5,33],[[],33],[[],[[3,[33]]]],[[33,33],5],[[33,5],33],[[33,33],15],[[33,33],15],[5,33],[[33,6],7],[[33,6],7],[[]],[8,33],[8,33],[33],[[],33],[31,33],[33,5],[[]],[[33,31]],[5,33],[31,33],[[33,5],33],[[33,32],20],[[33,33],15],[33,33],[33,31],[34,[[27,[33]]]],[[33,33],[[17,[16]]]],[35,33],[[33,33],33],[[33,33],33],[5,33],[33,3],[[33,33],33],[[33,33]],[[],33],[[]],[[33,31],18],[[33,1],18],[[],18],[33,8],[33,8],[[],3],[[],3],[[],13],0,[36],[[36,25]],[[36,22,20],10],[[]],[[]],[[36,22,20],17],[[]],0,[[]],[19,36],0,[[],3],[[],3],[[],13],0,[[]],[[]],[[],24],[24,24],[[]],[[24,24],16],[[],[[3,[24]]]],[[24,24],15],[[24,24],[[37,[5]]]],[[24,6],7],[[24,6],7],[[]],[[24,24],20],[[]],0,0,[[24,24],15],[[5,5],24],[18,[[27,[10]]]],[34,[[17,[[10,[24]]]]]],[[24,24],[[17,[16]]]],[34,[[27,[[10,[24]]]]]],[24,3],[24,9],[[]],[[24,23],22],[[],18],[[],3],[[],3],[[],13],[34,27],[24,5],[24,5],0,0,0,0,0,0,[38,14],[[]],[[]],[[]],[[]],[38,38],[39,39],[[]],[[]],[[38,22],15],[[38,38],15],[[],[[3,[38]]]],[[],[[3,[39]]]],[[38,20],[[27,[22]]]],[[38,22],[[17,[20]]]],[[38,38],15],[[38,6],7],[[38,6],7],[[39,6],7],[[39,6],7],[[]],[[]],[[22,14],39],[38,39],[[38,38],[[17,[22]]]],[[39,39],[[17,[22]]]],[[38,39],[[17,[22]]]],[[]],[[]],[[22,22,22],15],[38,20],[[38,20],25],[38,[[27,[22]]]],[[38,20],22],[[22,22],38],[[38,38],15],[[22,22],[[27,[38]]]],[[38,5],[[27,[22]]]],[[38,22],[[17,[5]]]],[[38,5,5],[[27,[38]]]],[38,[[10,[22]]]],[38,22],[38,22],[38,38],[38,3],[39,3],[[38,20],38],[[38,20],38],[[38,20],38],[[38,20,20],[[27,[38]]]],[[]],[[]],[38,40],[[],18],[[],18],[[],3],[[],3],[[],3],[[],3],[[],13],[[],13],[[38,20],22],[[38,5],22],0,0,[[]],[[]],[41,41],[[]],[[41,41],15],[[41,6],7],[[]],[41,5],[31,41],[[]],[[41,41],15],[[31,31],41],[[]],[[],18],[[],3],[[],3],[[],13],0,[25,5],[[]],[[]],[25,22],[[25,22],25],[[25,40],[[17,[[10,[22]]]]]],[[25,29],[[17,[[10,[22]]]]]],[25,25],[[]],[[[10,[22]],42],[[27,[25]]]],[[25,22],15],[[[10,[25]]],[[27,[25]]]],[[],[[3,[25]]]],[[25,25],[[27,[[10,[25]]]]]],[[],25],[[25,25],15],[[25,6],7],[[25,6],7],[[]],[[],[[27,[25]]]],[[23,15],[[27,[10]]]],[43,[[27,[[10,[25]]]]]],[[[10,[29]]],25],[44,25],[25,19],[25,29],[25],[[25,25],[[27,[[10,[25]]]]]],[[25,25],15],[[25,40],15],[[]],[25,29],[[5,5],[[27,[25]]]],[[5,5,[45,[2]]],[[17,[25]]]],[[25,5],25],[[25,25],15],[[5,5],25],[25,22],[[[10,[29]],28],25],[[5,5],25],[[22,20,20],25],[[22,22],[[17,[25]]]],0,[[25,14],25],[[25,14,22],25],[[5,5,[45,[2]]],25],[[25,5],[[27,[25]]]],[25,3],[[25,5],25],0,[25,46],[[25,[17,[23]]],9],[[25,20],28],[[]],[[],18],[[25,47],[[27,[25]]]],[[25,5,5],25],[25,[[10,[44]]]],[46,[[27,[25]]]],[[],3],[[],3],[[],13],[[[10,[25]]],43],[[29,[10,[29]]],25],0,0,0,0,[[[10,[22]],[10,[22]]],[[27,[[10,[22]]]]]],[[]],[[]],[[]],[[]],[40,40],[[]],[[40,20,20,20,48],[[10,[25]]]],[[40,20,20,20],[[10,[25]]]],[[[10,[22]]],[[27,[40]]]],[[],[[3,[40]]]],[[40,20],27],[[40,22],17],[[],40],[[40,40],15],[[40,20,20,20],[[10,[25]]]],[[40,20,20],40],[[40,40],[[27,[40]]]],[[40,20],40],[40,[[27,[40]]]],[40,38],[40,22],[[40,40],[[27,[40]]]],[[40,6],7],[[40,6],7],[[40,40],[[27,[40]]]],[[]],[[]],[[49,[17,[23]]],[[27,[40]]]],[40,19],[[40,20],17],[[40,22],[[17,[40]]]],[[40,22],[[17,[40]]]],[[40,20],40],[[40,40],17],[[40,39],[[17,[22]]]],[[]],[[]],[40,[[10,[22]]]],[40,38],[40,22],[40,20],0,[40,50],[[40,20,48],25],[[40,20,48],25],[[40,20],25],[[40,20,20],[[27,[40]]]],[[40,20,48],[[17,[25]]]],[[40,15],40],[40,22],[[40,20]],[[40,40],40],[[[10,[22]]],40],[[40,20],40],[[40,20],40],[[40,40],15],[[[10,[22]]],[[27,[40]]]],[[40,22],40],[40,14],[40,10],[[40,22],22],0,[40,51],[40,40],[[40,22],[[17,[40]]]],[[40,22],[[17,[40]]]],[40,[[27,[40]]]],[40,3],[[40,20],[[27,[40]]]],[[40,20,20],[[27,[40]]]],[[40,20],[[27,[40]]]],[[40,20],[[27,[40]]]],[[40,20],[[27,[40]]]],[[40,20,5],[[27,[[10,[22]]]]]],[[40,20,20],27],[[40,20,20],10],[[40,20,20,20],10],[[40,20],28],[40,30],[[40,[17,[23]]],9],[[]],[[]],[[],18],[[40,20,20],[[17,[28]]]],[[40,20],29],[[40,22,22],40],[[],3],[[],3],[[],3],[[],3],[[],13],[[],13],[[[10,[22]]],40],0,0,[[22,22],14],[[[10,[22]],20],[[10,[22]]]],[[22,22,20],15],[[]],[[]],[[]],[[]],[[],22],[22,22],[52,52],[[]],[[]],[[52,52],16],[[],[[3,[22]]]],[[22,22],20],[[22,22],15],[[52,52],15],[[22,22],[[37,[5]]]],[[22,6],7],[[22,6],7],[[52,6],7],[53,22],[[]],[54,22],[[]],[52],[[]],[[]],[[52,52],15],[[5,5],22],[[22,5,5],22],[[52,52],[[17,[16]]]],[[22,20,14],22],[[22,22],5],[22,3],[[[10,[22]],5],[[10,[22]]]],[[22,[17,[23]]],9],[[22,23],24],[22,52],[[]],[[]],[52,22],[[],18],[[],3],[[],3],[[],3],[[],3],[[],13],[[],13],[22,5],0,0,[22,5],0,0,[[],22],0,[[29,40],[[10,[22]]]],[29,18],[[]],[[]],[29,29],[[]],[[29,22],15],[[[10,[22]]],[[27,[29]]]],[[],[[3,[29]]]],[29,15],[[29,29],15],[[29,6],7],[[29,6],7],[[]],[[29,22,22],17],[[29,22,22],[[17,[40]]]],[[29,22,22],[[17,[40]]]],[[29,22,22,15],[[17,[40]]]],[[]],[29,[[10,[22]]]],[29,25],[[[10,[22]]],29],[[29,29],15],[[[10,[22]]],[[27,[29]]]],[29,10],[29,22],0,[29,3],[[],27],[[29,[17,[23]]],9],[[29,20],28],[[]],[[],18],[[29,5,5],29],[[],3],[30,[[27,[29]]]],[[],3],[[],13],0,0,0,[[32,32],32],[[]],[[]],[32,32],[[]],[[32,32],16],[5,32],[[],[[3,[32]]]],[[32,32],5],[[32,32],15],[[32,6],7],[[]],[[20,33],32],[32,5],[[]],[5,32],[5,32],[5,32],[[32,5],32],[[32,33],20],[[32,32],15],[32,32],[[32,32],[[17,[16]]]],[32,3],[[32,32],32],[[]],[[32,1],18],[[],3],[[],3],[[],13],0,0,0,0,0,0,0,0,0,[[[56,[[55,[[55,[[55,[55]]]]]]]],[55,[[55,[[55,[[55,[55]]]]]]]]]],[[],[[10,[57]]]],[[]],[[]],[[]],[[]],[57,57],[[[56,[[0,[58,[55,[[0,[58,[55,[[0,[58,[55,[[0,[58,55]]]]]]]]]]]]]]]]],[[56,[[0,[58,[55,[[0,[58,[55,[[0,[58,[55,[[0,[58,55]]]]]]]]]]]]]]]]]],[[]],[[]],[[57,57],16],[[[56,[[55,[[55,[[55,[55]]]]]]]]],31],0,[[],[[56,[[55,[[55,[[55,[55]]]]]]]]]],[[[56,[[55,[[55,[[55,[55]]]]]]]]],18],[[],[[3,[57]]]],[[57,57],15],[[57,6],7],[[]],[[]],[8],[[]],0,[[]],[[]],0,0,[[],[[56,[[55,[[55,[[55,[55]]]]]]]]]],[[57,57],[[17,[16]]]],[[[56,[[55,[[55,[[55,[55]]]]]]]],5],[[17,[[55,[[55,[[55,[55]]]]]]]]]],[[[56,[[55,[[55,[[55,[55]]]]]]]],[55,[[55,[[55,[[55,[55]]]]]]]]]],[[[56,[[55,[[55,[[55,[55]]]]]]]],56],15],[[[56,[[55,[[55,[[55,[55]]]]]]]],57],[[17,[[55,[[55,[[55,[55]]]]]]]]]],[57,3],[[]],[[]],[[],18],[[],8],[[],3],[[],3],[[],3],[[],3],[[],13],[[],13],0,0,[[]],[[]],[[]],[[]],[28,22],[28,28],[44,44],[[]],[[]],[28],[[],[[3,[28]]]],[[28,28],[[27,[[10,[25]]]]]],[[[10,[31]]],[[10,[59]]]],[[28,28],15],[[28,6],7],[[44,6],7],[[]],[25,28],[46,28],[[]],[[[10,[22]]],28],[28,19],0,[[28,5,5,5,14,22]],[[]],[[]],[[28,28],15],[[[10,[22]],[10,[31]]],28],0,0,0,0,[[28,14]],[[28,14,22]],[[28,5]],[[28,5,5]],[28,3],[28,46],[[28,[17,[23]]],9],[[]],[[]],[[28,47]],[[28,5,5]],[28,[[10,[44]]]],[[],3],[[],3],[[],3],[[],3],[[],13],[[],13],[[28,28],28],[[[10,[28]]],28],0,0,0,[[60,33],60],[[60,33]],[60,18],[60,18],[[]],[[]],[[60,33],60],[60,60],[[]],[[60,60],16],[[],60],[[],[[3,[60]]]],[[60,60],15],[[60,6],7],[[60,6],7],[[]],[60,31],[60],[60],[60,5],[[]],[[60,60],15],[34,[[27,[60]]]],[[60,60],[[17,[16]]]],[[60,5],60],[[60,5],60],[5,60],[60,3],[[60,33],60],[[60,60],33],[[]],[[60,60],5],[[],18],[[],3],[[],3],[[],13]],"p":[[3,"UnitFmt"],[3,"CornerRadii"],[4,"Result"],[8,"Deserializer"],[15,"f64"],[3,"Formatter"],[6,"Result"],[15,"u64"],[3,"Geometry"],[3,"Vec"],[4,"GeoJson"],[8,"Serializer"],[3,"TypeId"],[3,"Angle"],[15,"bool"],[4,"Ordering"],[4,"Option"],[3,"String"],[3,"Bounds"],[3,"Distance"],[3,"Rect"],[3,"Pt2D"],[3,"GPSBounds"],[3,"LonLat"],[3,"Polygon"],[3,"Circle"],[6,"Result"],[3,"Tessellation"],[3,"Ring"],[3,"LineString"],[15,"usize"],[3,"Speed"],[3,"Duration"],[15,"str"],[6,"Instant"],[3,"FindClosest"],[3,"NotNan"],[3,"Line"],[3,"InfiniteLine"],[3,"PolyLine"],[3,"Percent"],[15,"u32"],[3,"MultiPolygon"],[3,"Triangle"],[8,"Into"],[3,"Polygon"],[8,"Fn"],[4,"ArrowCap"],[3,"Feature"],[8,"Iterator"],[15,"i64"],[3,"HashablePt2D"],[3,"Point"],[3,"Coordinate"],[8,"HgramValue"],[3,"Histogram"],[4,"Statistic"],[8,"Clone"],[15,"u16"],[3,"Time"]]},\
"headless":{"doc":"This runs a simulation without any graphics and serves a …","t":[3,3,3,3,3,3,3,3,3,3,3,3,3,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,12,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,5,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["AgentPosition","AgentPositions","Args","BlockedByGraph","Delays","FinishedTrip","LOAD","LoadSim","MAP","RoadThroughput","SIM","Throughput","TrafficSignalState","__private_field","__private_field","__private_field","accepted","agents","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blocked_by","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clap","counts","current_stage_idx","deref","deref","deref","deserialize","distance_crossed","distance_crossed","duration","edits","export_geometry","from","from","from","from","from","from","from","from","from","from","from","from","from","from_clap","handle_command","id","id","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","main","mode","modifiers","opts","opts","per_direction","per_direction","person","person","port","pos","remaining_time","rng_seed","rng_seed","scenario","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serve_req","setup","trip","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vehicle_type","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","waiting"],"q":["headless","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Each entry indicates that some agent has been stuck in one …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The distance crossed so far by the agent, in meters. There …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","The agent’s ID","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","None for buses","What port to run the JSON API on.","The agent’s current position. For pedestrians, this is …","","An arbitrary number to seed the random number generator. …","","","","","","","","","","","","","None for buses","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","None for pedestrians","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,6,29,26,3,5,6,13,23,24,25,26,27,28,29,30,7,3,5,6,13,23,24,25,26,27,28,29,30,7,30,3,5,6,13,23,24,25,26,27,28,29,30,7,3,5,6,13,23,24,25,26,27,28,29,30,7,13,28,29,3,5,6,7,23,27,23,7,0,3,5,6,13,23,24,25,26,27,28,29,30,7,13,0,23,27,3,5,6,13,23,24,25,26,27,28,29,30,7,3,5,6,13,23,24,25,26,27,28,29,30,7,3,5,6,13,23,24,25,26,27,28,29,30,7,3,5,6,13,23,24,25,26,27,28,29,30,7,0,23,7,13,7,24,25,23,27,13,27,29,13,7,7,23,24,25,26,27,28,29,30,0,7,27,3,5,6,13,23,24,25,26,27,28,29,30,7,3,5,6,13,23,24,25,26,27,28,29,30,7,3,5,6,13,23,24,25,26,27,28,29,30,7,27,3,5,6,13,23,24,25,26,27,28,29,30,7,29],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],0,0,[3,4],[5,4],[6,4],[[],[[8,[7]]]],0,0,0,0,[[9,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,13],[[14,15,16,9,7],[[18,[17]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[20,[19]]],[[20,[1,19]]]],[[[20,[19]]],[[20,[1,19]]]],[[[20,[19]]],[[20,[1,19]]]],[[[20,[19]]],[[20,[1,19]]]],[[[20,[19]]],[[20,[1,19]]]],[[[20,[19]]],[[20,[1,19]]]],[[[20,[19]]],[[20,[1,19]]]],[[[20,[19]]],[[20,[1,19]]]],[[[20,[19]]],[[20,[1,19]]]],[[[20,[19]]],[[20,[1,19]]]],[[[20,[19]]],[[20,[1,19]]]],[[[20,[19]]],[[20,[1,19]]]],[[[20,[19]]],[[20,[1,19]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[23,8],[24,8],[25,8],[26,8],[27,8],[28,8],[29,8],[30,8],[[[32,[31]]],33],[[7,34]],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0],"p":[[8,"Any"],[3,"App"],[3,"MAP"],[3,"RwLock"],[3,"SIM"],[3,"LOAD"],[3,"LoadSim"],[4,"Result"],[3,"Map"],[3,"IntersectionID"],[4,"GeoJson"],[3,"ArgMatches"],[3,"Args"],[15,"str"],[3,"HashMap"],[3,"Sim"],[3,"String"],[6,"Result"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"FinishedTrip"],[3,"Delays"],[3,"Throughput"],[3,"AgentPositions"],[3,"AgentPosition"],[3,"RoadThroughput"],[3,"TrafficSignalState"],[3,"BlockedByGraph"],[3,"Body"],[3,"Request"],[8,"Future"],[3,"Timer"],[3,"TypeId"]]},\
"importer":{"doc":"It’s assumed that the importer is run with the current …","t":[3,11,11,0,0,11,11,12,12,11,0,11,11,11,11,11,11,11,11,0,5,12,12,12,0,5,12,5,11,12,0,0,11,11,11,0,0,11,5,3,11,11,11,11,5,11,5,12,11,11,5,11,11,11,11,12,11,11,11,11,3,11,11,11,11,11,11,11,12,12,11,11,11,11,5,12,11,11,11,12,11,5,5,5,5,5,5,5,5,2,2,2,0,0,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,5,5,12,12,12,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,3,3,11,11,11,11,11,11,11,11,5,11,11,5,11,11,11,12,11,11,11,11,11,11,11,11,5,11,12,12,11,12,11,11,11,11,11,11,11,11,11,3,11,11,11,11,5,11,11,11,5,12,5,11,11,11,11,5,12,12,12,12,12,12,5,5,11,11,11,11,12,5,5,5,5,5],"n":["Job","as_any","as_any_mut","basemap","berlin","borrow","borrow_mut","city","city_overview","clap","configuration","flags","from","from_clap","full_for_city","into","into_any","into_any_arc","into_any_rc","map_config","oneshot","only_map","opts","osm_to_raw","pick_geofabrik","pick_geofabrik","raw_to_map","regenerate_everything","run","scenario","seattle","soundcast","try_from","try_into","type_id","uk","utils","vzip","override_sidewalk_widths","Record","as_any","as_any_mut","borrow","borrow_mut","correlate_population","deserialize","distribute_residents","e_e","fmt","from","import_extra_data","into","into_any","into_any_arc","into_any_rc","raumid","try_from","try_into","type_id","vzip","ImporterConfiguration","as_any","as_any_mut","borrow","borrow_mut","default","deserialize","from","gunzip","gunzip_args","into","into_any","into_any_arc","into_any_rc","load_configuration","osmconvert","try_from","try_into","type_id","unzip","vzip","config_for_map","find_matching_regions","load_remote_geojson","pick_geofabrik","adjust_private_parking","ensure_popdat_exists","input","match_parcels_to_buildings","PopDat","import_data","make_scenario","popdat","trips","Endpoint","OrigTrip","PopDat","RawParcel","RawTrip","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","depart_at","deptm","deserialize","deserialize","deserialize","deserialize","deserialize","dpcl","dpurp","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_mode","get_purpose","half","hh_p","hhno","import_data","import_parcels","import_trips","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","mode","mode","opcl","osm_building","parcel_id","parcelid","parkdy_p","parkhr_p","person","pno","pos","purpose","seq","serialize","serialize","serialize","to","to_owned","to_owned","tour","travdist","travtime","trip_dist","trip_time","trips","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tseg","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","xcoord_p","ycoord_p","BorderSnapper","Trip","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clip_trips","clone","clone_into","endpoints","fmt","from","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","make_scenario","new","orig","path","snap_border","to","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Record","as_any","as_any_mut","borrow","borrow_mut","check_sensor_data","deserialize","fmt","from","generate_scenario","home_zone","import_collision_data","into","into_any","into_any_arc","into_any_rc","load_study_area","num_bikers","num_drivers","num_pedestrians","num_transit1","num_transit2","num_transit3","parse_desire_lines","parse_zones","try_from","try_into","type_id","vzip","work_zone","download","download_kml","osm_to_raw","osmconvert","raw_to_map"],"q":["importer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","importer::basemap","importer::berlin","","","","","","","","","","","","","","","","","","","","","importer::configuration","","","","","","","","","","","","","","","","","","","","","importer::map_config","importer::pick_geofabrik","","","importer::seattle","","","","importer::soundcast","","","","","importer::soundcast::popdat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","importer::soundcast::trips","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","importer::uk","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","importer::utils","","","",""],"d":["A specification for importing all maps in a single city.","","","","","","","","Produce a city overview from all of the individual maps in …","","","Return the command-line flags that should produce this …","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","Transforms a .osm file to a map in one step.","Only process one map. If not specified, process all maps …","","Download all raw input files, then convert OSM to the …","","Given the path to an Osmosis boundary polygon, return the …","Convert the RawMap to the final Map format.","Regenerate all maps and scenarios from scratch.","","Download trip demand data, then produce the typical …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Given the name of a map, configure its import.","","","Given the path to an Osmosis boundary polygon, return the …","","Download and pre-process data needed to generate Seattle …","","Match OSM buildings to parcels, scraping the number of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Transform the Seattle-wide <code>Endpoints</code> into specific …","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","If the output file doesn’t already exist, downloads the …","If the output file doesn’t already exist, downloads the …","Creates a RawMap from OSM and other input data.","Uses osmconvert to clip the input .osm (or .pbf) against a …","Converts a RawMap to a Map."],"i":[0,3,3,0,0,3,3,3,3,3,0,3,3,3,3,3,3,3,3,0,0,3,3,3,0,0,3,0,3,3,0,0,3,3,3,0,0,3,0,0,23,23,23,23,0,23,0,23,23,23,0,23,23,23,23,23,23,23,23,23,0,27,27,27,27,27,27,27,27,27,27,27,27,27,0,27,27,27,27,27,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,38,39,35,36,37,38,39,35,36,37,38,39,35,36,37,38,39,35,36,35,36,35,36,35,38,37,38,39,35,36,38,38,38,39,35,36,37,38,39,35,36,35,0,0,38,39,38,0,0,0,37,38,39,35,36,37,38,39,35,36,37,38,39,35,36,37,38,39,35,36,38,35,38,36,36,39,39,39,35,38,36,35,35,37,35,36,35,35,36,38,38,38,35,35,37,37,38,39,35,36,37,38,39,35,36,38,37,38,39,35,36,37,38,39,35,36,39,39,0,0,45,42,45,42,45,42,45,42,0,42,42,0,42,45,42,42,45,42,45,42,45,42,45,42,0,45,42,45,45,42,42,45,42,45,42,45,42,45,42,0,47,47,47,47,0,47,47,47,0,47,0,47,47,47,47,0,47,47,47,47,47,47,0,0,47,47,47,47,47,0,0,0,0,0],"f":[0,[[],1],[[],1],0,0,[[]],[[]],0,0,[[],2],0,[3,[[5,[4]]]],[[]],[6,3],[7,3],[[]],[[[9,[8]]],[[9,[1,8]]]],[10,[[10,[1]]]],[11,[[11,[1]]]],0,[[4,[12,[4]],13,14,14,15],16],0,0,0,0,[4,16],0,[[17,17],16],[[3,18],16],0,0,0,[[],19],[[],19],[[],20],0,0,[[]],[[21,4,18],22],0,[[],1],[[],1],[[]],[[]],[[4,4,18]],[[],[[19,[23]]]],[[21,18]],0,[[23,24],25],[[]],[[26,27,18],16],[[]],[[[9,[8]]],[[9,[1,8]]]],[10,[[10,[1]]]],[11,[[11,[1]]]],0,[[],19],[[],19],[[],20],[[]],0,[[],1],[[],1],[[]],[[]],[[],27],[[],[[19,[27]]]],[[]],0,0,[[]],[[[9,[8]]],[[9,[1,8]]]],[10,[[10,[1]]]],[11,[[11,[1]]]],[[],27],0,[[],19],[[],19],[[],20],0,[[]],[28,29],[[30,31],5],[[4,32],16],[4,16],[[21,33]],[[18,27,14,14],16],[[27,18],16],[[21,34,18]],0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,35],[36,36],[[]],[[]],0,0,[[],[[19,[37]]]],[[],[[19,[38]]]],[[],[[19,[39]]]],[[],[[19,[35]]]],[[],[[19,[36]]]],0,0,[[38,24],25],[[39,24],25],[[35,24],25],[[36,24],25],[[]],[[]],[[]],[[]],[[]],0,[32,40],[32,41],0,0,0,[[21,18],37],[[21,18]],[[21,18],[[5,[35]]]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[10,[[10,[1]]]],[10,[[10,[1]]]],[10,[[10,[1]]]],[10,[[10,[1]]]],[10,[[10,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[37,19],[35,19],[36,19],0,[[]],[[]],0,0,0,0,0,0,[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],0,[[],20],[[],20],[[],20],[[],20],[[],20],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[21,37,21,14,18],[[5,[42]]]],[42,42],[[]],[[36,36,21,43,44,12,14],12],[[42,24],25],[[]],[[]],0,[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[10,[[10,[1]]]],[10,[[10,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[[32,21,37,21,18],33],[[36,36,44,12],[[12,[45]]]],0,0,[[45,14,21,12],[[12,[46]]]],0,[[]],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[[]],[[]],0,[[],1],[[],1],[[]],[[]],[[21,33,32,18]],[[],[[19,[47]]]],[[47,24],25],[[]],[[21,27,18],16],0,[[26,27,18],16],[[]],[[[9,[8]]],[[9,[1,8]]]],[10,[[10,[1]]]],[11,[[11,[1]]]],[21,[[22,[48]]]],0,0,0,0,0,0,[4,[[22,[[5,[49]]]]]],[[50,4],[[22,[[43,[4,48]]]]]],[[],19],[[],19],[[],20],[[]],0,[[27,4,32],16],[[4,32,50,14,18],16],[[28,18,27],16],[[4,4,4,27]],[[28,15,18],21]],"p":[[8,"Any"],[3,"App"],[3,"Job"],[3,"String"],[3,"Vec"],[3,"ArgMatches"],[3,"CityName"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[4,"Option"],[4,"DrivingSide"],[15,"bool"],[3,"RawToMapOptions"],[8,"Future"],[15,"usize"],[3,"Timer"],[4,"Result"],[3,"TypeId"],[3,"Map"],[6,"Result"],[3,"Record"],[3,"Formatter"],[6,"Result"],[3,"RawMap"],[3,"ImporterConfiguration"],[3,"MapName"],[3,"Options"],[4,"GeoJson"],[3,"LonLat"],[15,"str"],[3,"Scenario"],[3,"ExtraShapes"],[3,"OrigTrip"],[3,"Endpoint"],[3,"PopDat"],[3,"RawTrip"],[3,"RawParcel"],[4,"TripMode"],[4,"TripPurpose"],[3,"Trip"],[3,"HashMap"],[4,"PathConstraints"],[3,"BorderSnapper"],[4,"TripEndpoint"],[3,"Record"],[3,"Polygon"],[3,"DesireLine"],[3,"GPSBounds"]]},\
"kml":{"doc":"","t":[3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,5,12,5,11,11,12,11,11,11,11,11,11,11],"n":["ExtraShape","ExtraShapes","attributes","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deserialize","deserialize","fmt","from","from","into","into","load","load_csv","load_geojson_no_clipping","parse_pt","points","recurse","serialize","serialize","shapes","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["kml","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A single object in the dataset.","Some dataset imported from KML, CSV, or something else. If …","Arbitrary key/value pairs associated with this object; no …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Parses a .kml file and returns ExtraShapes. Objects will …","Parses a .csv file and returns ExtraShapes. Each record …","Parses a .geojson file and returns ExtraShapes","","The object has a different inferred shape depending on the …","","","","","","","","","","",""],"i":[0,0,1,2,1,2,1,1,1,2,1,1,2,1,2,1,0,2,2,0,1,0,2,1,2,1,2,1,2,1,2,1],"f":[0,0,0,[[]],[[]],[[]],[[]],[1,1],[[]],[[],[[3,[2]]]],[[],[[3,[1]]]],[[1,4],5],[[]],[[]],[[]],[[]],[[6,7,8,9],[[10,[2]]]],[[6,7,9],[[10,[2]]]],[[6,7,8],[[10,[2]]]],[11,[[13,[12]]]],0,[[14,15,16,17,7,8],10],[2,3],[1,3],0,[[]],[[],3],[[],3],[[],3],[[],3],[[],18],[[],18]],"p":[[3,"ExtraShape"],[3,"ExtraShapes"],[4,"Result"],[3,"Formatter"],[6,"Result"],[3,"String"],[3,"GPSBounds"],[15,"bool"],[3,"Timer"],[6,"Result"],[15,"str"],[3,"LonLat"],[4,"Option"],[3,"Node"],[3,"Vec"],[15,"usize"],[3,"BTreeMap"],[3,"TypeId"]]},\
"ltn":{"doc":"","t":[12,3,3,13,3,3,3,3,4,3,3,13,3,3,3,3,3,6,13,5,12,0,12,11,11,12,12,12,11,11,12,12,11,5,0,0,12,12,12,12,12,12,12,0,0,12,12,12,12,12,0,12,12,12,12,0,12,12,12,0,12,12,12,12,0,11,11,12,12,12,12,12,0,12,12,12,11,11,11,11,5,5,12,12,12,12,5,5,12,12,12,12,0,12,12,12,12,12,0,12,12,12,0,12,12,12,12,12,12,12,0,12,5,0,0,12,5,0,12,12,12,12,12,11,11,11,12,12,12,11,12,3,3,3,3,6,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,12,11,12,11,12,12,12,11,11,12,12,12,11,11,11,12,12,11,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,12,11,11,11,11,11,11,11,12,12,12,12,5,5,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,17,17,3,3,17,17,17,3,3,3,3,17,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,2,2,4,13,13,13,13,2,0,11,11,11,11,11,11,11,11,11,11,0,0,11,0,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,5,11,5,11,11,11,11,11,11,5,12,12,11,12,11,12,11,11,11,11,11,5,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,3,11,11,11,11,11,12,11,11,12,11,11,11,11,12,11,11,11,11,3,5,11,11,11,11,11,11,12,12,12,11,11,5,12,11,11,11,12,12,11,12,11,5,12,12,11,11,11,11,11,17,3,3,11,11,11,11,11,11,11,11,12,12,12,5,12,12,5,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,4,3,4,13,13,13,13,13,4,13,3,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,0,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,11,11,5,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,3,11,11,11,11,12,11,5,11,11,11,11,5,12,12,11,11,11,11,5,5,5,13,3,3,3,4,13,3,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,0,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,13,13,4,13,13,11,11,11,11,11,5,11,11,11,11,11,11,5,11,11,11,11,5,5,11,11,11,5,11,11,5,5,3,3,2,12,11,11,11,11,11,11,11,11,12,12,11,12,11,5,11,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,12,11,11,12,11,11,11,11,11,11,11,11,0,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,5,5,11,11,11,5,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,12,11,11,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,12,5,5,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,13,3,13,13,13,4,5,11,11,11,11,11,11,11,11,11,11,11,11,5,12,5,12,11,11,11,11,11,5,11,11,11,11,11,11,11,12,12,5,11,11,11,12,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,5,11,12,11,12,11,5,11,11,11,12,11,11,12,11,11,12,11,12,11,11,11,11,11,11,12,12,3,13,2,13,4,3,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,5,11,12,12,11,12,0,5,11,0,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,5,5,5,5,17,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,3,11,11,11,11,11,11,11,11,12,11,11,12,5,12,11,11,11,12,12,12,5,5,11,12,11,12,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,12,12,11,11,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11],"n":["0","App","Args","BusGate","Cell","DiagonalFilter","DistanceInterval","Edits","FilterType","Neighbourhood","NeighbourhoodID","NoEntry","Partitioning","PerMap","PickArea","RoadFilter","Session","Transition","WalkCycleOnly","after_edit","alt_proposals","app","app_args","as_any","as_any_mut","block_to_neighbourhood","borders","borders","borrow","borrow_mut","broken","cells","clap","clear_current_proposal","colors","components","consultation","consultation","consultation_id","consultation_proposal_path","cs","current_neighbourhood","current_trip_name","customize_boundary","design_ltn","dist","draw_all_filters","draw_all_road_labels","draw_boundary_roads","draw_bus_routes","draw_cells","draw_map","draw_neighbourhood_style","draw_over_roads","draw_poi_icons","edit","edit_mode","edits","end","export","fade_irrelevant","filter_type","filter_type","filter_type","filters","from","from_clap","group1","group2","heuristic","i","id","impact","impact","interior_intersections","intersections","into","into_any","into_any_arc","into_any_rc","is_driveable","is_private","labels","labels","layers","left_panel","load_remote","main","main_road_penalty","manage_proposals","map","map","neighbourhood","neighbourhood_id_counter","neighbourhoods","one_ways","opts","orig_perimeter","partition","partitioning","per_map","perimeter","pick_area","previous_version","proposal","proposal_name","r1","r2","roads","roads","route_planner","routing_params_before_changes","run","save","select_boundary","session","setup_initial_states","shortcuts","shortcuts","show_walking_cycling_routes","single_blocks","start","top_panel","try_from","try_into","type_id","use_expensive_blockfinding","user_modified","user_modified","vzip","world","App","PerMap","Session","SimpleWarper","Transition","alt_proposals","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","before_quit","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","consultation","consultation_id","consultation_proposal_path","cs","cs","current_neighbourhood","current_stage_and_remaining_time","current_trip_name","draw","draw_all_filters","draw_all_road_labels","draw_bus_routes","draw_default","draw_map","draw_map","draw_neighbourhood_style","draw_poi_icons","draw_with_layering","draw_with_opts","dump_before_abort","edit_mode","edits","event","filter_type","free_memory","from","from","from","from","heuristic","impact","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","layers","main_road_penalty","make_warper","manage_proposals","map","map","map_switched","mut_cs","mut_draw_map","mut_opts","new","new","opts","opts","partitioning","per_map","proposal_name","render_bus_routes","render_poi_icons","routing_params_before_changes","session","show_walking_cycling_routes","sim","sim_time","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","warper","BLOCK_IN_BOUNDARY","BLOCK_IN_FRONTIER","BUS_ROUTE","CELLS","DISCONNECTED_CELL","HIGHLIGHT_BOUNDARY","HOVER","PLAN_ROUTE_AFTER","PLAN_ROUTE_BEFORE","PLAN_ROUTE_BIKE","PLAN_ROUTE_WALK","ROAD_LABEL","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","from","from","from","from","from","from","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","Impact","Layers","LeftPanel","Mode","ModifyNeighbourhood","PickArea","RoutePlanner","SelectBoundary","TopPanel","about","as_any","as_any_mut","borrow","borrow_mut","eq","from","into","into_any","into_any_arc","into_any_rc","layers","left_panel","legend","top_panel","try_from","try_into","type_id","vzip","About","as_any","as_any_mut","borrow","borrow_mut","draw","from","into","into_any","into_any_arc","into_any_rc","new_state","on_click","try_from","try_into","type_id","vzip","Layers","as_any","as_any_mut","borrow","borrow_mut","color_grid","draw","entry","event","from","into","into_any","into_any_rc","make_legend","make_zoom_controls","minimized","mode_cache_key","new","panel","show_bus_routes","show_bus_routes","try_from","try_into","type_id","update_panel","vzip","zoom_enabled_cache_key","zoom_enabled_cache_key","LeftPanel","as_any","as_any_mut","borrow","borrow_mut","builder","from","into","into_any","into_any_arc","into_any_rc","try_from","try_into","type_id","vzip","TopPanel","as_any","as_any_mut","borrow","borrow_mut","event","from","into","into_any","into_any_arc","into_any_rc","launch_impact","panel","try_from","try_into","type_id","vzip","CustomizeBoundary","as_any","as_any_mut","borrow","borrow_mut","draw","edit","event","from","id","into","into_any","into_any_rc","new_state","panel","try_from","try_into","type_id","vzip","DesignLTN","advanced_panel","as_any","as_any_mut","borrow","borrow_mut","draw","draw_baselayer","draw_top_layer","draw_under_roads_layer","edit","event","from","help","highlight_cell","into","into_any","into_any_rc","left_panel","neighbourhood","new_state","preserve_state","recreate","setup_editing","show_error","top_panel","try_from","try_into","type_id","update","vzip","RESOLUTION_M","RenderCells","RenderCellsBuilder","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","boundary_polygon","boundary_polygon","bounds","color_cells","colors","colors","diffusion","draw_colored_areas","draw_island_outlines","finalize","from","from","grid","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","new","new","polygons_per_cell","to_multipolygons","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","EditMode","EditNeighbourhood","EditOutcome","Filters","FreehandFilters","InteriorIntersection","InteriorRoad","Nothing","Obj","Oneways","ResolveBusGate","ResolveOneWayAndFilter","Shortcuts","Transition","UpdatePanelAndWorld","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","draw","draw","draw_baselayer","draw_baselayer","edit_mode","eq","equivalent","error","event","event","event","filters","fmt","freehand_filters","from","from","from","from","from","from","get_hash","get_hash","handle_panel_action","hash","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","ne","new","new_state","new_state","one_ways","panel","panel","panel_builder","partial_cmp","road_name","roads","roads","shortcuts","temporary","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","world","0","0","0","0","0","handle_world_outcome","make_world","widget","event","make_filters_along_path","widget","handle_world_outcome","make_world","undo_proposal","widget","FocusedRoad","as_any","as_any_mut","borrow","borrow_mut","current_idx","from","handle_world_outcome","into","into_any","into_any_arc","into_any_rc","make_world","paths","r","try_from","try_into","type_id","vzip","widget","geojson_string","write_geojson_file","BusGate","ChangeKey","DiagonalFilter","Edits","FilterType","NoEntry","RoadFilter","Toggle3Zoomed","WalkCycleOnly","allows_turn","allows_turn","approx_eq","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","auto","avoid_movements_between_roads","before_edit","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel_empty_edit","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cycle_through_alternatives","default","default","deserialize","deserialize","deserialize","deserialize","dist","draw","draw","draw_zoomed","empty","eq","eq","eq","eq","equivalent","existing","filter_type","filter_type","fmt","from","from","from","from","from","from","geometry","get_change_key","group1","group2","i","intersections","intersections","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","ne","ne","ne","new","new","new_by_user","one_ways","one_ways","partial_cmp","previous_version","r1","r2","roads","roads","serialize","serialize","serialize","serialize","svg_path","to_owned","to_owned","to_owned","to_owned","transform_existing_filters","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unzoomed","update_routing_params","user_modified","user_modified","vzip","vzip","vzip","vzip","vzip","vzip","BruteForce","Greedy","Heuristic","OnlyOneBorder","SplitCells","apply","as_any","as_any_mut","borrow","borrow_mut","brute_force","choices","clone","clone_into","eq","fmt","from","greedy","into","into_any","into_any_arc","into_any_rc","only_one_border","split_cells","to_owned","try_from","try_into","try_to_filter_road","type_id","vzip","detect_filters","transform_existing_filters","Filters","Impact","ShowResults","all_trips","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","change_key","compare_counts","counts_b","departure_time","empty","end_of_day","eq","filtered_trips","filters","find_changed_routes","from","from","from_panel","from_scenario","include_borders","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","map","map_edits_changed","modes","ne","pathfinder_after","pathfinder_before_changes","to_panel","trips_changed","try_from","try_from","try_into","try_into","type_id","type_id","ui","vzip","vzip","ChangedRoutes","ExportRow","ShowResults","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","current","draw","draw","draw_baselayer","draw_paths","event","event","export_csv","export_geojson","from","from","from","help","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","left_panel","new_state","new_state","osm_intersection1","osm_intersection2","osm_way_id","panel","paths","recalculate","recreate","road_name","serialize","top_panel","total_count_after","total_count_before","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Cell","DistanceInterval","Neighbourhood","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","border_arrows","borders","borders","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cells","end","fade_irrelevant","find_cells","floodfill","from","from","from","id","interior_intersections","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_disconnected","labels","new","orig_perimeter","perimeter","roads","shortcuts","start","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","BlockID","NeighbourhoodID","NeighbourhoodInfo","Partitioning","all_block_ids","all_blocks_in_neighbourhood","all_neighbourhoods","all_single_blocks","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","block","block_to_neighbourhood","block_to_neighbourhood","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broken","calculate_frontier","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","deserialize","deserialize","deserialize","deserialize","empty","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from","get_block","get_hash","get_hash","get_hash","get_hash","hash","hash","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_empty","make_merged_blocks","map","ne","ne","neighbourhood_area_km2","neighbourhood_block","neighbourhood_boundary_polygon","neighbourhood_containing","neighbourhood_id_counter","neighbourhoods","new","override_drawing_boundary","override_neighbourhood_boundary_polygon","partial_cmp","partial_cmp","remove_block_from_neighbourhood","seed_using_heuristics","serialize","serialize","serialize","serialize","single_blocks","some_block_in_neighbourhood","to_owned","to_owned","to_owned","to_owned","transfer_block","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","use_expensive_blockfinding","vzip","vzip","vzip","vzip","Cells","PickArea","Quietness","Shortcuts","Simple","Style","advanced_panel","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","draw","draw_baselayer","draw_boundary_roads","draw_boundary_roads","draw_over_roads","draw_over_roads","eq","event","fmt","from","from","help","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","labels","left_panel","make_world","new_state","recreate","to_owned","top_panel","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","world","RoutePlanner","app_session_current_trip_name","as_any","as_any_mut","borrow","borrow_mut","card","draw","draw_routes","event","files","from","help","into","into_any","into_any_rc","left_panel","mut_files","new_state","pathfinder_cache","recalculate_paths","recreate","show_main_roads","sync_from_file_management","top_panel","try_from","try_into","type_id","update_everything","update_minimal","vzip","waypoints","world","AltProposals","DesignLTN","PROPOSAL_HOST_URL","PickArea","PreserveState","Proposal","Route","abst_version","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","checksum","clone","clone_into","current","deserialize","edits","from","from","from","from_app","handle_action","inner_load","inner_save","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","list","load_from_bytes","load_from_path","load_picker_ui","make_active","map","name","new","partitioning","perma","save_ui","serialize","share","stash_current_proposal","switch_to_existing_proposal","switch_to_state","to_gzipped_bytes","to_owned","to_widget","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","from_permanent","is_intersection_id","is_road_id","to_permanent","walk","PROPOSAL_HOST_URL","ShareProposal","UploadedProposals","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","deserialize","draw","fmt","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","load","md5sums","new_state","on_click","proposal_uploaded","serialize","try_from","try_from","try_into","try_into","type_id","type_id","url","vzip","vzip","SelectBoundary","add_block","add_blocks_freehand","as_any","as_any_mut","borrow","borrow_mut","currently_have_block","draw","draw_boundary_roads","event","from","frontier","help","id","into","into_any","into_any_rc","lasso","last_failed_change","left_panel","make_panel","make_panel_for_lasso","new_state","orig_partitioning","toggle_block","top_panel","try_from","try_into","try_toggle_block","type_id","vzip","world","EntryExit","Shortcuts","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","count_per_intersection","count_per_road","draw_heatmap","empty","find_entrances","find_exits","find_major_road_name","find_shortcuts","from","from","from_paths","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","lane","major_road_name","paths","quiet_and_total_streets","subset","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["ltn","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ltn::app","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ltn::colors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ltn::components","","","","","","","","","","","","","","","","","","","","","","","","","","","","ltn::components::about","","","","","","","","","","","","","","","","","ltn::components::layers","","","","","","","","","","","","","","","","","","","","","","","","","","","","ltn::components::left_panel","","","","","","","","","","","","","","","ltn::components::top_panel","","","","","","","","","","","","","","","","","ltn::customize_boundary","","","","","","","","","","","","","","","","","","","ltn::design_ltn","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ltn::draw_cells","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ltn::edit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ltn::edit::EditMode","","ltn::edit::EditOutcome","ltn::edit::Obj","","ltn::edit::filters","","","ltn::edit::freehand_filters","","","ltn::edit::one_ways","","","","ltn::edit::shortcuts","","","","","","","","","","","","","","","","","","","","ltn::export","","ltn::filters","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ltn::filters::auto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ltn::filters::existing","","ltn::impact","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ltn::impact::ui","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ltn::neighbourhood","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ltn::partition","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ltn::pick_area","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ltn::route_planner","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ltn::save","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ltn::save::PreserveState","ltn::save::perma","","","","","ltn::save::share","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ltn::select_boundary","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ltn::shortcuts","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","A partitioning of the interior of a neighbourhood based on …","A diagonal filter exists in an intersection. It’s …","An interval along a road’s length, with start &lt; end.","Stored in App per-map state. Before making any changes, …","Just determines the icon, has no semantics yet","","An opaque ID, won’t be contiguous as we adjust boundaries","","","","","A filter placed somewhere along a road","","","","","","","","","","","","Intersections where this cell touches the boundary of the …","","","","","","","","","","Lock the user into one fixed neighbourhood, and remove …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","For roads with modified directions, what’s their current …","","","","","","","","Edit history is preserved recursively","Load a previously saved proposal with this name. Note this …","","","","Most roads are fully in one cell. Roads with modal filters …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draw unzoomed, but after the water/park areas layer, draw …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Panel won’t be initialized, must call <code>event</code> first","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bounds of the neighbourhood boundary polygon","","Colors per cell, such that adjacent cells are colored …","","Returns a set of adjacent indices. The pairs are symmetric …","Draw cells as areas with different colors. The colors are …","Draw the boundary between cells as a thick outline. It’s …","","Returns the argument unchanged.","Returns the argument unchanged.","The grid only covers the boundary polygon of the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Partition a neighbourhood’s boundary polygon based on …","","Rarely, this might be empty if the area is very small","Per cell, convert all polygons to a <code>geo::MultiPolygon</code>. …","","","","","","","","","","","","","","","","","","","","","","Use this with Transition::Recreate to recalculate the …","Don’t recreate the Neighbourhood","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates clickable objects for managing filters on roads …","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the path where the file was written","","This logically changes every time an edit occurs. MapName …","A diagonal filter exists in an intersection. It’s …","Stored in App per-map state. Before making any changes, …","Just determines the icon, has no semantics yet","","A filter placed somewhere along a road","Depending on the canvas zoom level, draws one of 2 things.","","","","","","","","","","","","","","","","","Experiments to make a neighbourhood be low-traffic by …","","Call before making any changes to preserve edit history","","","","","","","","","","","","","If it’s possible no edits were made, undo the previous …","","","","","","","","","","The caller must call this in a <code>before_edit</code> / <code>after_edit</code> “…","","","","","","","","","Draw all modal filters","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Physically where is the filter placed?","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","For roads with modified directions, what’s their current …","","","Edit history is preserved recursively","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Modify RoutingParams to respect these modal filters","","","","","","","","","Try adding one filter to every possible road, counting the …","Find the road with the most shortcuts that can be closed …","","Per cell, close all borders except for one. This doesn’t …","Find one filter that splits a cell, maximizing the number …","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Detect roads that’re modelled in OSM as cycleways, but …","","","","","","","","","","","","","","","","","","","","","","Returns routes that start or stop crossing the given road. …","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A partitioning of the interior of a neighbourhood based on …","An interval along a road’s length, with start &lt; end.","","","","","","","","","","Intersections where this cell touches the boundary of the …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","A cell is disconnected if it’s not connected to a …","","","","","Most roads are fully in one cell. Roads with modal filters …","","","","","","","","","","","","","","","","","Identifies a single / unmerged block, which never changes","An opaque ID, won’t be contiguous as we adjust boundaries","","","","","","","","","","","","","","","","","","","","","","","","","","","Blocks on the “frontier” are adjacent to the …","","","","","","","","","","","","","","","Only valid before the LTN tool has been activated this …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Draw a special cone of light when focused on this …","","","","Needs to find an existing neighbourhood to take the block, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Captures all of the edits somebody makes to a map in the …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Try to load a proposal. If it fails, returns a popup …","","","","","","","The Proposal struct references IntersectionIDs and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","",""],"i":[56,0,0,86,0,0,0,0,0,0,0,86,0,0,0,0,0,0,86,0,36,0,7,7,7,107,59,103,7,7,107,59,7,0,0,0,36,7,36,36,2,36,36,0,0,85,36,36,113,36,0,36,127,113,36,0,127,36,128,0,59,127,85,84,0,7,7,84,84,127,84,59,0,36,59,82,7,7,7,7,0,0,59,113,127,113,0,0,127,127,36,107,0,107,107,82,2,59,0,36,2,59,0,82,7,36,84,84,103,82,0,36,0,0,0,2,0,0,59,127,107,128,113,7,7,7,107,85,84,7,113,0,0,0,0,0,36,2,36,127,25,2,36,127,25,2,2,36,127,25,2,36,127,25,36,36,36,2,2,36,2,36,25,36,36,36,2,2,36,127,36,2,2,2,127,36,25,127,2,2,36,127,25,127,36,2,36,127,25,2,36,127,25,25,2,36,127,25,127,127,2,127,2,36,2,2,2,2,2,36,2,2,36,2,36,0,0,36,2,127,2,2,2,36,127,25,2,36,127,25,2,36,127,25,2,36,127,25,25,0,0,0,0,0,0,0,0,0,0,0,0,40,41,43,44,45,46,40,41,43,44,45,46,40,41,43,44,45,46,40,41,43,44,45,46,40,41,43,44,45,46,40,41,43,44,45,46,40,41,43,44,45,46,40,41,43,44,45,46,40,41,43,44,45,46,40,41,43,44,45,46,40,41,43,44,45,46,40,41,43,44,45,46,40,41,43,44,45,46,40,41,43,44,45,46,40,41,43,44,45,46,47,0,0,0,47,47,47,47,0,0,47,47,47,47,47,47,47,47,47,47,0,0,47,0,47,47,47,47,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,52,52,52,52,0,52,0,52,52,52,52,52,52,0,52,52,52,52,52,52,52,52,52,52,52,0,52,0,129,129,129,129,129,129,129,129,129,129,129,129,129,129,0,130,130,130,130,130,130,130,130,130,130,0,130,130,130,130,130,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,0,57,57,57,57,57,57,57,57,57,57,57,0,57,57,57,57,57,57,57,57,57,0,57,57,57,57,57,57,57,0,0,0,63,65,63,65,63,65,63,65,63,65,65,0,63,65,0,63,63,65,63,65,65,63,65,63,65,63,65,63,65,63,65,63,63,63,65,63,65,63,65,63,65,0,0,0,131,131,67,67,71,0,131,0,0,131,71,71,131,72,71,69,70,67,131,72,71,69,70,67,131,72,71,69,70,67,131,72,71,69,70,67,67,67,67,69,70,69,70,0,67,67,71,72,69,70,0,67,0,131,72,71,69,70,67,67,67,72,67,131,72,71,69,70,67,131,72,71,69,70,67,131,67,131,72,71,69,70,67,67,72,69,70,0,69,70,72,67,0,69,70,0,72,67,131,72,71,69,70,67,131,72,71,69,70,67,131,72,71,69,70,67,131,72,71,69,70,67,72,132,133,134,135,136,0,0,0,0,0,0,0,0,0,0,0,80,80,80,80,80,80,0,80,80,80,80,0,80,80,80,80,80,80,0,0,0,86,0,0,0,0,86,0,0,86,82,84,84,88,82,85,86,87,84,88,82,85,86,87,84,0,84,82,88,82,85,86,87,84,88,82,85,86,87,84,82,82,85,86,84,82,85,86,84,86,84,82,87,82,85,86,84,85,88,82,88,88,85,86,87,84,86,0,85,84,86,88,82,85,86,87,84,84,82,84,84,84,82,87,88,82,85,86,87,84,88,82,85,86,87,84,82,85,86,87,84,88,82,85,86,87,84,85,87,84,88,84,85,82,87,86,82,84,84,82,87,82,85,86,84,86,82,85,86,84,0,88,82,85,86,87,84,88,82,85,86,87,84,88,82,85,86,87,84,88,82,85,84,88,82,85,86,87,84,93,93,0,93,93,93,93,93,93,93,0,93,93,93,93,93,93,0,93,93,93,93,0,0,93,93,93,0,93,93,0,0,0,0,0,95,95,97,95,97,95,97,95,97,95,95,95,97,95,0,97,95,95,95,95,97,97,95,97,95,97,95,97,97,95,97,95,95,97,97,95,95,97,95,95,97,95,97,95,97,0,95,97,0,0,0,100,101,102,100,101,102,100,101,102,100,101,102,101,100,101,100,101,100,101,0,0,100,101,102,0,100,101,102,100,101,102,102,100,101,102,100,100,101,102,102,102,101,101,101,100,102,102,100,102,102,100,101,102,100,101,102,100,101,102,100,101,102,0,0,0,59,103,128,59,103,128,103,59,103,59,103,128,59,103,128,59,128,59,0,0,59,103,128,59,59,59,103,128,59,103,128,103,128,59,103,128,103,59,59,59,59,103,59,128,59,103,128,59,103,128,59,103,128,59,103,128,56,108,0,0,0,0,107,107,107,107,56,108,107,110,56,108,107,110,110,107,107,56,108,107,110,56,108,107,110,107,107,56,108,107,110,56,108,107,110,56,108,56,108,107,110,107,56,108,56,108,56,108,56,108,107,110,107,56,56,108,108,56,108,56,108,107,110,56,108,107,110,56,108,107,110,56,108,107,110,107,107,107,56,108,107,107,107,107,107,107,110,110,107,56,108,107,107,56,108,107,110,107,107,56,108,107,110,107,56,108,107,110,56,108,107,110,56,108,107,110,107,56,108,107,110,112,0,112,112,112,0,0,113,112,113,112,113,112,113,112,112,112,113,113,0,113,0,113,112,113,112,113,112,0,113,112,113,112,112,113,112,113,113,0,113,113,112,113,113,112,113,112,113,112,113,112,113,0,115,115,115,115,115,0,115,115,115,115,115,0,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,0,54,0,54,0,0,54,117,119,117,54,119,117,54,119,117,54,119,117,54,117,54,54,119,117,117,119,117,54,117,119,117,0,119,117,54,119,117,54,119,117,54,119,117,54,119,117,117,0,117,117,117,119,117,0,0,117,0,0,0,54,117,54,119,119,117,54,119,117,54,119,117,54,119,117,54,137,0,0,0,0,0,0,0,0,122,121,122,121,122,121,122,121,121,122,121,122,121,122,121,122,121,122,121,122,121,121,121,122,122,121,121,122,121,122,121,122,121,122,122,121,0,123,123,123,123,123,123,123,123,123,123,123,123,0,123,123,123,123,123,123,123,0,0,123,123,123,123,123,123,123,123,123,123,0,0,124,125,124,125,124,125,124,125,124,124,124,124,0,0,0,0,124,125,124,124,125,124,125,124,125,124,125,125,125,124,124,124,124,125,124,125,124,125,124,125],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2]],0,0,0,[[],3],[[],3],0,0,0,[[]],[[]],0,0,[[],4],[[1,2,5]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[6,7],0,0,0,0,0,0,0,0,0,[[]],[[[9,[8]]],[[9,[3,8]]]],[10,[[10,[3]]]],[11,[[11,[3]]]],[[12,13],14],[12,14],0,0,0,0,[[1,15,[16,[15]]],[[9,[17]]]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[18],0,0,0,[[1,2,[16,[15]],[16,[[9,[17]]]]],[[19,[[9,[17]]]]]],0,0,0,0,0,0,[[],20],[[],20],[[],21],0,0,0,[[]],0,0,0,0,0,0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[2,22]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[2,23],0,0,[[2,24]],0,[[25,26,2]],0,0,0,[[2,26]],[2,27],0,0,0,[[2,26,28]],[[2,26,29]],[[2,22]],0,0,[[25,1,2],30],0,[2],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[10,[[10,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],0,0,[[2,1,31,[16,[32]],[16,[33]]],[[9,[17]]]],0,[2,13],0,[[2,1,13,5]],[2,23],[2,27],[2,34],[[1,34,35,[16,[15]],28]],[[1,13,34,23,5],36],[2,34],0,0,0,0,[[1,13],37],[[1,13],37],0,0,0,[2,38],[2,39],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40],[41,42],[43,42],[44,42],[45,42],[46,42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[10,[[10,[3]]]],[10,[[10,[3]]]],[10,[[10,[3]]]],[10,[[10,[3]]]],[10,[[10,[3]]]],[10,[[10,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[],3],[[],3],[[]],[[]],[[47,47],14],[[]],[[]],[[[9,[8]]],[[9,[3,8]]]],[10,[[10,[3]]]],[11,[[11,[3]]]],0,0,[[47,1,23],48],0,[[],20],[[],20],[[],21],[[]],0,[[],3],[[],3],[[]],[[]],[[49,26,2]],[[]],[[]],[[[9,[8]]],[[9,[3,8]]]],[10,[[10,[3]]]],[11,[[11,[3]]]],[1,[[9,[17]]]],[[49,1,2,50,51],30],[[],20],[[],20],[[],21],[[]],0,[[],3],[[],3],[[]],[[]],[1,48],[[52,26,2]],[[1,42,50],48],[[52,1,23,47],[[16,[30]]]],[[]],[[]],[[[9,[8]]],[[9,[3,8]]]],[11,[[11,[3]]]],[[52,1,23],48],[1,48],0,0,[1,52],0,[[52,1,23]],0,[[],20],[[],20],[[],21],[[52,1,23]],[[]],[1],0,0,[[],3],[[],3],[[]],[[]],[[1,51,48],53],[[]],[[]],[[[9,[8]]],[[9,[3,8]]]],[10,[[10,[3]]]],[11,[[11,[3]]]],[[],20],[[],20],[[],21],[[]],0,[[],3],[[],3],[[]],[[]],[[1,2,51,54,28],[[16,[30]]]],[[]],[[]],[[[9,[8]]],[[9,[3,8]]]],[10,[[10,[3]]]],[11,[[11,[3]]]],[[1,2],30],[[1,2,47],51],[[],20],[[],20],[[],21],[[]],0,[[],3],[[],3],[[]],[[]],[[55,26,2]],0,[[55,1,2],30],[[]],0,[[]],[[[9,[8]]],[[9,[3,8]]]],[11,[[11,[3]]]],[[1,2,56],[[9,[17]]]],0,[[],20],[[],20],[[],21],[[]],0,[[1,2],48],[[],3],[[],3],[[]],[[]],[[57,26,2]],[57,58],0,0,0,[[57,1,2],30],[[]],[[],[[19,[50]]]],0,[[]],[[[9,[8]]],[[9,[3,8]]]],[11,[[11,[3]]]],0,0,[[1,2,56],[[9,[17]]]],0,[[57,1,2],[[9,[17]]]],[[1,2,59]],0,0,[[],20],[[],20],[[],21],[[57,1,2]],[[]],0,0,0,[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],0,0,0,[[60,61],[[19,[42]]]],0,0,[[62,60],61],[63,64],[63,64],[65,63],[[]],[[]],0,[[]],[[]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[10,[[10,[3]]]],[10,[[10,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],[[13,59],63],[[13,59],65],0,[63,[[19,[66]]]],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[67,67],[[]],[[67,67],68],[[69,26,2]],[[70,26,2]],[69,58],[70,58],[[1,2],48],[[67,67],14],[[],14],[[1,50],71],[[72,1,2,59],71],[[69,1,2],30],[[70,1,2],30],0,[[67,73],74],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],75],[[],75],[[72,1,2,50,59,51],71],[67],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[10,[[10,[3]]]],[10,[[10,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],[[67,67],14],[[1,2,59],72],[[1,[19,[76]]],[[9,[17]]]],[[1,2,19],[[9,[17]]]],0,0,0,[[72,1,2,51,48],53],[[67,67],[[16,[68]]]],[[2,12],15],0,0,0,[[],72],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[1,2,[77,[67]]],71],[[1,2,59],[[78,[67]]]],[1,48],[[1,2,59],71],[[1,2,59,79],30],[1,48],[[1,2,[77,[67]]],71],[[1,2,59],[[78,[67]]]],[[1,2]],[1,48],0,[[],3],[[],3],[[]],[[]],0,[[]],[[2,[77,[67]],59],71],[[]],[[[9,[8]]],[[9,[3,8]]]],[10,[[10,[3]]]],[11,[[11,[3]]]],[[1,2,59,16],[[78,[67]]]],0,0,[[],20],[[],20],[[],21],[[]],[[1,2,[16,[80]]],48],[[1,2],[[81,[15]]]],[[1,2],[[81,[15]]]],0,0,0,0,0,0,0,0,0,[[82,83],14],[[84,76,76],14],[[84,84],14],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[84,19],[82],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[82,14],[82,82],[85,85],[86,86],[84,84],[[]],[[]],[[]],[[]],[[86,86],68],[[2,24]],[[],82],[[],87],[[],[[20,[82]]]],[[],[[20,[85]]]],[[],[[20,[86]]]],[[],[[20,[84]]]],0,[[88,26]],[[82,1,13],88],0,[1,88],[[85,85],14],[[86,86],14],[[87,87],14],[[84,84],14],[[],14],0,0,0,[[86,73],74],[[]],[[]],[[]],[[]],[[]],[[]],[[84,13],89],[82,87],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[10,[[10,[3]]]],[10,[[10,[3]]]],[10,[[10,[3]]]],[10,[[10,[3]]]],[10,[[10,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],[[85,85],14],[[87,87],14],[[84,84],14],[[37,90],88],[[2,24,76,76],84],[[91,86],85],0,0,[[86,86],[[16,[68]]]],0,0,0,0,0,[82,20],[85,20],[86,20],[84,20],[86,50],[[]],[[]],[[]],[[]],0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,[[82,92]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[93,1,2,59,5],81],[[],3],[[],3],[[]],[[]],[[1,2,59,5]],[[],[[19,[[94,[93]]]]]],[93,93],[[]],[[93,93],14],[[93,73],74],[[]],[[1,2,59]],[[]],[[[9,[8]]],[[9,[3,8]]]],[10,[[10,[3]]]],[11,[[11,[3]]]],[[2,59]],[[1,2,59,5]],[[]],[[],20],[[],20],[[1,2,59,76],[[16,[59]]]],[[],21],[[]],[13,[[19,[12]]]],[[1,2,5]],0,0,0,0,[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],0,0,[[95,2,5],96],0,[1,95],[[],39],[[97,97],14],0,0,[[95,2,76,5],19],[[]],[[]],[51,97],[[1,2,98,5],95],0,[[]],[[]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[10,[[10,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],0,[[95,1,2,5]],0,[[97,97],14],[[95,2,5],99],0,[[97,1,2],48],[[95,1,2,5]],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],0,[[]],[[]],0,0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],0,[[100,26,2]],[[101,26,2]],[100,58],0,[[100,1,2],30],[[101,1,2],30],[2,[[81,[15]]]],[2,15],[[]],[[]],[[]],[[],[[19,[50]]]],[[]],[[]],[[]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[10,[[10,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],0,[[1,2],[[9,[17]]]],[[1,2,19],[[9,[17]]]],0,0,0,0,0,[[101,1,2]],[[100,1,2],[[9,[17]]]],0,[102,20],0,0,0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[]],[[]],[[]],0,0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[103,2],[[19,[104]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[13,105,106,82],[[19,[103]]]],[[13,76,106,82],103],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[10,[[10,[3]]]],[10,[[10,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],[103,14],0,[[1,2,56],59],0,0,0,0,0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[]],[[]],[[]],0,0,0,0,0,0,[107,[[19,[108]]]],[[107,56],[[19,[108]]]],[107,109],[107,19],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[[107,108],56],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[107,105],[[106,[108]]]],[56,56],[108,108],[107,107],[110,110],[[]],[[]],[[]],[[]],[[56,56],68],[[108,108],68],[[],[[20,[56]]]],[[],[[20,[108]]]],[[],[[20,[107]]]],[[],[[20,[110]]]],[[],107],[[56,56],14],[[108,108],14],[[],14],[[],14],[[56,73],74],[[108,73],74],[[]],[[]],[[]],[[]],[[107,108],111],[[],75],[[],75],[[],75],[[],75],[56],[108],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[10,[[10,[3]]]],[10,[[10,[3]]]],[10,[[10,[3]]]],[10,[[10,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],[107,14],[[107,13,[19,[108]]],[[81,[[19,[111]]]]]],0,[[56,56],14],[[108,108],14],[[107,56],15],[[107,56],111],[[107,2,56],104],[[107,108],[[16,[56]]]],0,0,[111,110],0,[[107,56,104]],[[56,56],[[16,[68]]]],[[108,108],[[16,[68]]]],[[107,13,108,56],[[81,[[16,[56]]]]]],[[2,5],107],[56,20],[108,20],[107,20],[110,20],0,[[107,56],108],[[]],[[]],[[]],[[]],[[107,13,108,56,56],[[81,[[16,[56]]]]]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[1,2],48],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[112,112],[[]],[[113,26,2]],[113,58],[[1,2],37],0,[[1,2],37],0,[[112,112],14],[[113,1,2],30],[[112,73],74],[[]],[[]],[[],[[19,[50]]]],[[]],[[]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[10,[[10,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],0,0,[[1,2],[[78,[56]]]],[[1,2],[[9,[17]]]],[[113,1,2],[[9,[17]]]],[[]],0,[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[]],[[]],0,0,[2,16],[[],3],[[],3],[[]],[[]],[[1,50,50,114,42],48],[[115,26,2]],0,[[115,1,2],30],0,[[]],[[],[[19,[50]]]],[[]],[[[9,[8]]],[[9,[3,8]]]],[11,[[11,[3]]]],0,[115,116],[[1,2],[[9,[17]]]],0,[[115,1,2],48],[[115,1,2],[[9,[17]]]],0,[[115,1,2]],0,[[],20],[[],20],[[],21],[[115,1,2]],[[115,1,2]],[[]],0,0,0,0,0,0,0,0,0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[117,2],[[81,[15]]]],[54,54],[[]],0,[[],[[20,[117]]]],0,[[]],[[]],[[]],[2,117],[[1,2,54,50],[[16,[30]]]],[[1,2,[19,[118]]],81],[2,81],[[]],[[]],[[]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[10,[[10,[3]]]],[10,[[10,[3]]]],[10,[[10,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],0,[[1,2,50,[81,[[19,[118]]]]],[[16,[[9,[17]]]]]],[[1,2,15],[[16,[[9,[17]]]]]],[[1,2,54],[[9,[17]]]],[[117,1,2]],0,0,[[],119],0,0,[[1,2,54],[[9,[17]]]],[117,20],0,[2],[[1,2,60]],[[54,1,2],30],[[117,2],[[81,[[19,[118]]]]]],[[]],[[119,1,2],48],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[]],[[]],[[]],0,[[13,120],[[81,[117]]]],[50,14],[50,14],[[13,117],[[81,[120]]]],[[50,120],81],0,0,0,[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[],[[20,[121]]]],[[122,26,2]],[[121,73],74],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[10,[[10,[3]]]],[10,[[10,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],[[],121],0,[[1,2],[[9,[17]]]],[[122,1,2,50,51],30],[15],[121,20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],0,[[]],[[]],0,[[123,1,2,108]],[[123,1,2,104]],[[],3],[[],3],[[]],[[]],[[123,2,108],14],[[123,26,2]],0,[[123,1,2],30],[[]],0,[[],[[19,[50]]]],0,[[]],[[[9,[8]]],[[9,[3,8]]]],[11,[[11,[3]]]],0,0,0,[[1,2,56,51],51],[[1,51],51],[[1,2,56],[[9,[17]]]],0,[[123,1,2,108],30],0,[[],20],[[],20],[[123,2,108],[[81,[[16,[56]]]]]],[[],21],[[]],0,0,0,[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],0,0,[[124,2],64],[[],124],[[13,59,103],[[19,[125]]]],[[13,59,103],[[19,[125]]]],[[13,59,24],[[16,[15]]]],[[2,59,5],124],[[]],[[]],[[59,[19,[126]]],124],[[]],[[]],[[[9,[8]]],[[9,[3,8]]]],[[[9,[8]]],[[9,[3,8]]]],[10,[[10,[3]]]],[10,[[10,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],0,0,0,[[124,59]],[[124,59,76],124],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[]],[[]]],"p":[[3,"EventCtx"],[3,"App"],[8,"Any"],[3,"App"],[3,"Timer"],[3,"ArgMatches"],[3,"Args"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"Road"],[3,"Map"],[15,"bool"],[3,"String"],[4,"Option"],[8,"State"],[3,"Settings"],[3,"Vec"],[4,"Result"],[3,"TypeId"],[3,"Canvas"],[3,"ColorScheme"],[3,"IntersectionID"],[3,"SimpleWarper"],[3,"GfxCtx"],[3,"DrawMap"],[8,"Fn"],[3,"DrawOptions"],[6,"Transition"],[3,"Pt2D"],[15,"f64"],[4,"ID"],[3,"Options"],[3,"MapName"],[3,"PerMap"],[3,"Drawable"],[3,"Sim"],[3,"Time"],[3,"CELLS"],[3,"PLAN_ROUTE_BEFORE"],[3,"Color"],[3,"PLAN_ROUTE_AFTER"],[3,"PLAN_ROUTE_BIKE"],[3,"PLAN_ROUTE_WALK"],[3,"BUS_ROUTE"],[4,"Mode"],[3,"Widget"],[3,"About"],[15,"str"],[3,"Panel"],[3,"Layers"],[3,"PanelBuilder"],[4,"PreserveState"],[3,"CustomizeBoundary"],[3,"NeighbourhoodID"],[3,"DesignLTN"],[4,"DrawBaselayer"],[3,"Neighbourhood"],[15,"usize"],[3,"HashSet"],[3,"Grid"],[3,"RenderCells"],[3,"GeomBatch"],[3,"RenderCellsBuilder"],[3,"MultiPolygon"],[4,"Obj"],[4,"Ordering"],[3,"ResolveOneWayAndFilter"],[3,"ResolveBusGate"],[4,"EditOutcome"],[3,"EditNeighbourhood"],[3,"Formatter"],[6,"Result"],[15,"u64"],[3,"RoadID"],[4,"WorldOutcome"],[3,"World"],[3,"PolyLine"],[3,"FocusedRoad"],[6,"Result"],[3,"Edits"],[3,"TurnID"],[3,"DiagonalFilter"],[3,"RoadFilter"],[4,"FilterType"],[3,"ChangeKey"],[3,"Toggle3Zoomed"],[3,"Line"],[3,"DrawCustomUnzoomedShapes"],[3,"Distance"],[3,"RoutingParams"],[4,"Heuristic"],[3,"Choice"],[3,"Impact"],[3,"TrafficCounts"],[3,"Filters"],[3,"Scenario"],[3,"Pathfinder"],[3,"ShowResults"],[3,"ChangedRoutes"],[3,"ExportRow"],[3,"Cell"],[3,"Polygon"],[3,"Perimeter"],[3,"BTreeSet"],[3,"Partitioning"],[3,"BlockID"],[3,"BTreeMap"],[3,"NeighbourhoodInfo"],[3,"Block"],[4,"Style"],[3,"PickArea"],[3,"Duration"],[3,"RoutePlanner"],[3,"TripManagement"],[3,"Proposal"],[15,"u8"],[3,"AltProposals"],[4,"Value"],[3,"UploadedProposals"],[3,"ShareProposal"],[3,"SelectBoundary"],[3,"Shortcuts"],[3,"EntryExit"],[3,"PathV2"],[3,"Session"],[3,"DistanceInterval"],[3,"LeftPanel"],[3,"TopPanel"],[4,"EditMode"],[13,"FreehandFilters"],[13,"Shortcuts"],[13,"Transition"],[13,"InteriorRoad"],[13,"InteriorIntersection"],[13,"DesignLTN"]]},\
"map_editor":{"doc":"The map_editor renders and lets you edit RawMaps, which …","t":[3,0,11,11,11,11,12,0,11,0,11,11,12,11,11,11,11,0,12,5,0,5,11,11,11,3,13,3,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,12,12,3,3,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,3,11,11,11,11,11,11,11,11,11,11,5,11,12,11,11,11,17,13,4,17,13,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,5,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12],"n":["Args","app","as_any","as_any_mut","borrow","borrow_mut","cam","camera","clap","edit","from","from_clap","include_buildings","into","into_any","into_any_arc","into_any_rc","load","load","main","model","run","try_from","try_into","type_id","App","CreatingRoad","MainState","Mode","Neutral","SetBoundaryPt1","SetBoundaryPt2","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","before_quit","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","draw","draw_default","dump_before_abort","event","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","mode","model","new_state","panel","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_instructions","0","0","CameraState","DefaultMap","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","cam_x","cam_y","cam_zoom","deserialize","deserialize","fmt","fmt","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","last_map","load","save","serialize","serialize","try_from","try_from","try_into","try_into","type_id","type_id","EditRoad","as_any","as_any_mut","borrow","borrow_mut","draw","draw_baselayer","from","into","into_any","into_any_rc","new_state","on_click","other_event","r","show_direction","try_from","try_into","type_id","PickMap","as_any","as_any_mut","borrow","borrow_mut","draw","event","from","into","into_any","into_any_rc","load_map","new_state","panel","try_from","try_into","type_id","BUILDING_LENGTH","Building","ID","INTERSECTION_RADIUS","Intersection","Model","Road","RoadPoint","as_any","as_any","as_any_mut","as_any_mut","blank","bldg_added","borrow","borrow","borrow_mut","borrow_mut","change_r_points","clear_r_pts","clone","clone_into","compute_bounds","create_b","create_i","create_r","debug_intersection_geometry","delete_b","delete_i","delete_r","delete_r_pt","draw_extra","dump_to_osm","eq","equivalent","export_to_osm","fmt","from","from","from_map","get_hash","get_hash","hash","include_bldgs","insert_r_pt","intersection_added","intersection_geom","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","map","merge_r","move_b","move_i","move_r_pt","ne","recreate_world","road_added","road_deleted","set_boundary","show_intersection_geometry","show_r_points","showing_pts","stop_showing_pts","time_to_id","to_owned","toggle_i","toggle_junction","try_from","try_from","try_into","try_into","type_id","type_id","world","0","0","0","0","1"],"q":["map_editor","","","","","","","","","","","","","","","","","","","","","","","","","map_editor::app","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_editor::app::Mode","","map_editor::camera","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_editor::edit","","","","","","","","","","","","","","","","","","","map_editor::load","","","","","","","","","","","","","","","","","map_editor::model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_editor::model::ID","","","",""],"d":["","","","","","","The initial camera state","","","","Returns the argument unchanged.","","Import buildings from the RawMap. Slow.","Calls <code>U::from(self)</code>.","","","","","The path to a RawMap to load. If omitted, start with a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Represents the state of a widgetry Canvas.","Track the last map used, to resume next session.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Load the camera’s configuration for the specified map. …","Save the camera’s configuration for the specified map, …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Express a RawMap as a .osm file. Why not just save the …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,4,4,4,4,4,0,4,0,4,4,4,4,4,4,4,0,4,0,0,0,4,4,4,0,47,0,0,47,47,47,12,14,47,12,14,47,12,12,14,47,12,14,47,14,12,12,14,12,14,47,12,14,47,12,14,47,47,12,14,47,14,12,14,14,12,14,47,12,14,47,12,14,47,14,48,49,0,0,19,20,19,20,19,20,19,20,19,19,19,19,20,19,20,19,20,19,20,19,20,19,20,19,20,20,19,19,19,20,19,20,19,20,19,20,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,30,30,30,30,30,30,30,30,30,30,0,30,30,30,30,30,0,36,0,0,36,0,36,36,33,36,33,36,33,33,33,36,33,36,33,33,36,36,33,33,33,33,33,33,33,33,33,33,0,36,36,33,36,33,36,33,36,36,36,33,33,33,33,33,36,33,36,36,33,36,33,33,33,33,33,36,33,33,33,33,33,33,33,33,0,36,33,33,33,36,33,36,33,36,33,50,51,52,53,53],"f":[0,0,[[],1],[[],1],[[]],[[]],0,0,[[],2],0,[[]],[3,4],0,[[]],[[[6,[5]]],[[6,[1,5]]]],[7,[[7,[1]]]],[8,[[8,[1]]]],0,0,[[]],0,[9],[[],10],[[],10],[[],11],0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[12,13]],[[]],[[]],[[]],[[]],[[]],[[]],[[14,15,12]],[[12,15]],[[12,13]],[[14,16,12],[[17,[12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[5]]],[[6,[1,5]]]],[[[6,[5]]],[[6,[1,5]]]],[[[6,[5]]],[[6,[1,5]]]],[7,[[7,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],0,0,[[16,12],[[6,[18]]]],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[14,16,12]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],0,0,0,[[],[[10,[19]]]],[[],[[10,[20]]]],[[19,21],22],[[20,21],22],[[]],[[]],[[]],[[]],[[[6,[5]]],[[6,[1,5]]]],[[[6,[5]]],[[6,[1,5]]]],[7,[[7,[1]]]],[7,[[7,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],0,[[16,23],24],[[13,23]],[19,10],[20,10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],0,[[],1],[[],1],[[]],[[]],[[25,15,12]],[25,26],[[]],[[]],[[[6,[5]]],[[6,[1,5]]]],[8,[[8,[1]]]],[[16,12,27],[[6,[18]]]],[[25,16,12,28,29],[[17,[12]]]],[[25,16,12],[[17,[12]]]],0,0,[[],10],[[],10],[[],11],0,[[],1],[[],1],[[]],[[]],[[30,15,12]],[[30,16,12],[[17,[12]]]],[[]],[[]],[[[6,[5]]],[[6,[1,5]]]],[8,[[8,[1]]]],[[16,31,24,[32,[31]]],[[6,[18]]]],[16,[[6,[18]]]],0,[[],10],[[],10],[[],11],0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[16,33],[[33,16,34]],[[]],[[]],[[]],[[]],[[33,16,27,35]],[[33,16,27]],[36,36],[[]],[33,37],[[33,16,38],36],[[33,16,38]],[[33,16,39,39]],[[33,16,39]],[[33,34]],[[33,39]],[[33,16,27]],[[33,16,27,40]],0,[41,[[10,[42]]]],[[36,36],24],[[],24],[33],[[36,21],22],[[]],[[]],[[16,41,24,43],33],[[],44],[[],44],[36],0,[[33,16,27,38]],[[33,16,39]],0,[[]],[[]],[[[6,[5]]],[[6,[1,5]]]],[[[6,[5]]],[[6,[1,5]]]],[7,[[7,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],0,[[33,16,27]],[[33,16,34,45,45]],[[33,16,39,38]],[[33,16,27,40,38]],[[36,36],24],[[33,16,43]],[[33,16,27]],[[33,27]],[[33,16,38,38]],[[33,16,24]],[[33,16,27]],0,[[33,27]],[[],46],[[]],[[33,16,39]],[[33,16,27]],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],0,0,0,0,0,0],"p":[[8,"Any"],[3,"App"],[3,"ArgMatches"],[3,"Args"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"Settings"],[4,"Result"],[3,"TypeId"],[3,"App"],[3,"Canvas"],[3,"MainState"],[3,"GfxCtx"],[3,"EventCtx"],[4,"Transition"],[8,"State"],[3,"CameraState"],[3,"DefaultMap"],[3,"Formatter"],[6,"Result"],[3,"MapName"],[15,"bool"],[3,"EditRoad"],[4,"DrawBaselayer"],[3,"OriginalRoad"],[15,"str"],[3,"Panel"],[3,"PickMap"],[3,"String"],[4,"Option"],[3,"Model"],[4,"OsmID"],[8,"FnMut"],[4,"ID"],[3,"Bounds"],[3,"Pt2D"],[3,"NodeID"],[15,"usize"],[3,"RawMap"],[3,"Error"],[3,"Timer"],[15,"u64"],[15,"f64"],[15,"i64"],[4,"Mode"],[13,"CreatingRoad"],[13,"SetBoundaryPt2"],[13,"Building"],[13,"Intersection"],[13,"Road"],[13,"RoadPoint"]]},\
"map_gui":{"doc":"This crate contains common code for applications that draw …","t":[8,13,13,13,4,13,13,13,13,13,13,3,3,13,11,11,11,11,11,11,11,12,11,11,11,11,12,0,10,12,12,11,12,10,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,10,12,12,10,12,10,10,10,11,0,10,12,11,0,12,12,10,11,0,12,11,0,11,11,11,11,12,12,12,12,12,12,12,12,12,12,13,3,4,13,13,13,13,12,12,11,11,11,11,12,12,12,12,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,12,11,12,11,12,11,12,12,11,11,12,11,12,11,11,12,12,12,12,12,5,11,12,11,11,11,11,11,11,11,11,11,12,11,12,12,12,5,11,11,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,11,12,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,12,11,11,11,11,12,11,11,12,12,12,12,12,12,12,12,12,12,11,12,11,11,12,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,13,13,4,13,13,13,13,13,3,3,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,12,11,11,11,12,12,12,12,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,3,17,3,3,3,3,3,3,3,3,17,8,3,0,12,0,12,11,11,0,12,12,12,12,11,11,12,0,12,12,12,5,0,12,10,10,12,12,12,12,12,12,12,12,12,5,11,10,10,11,5,12,12,12,12,12,12,0,12,11,11,11,11,12,12,0,0,12,11,0,12,0,12,12,12,0,12,12,12,12,0,0,11,11,0,11,12,5,12,11,12,12,12,12,3,3,12,11,11,11,11,11,12,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,12,12,11,11,11,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,3,11,11,12,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,17,3,11,11,12,12,11,11,11,11,12,11,11,11,11,12,11,11,11,11,5,11,11,11,11,5,12,3,5,11,11,11,11,5,5,5,11,11,11,12,11,12,11,11,11,11,11,12,11,11,11,5,5,5,5,11,5,11,11,11,11,11,11,11,12,3,11,11,11,11,5,5,5,5,5,5,11,11,11,12,11,11,11,11,12,11,11,11,11,5,12,11,11,11,11,11,12,3,12,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,11,11,11,11,11,12,12,11,11,11,11,11,12,3,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,17,3,17,11,11,11,11,11,11,11,12,5,11,11,11,11,12,11,11,11,12,11,11,5,11,11,11,11,12,5,5,5,5,5,5,3,17,11,11,11,11,12,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,12,3,17,11,11,11,11,11,11,11,12,12,11,11,11,11,5,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,12,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,11,11,11,11,11,11,11,12,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,3,3,3,3,3,3,3,3,4,13,3,3,3,3,13,3,8,17,3,13,13,13,3,13,3,3,8,3,3,12,5,10,12,12,12,12,12,12,0,12,5,5,0,5,5,5,5,12,0,12,12,0,0,12,12,12,12,12,12,12,12,12,5,0,5,12,12,12,5,5,5,10,0,12,5,0,12,0,12,12,5,12,0,12,12,12,12,5,5,12,12,12,12,0,10,0,5,5,12,12,12,12,12,12,12,12,12,12,12,12,5,12,0,5,12,12,12,12,12,5,12,12,10,12,12,0,0,0,0,5,0,5,0,12,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,12,11,11,11,11,11,11,12,12,12,11,12,12,12,11,12,12,11,11,11,11,13,13,13,3,13,4,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,5,3,3,17,11,11,11,11,11,11,11,11,11,11,12,12,12,5,11,11,11,11,12,11,11,11,11,11,11,11,11,11,5,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,12,11,5,5,3,11,11,11,11,11,11,11,5,5,11,11,11,11,12,12,5,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,5,11,11,12,11,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,5,5,11,11,11,11,11,11,11,11,7,7,3,8,12,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,10,11,11,11,12,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,13,4,13,13,13,13,13,13,3,11,11,11,11,11,11,11,11,0,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,5,3,3,3,3,8,12,12,10,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,10,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,17,17,3,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,12,11,11,11,11,3,11,11,11,11,5,5,5,5,5,11,11,11,11,11,11,5,11,11,11,11,5,5,5,12,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["AppLike","Area","Building","Car","ID","Intersection","Lane","ParkingLot","PedCrowd","Pedestrian","Road","SimpleApp","SimpleAppArgs","TransitStop","agent_id","as_any","as_any_mut","as_building","as_intersection","borrow","borrow_mut","cam","change_color_scheme","clone","clone_into","cmp","color_scheme","colors","cs","cs","current_selection","current_stage_and_remaining_time","dev","draw_map","draw_map","draw_with_opts","eq","equivalent","fmt","from","from","from","from","from","from","from","from","from","from","from","from_agent","get_hash","get_hash","hash","into","into_any","into_any_arc","into_any_rc","load","make_warper","map","map","map_path","map_switched","minimal_controls","mut_cs","mut_draw_map","mut_opts","ne","options","opts","opts","partial_cmp","render","scale_factor","session","sim","sim_time","simple_app","time","to_owned","tools","try_from","try_into","type_id","vzip","0","0","0","0","0","0","0","0","0","0","ClassicDayMode","ColorScheme","ColorSchemeChoice","DayMode","LTN","NightMode","Textured","after_changes","agent_colors","as_any","as_any","as_any_mut","as_any_mut","before_changes","bike_frame","bike_lane","bike_trip","borrow","borrow","borrow_mut","borrow_mut","brake_light","building_outline","bus_body","bus_label","bus_lane","bus_layer","bus_trip","choices","classic","clone","clone_into","commercial_building","curb","current_object","day_mode","day_time_slider","deserialize","driving_lane","edits_layer","eq","export","fade_map_dark","fmt","footway","from","from","general_road_marking","good_to_bad_green","good_to_bad_red","grass","gui_style","hex","import","inner_panel_bg","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","light_background","light_rail_track","ltn","map_background","minimap_cursor_bg","minimap_cursor_border","modulo_color","new","night_mode","night_time_slider","normal_intersection","panel_bg","parked_car","parking_lane","parking_lot","parking_trip","parse","ped_crowd","ped_foot","ped_head","ped_preparing_bike_body","perma_selected_object","private_road","residential_building","road_center_line","road_center_line","road_class_colors","road_outlines","rotating_color_agents","rotating_color_plot","route","scheme","selected","serialize","shared_use","show_buildings_in_minimap","sidewalk","sidewalk_lines","signal_banned_turn","signal_box","signal_permitted_turn","signal_protected_turn","signal_spinner","signal_turn_block_bg","slow_intersection","slower_intersection","slowest_intersection","stop_sign","stop_sign_pole","study_area","textured","to_owned","train_body","try_from","try_from","try_into","try_into","turn_arrow","type_id","type_id","unzoomed_arterial","unzoomed_bike","unzoomed_bus","unzoomed_car","unzoomed_cycleway","unzoomed_footway","unzoomed_highway","unzoomed_interesting_intersection","unzoomed_pedestrian","unzoomed_residential","unzoomed_road_surface","void_background","vzip","vzip","water","zoomed_intersection_surface","zoomed_road_surface","MapAlreadyLoaded","MapLoader","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","draw","event","force_reload","from","from","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","new_state","on_load","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Abstract","Brian","CameraAngle","IndividualTurnArrows","IsometricNE","IsometricNW","IsometricSE","IsometricSW","Options","OptionsPanel","TopDown","TrafficSignalStyle","Yuwen","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","camera_angle","canvas_settings","clone","clone","clone","clone_into","clone_into","clone_into","color_scheme","debug_all_agents","deserialize","deserialize","deserialize","dev","dont_draw_time_warp","draw","eq","eq","event","fmt","fmt","from","from","from","from","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","jump_to_delay","language","load_or_default","minimal_controls","new_state","panel","serialize","serialize","serialize","show_building_driveways","show_crosswalks","show_stop_signs","show_traffic_signal_icon","simplify_basemap","time_increment","to_owned","to_owned","to_owned","toggle_day_night_colors","traffic_signal_style","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","units","vzip","vzip","vzip","vzip","AgentCache","BIG_ARROW_THICKNESS","DrawArea","DrawBuilding","DrawIntersection","DrawMap","DrawMovement","DrawOptions","DrawPedCrowd","DrawPedestrian","OUTLINE_THICKNESS","Renderable","UnzoomedAgents","agents","agents_per_on","area","areas","as_any","as_any_mut","bike","bikes","blob","blob_pl","body_circle","borrow","borrow_mut","boundary_polygon","building","buildings","bus_stops","buses_and_trains","calculate_corners","car","cars","contains_pt","draw","draw_all_areas","draw_all_building_outlines","draw_all_buildings","draw_all_unzoomed_parking_lots","draw_all_unzoomed_roads_and_intersections","draw_default","draw_default","draw_default","draw_traffic_signal","draw_vehicle","from","get_id","get_outline","get_zorder","grey_out_unhighlighted_people","hitbox","id","id","id","id","id","intersection","intersections","into","into_any","into_any_arc","into_any_rc","label","label_buildings","lane","map","members","new","parking_lot","parking_lots","pedestrian","peds","quadtree","quadtree_ids","road","roads","show_zorder","suppress_traffic_signal_details","time","traffic_signal","transit_stop","try_from","try_into","turn","type_id","unzoomed","unzoomed_agent_radius","unzoomed_agents","vzip","zorder","zorder","zorder","zorder_range","AgentCache","UnzoomedAgents","agents_per_on","as_any","as_any","as_any_mut","as_any_mut","bikes","bikes","borrow","borrow","borrow_mut","borrow_mut","buses_and_trains","buses_and_trains","calculate_unzoomed_agents","cars","cars","clone","clone_into","color","draw_unzoomed_agents","eq","from","from","get","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","ne","new","new","peds","peds","populate_if_needed","time","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unzoomed","unzoomed_agents","update","vzip","vzip","DrawArea","as_any","as_any_mut","borrow","borrow_mut","contains_pt","draw","fill","from","get_id","get_outline","id","into","into_any","into_any_arc","into_any_rc","new","try_from","try_into","type_id","vzip","DrawBike","as_any","as_any_mut","body_circle","borrow","borrow_mut","contains_pt","draw","draw_default","from","get_id","get_outline","get_zorder","id","into","into_any","into_any_rc","new","try_from","try_into","type_id","vzip","zorder","DrawBuilding","as_any","as_any_mut","borrow","borrow_mut","clear_rendering","contains_pt","draw","from","get_id","get_outline","get_zorder","id","into","into_any","into_any_rc","label","new","try_from","try_into","type_id","vzip","CAR_WIDTH","DrawCar","as_any","as_any_mut","body","body_polygon","borrow","borrow_mut","contains_pt","draw","draw_default","from","get_id","get_outline","get_zorder","id","into","into_any","into_any_rc","new","thick_line_from_angle","try_from","try_into","type_id","vzip","zoomed_color_car","zorder","DrawIntersection","approx_eq","as_any","as_any_mut","borrow","borrow_mut","calculate_border_arrows","calculate_corner_curbs","calculate_corners","clear_rendering","contains_pt","draw","draw_default","draw_traffic_signal","draw_traffic_signal","from","get_id","get_outline","get_unzoomed_outline","get_zorder","id","into","into_any","into_any_rc","make_crosswalk","make_octagon","make_rainbow_crosswalk","make_unmarked_crossing","new","perp_line","redraw_default","render","stop_sign_geom","try_from","try_into","type_id","vzip","zorder","DrawLane","as_any","as_any_mut","borrow","borrow_mut","calculate_buffer_markings","calculate_driving_lines","calculate_one_way_markings","calculate_parking_lines","calculate_sidewalk_lines","calculate_turn_markings","clear_rendering","contains_pt","draw","draw_default","from","get_id","get_outline","get_zorder","id","into","into_any","into_any_rc","new","perp_line","polygon","render","try_from","try_into","type_id","vzip","zorder","DrawMap","areas","as_any","as_any_mut","borrow","borrow_mut","boundary_polygon","buildings","bus_stops","draw_all_areas","draw_all_building_outlines","draw_all_buildings","draw_all_unzoomed_parking_lots","draw_all_unzoomed_roads_and_intersections","free_memory","from","get_a","get_b","get_i","get_l","get_matching_objects","get_obj","get_pl","get_r","get_renderables_back_to_front","get_ts","intersections","into","into_any","into_any_rc","new","parking_lots","quadtree","quadtree_ids","recreate_intersection","recreate_road","regenerate_buildings","regenerate_parking_lots","regenerate_unzoomed_layer","roads","show_zorder","try_from","try_into","type_id","vzip","zoomed_batch","zorder_range","DrawParkingLot","as_any","as_any_mut","borrow","borrow_mut","clear_rendering","contains_pt","draw","draw","from","get_id","get_outline","get_zorder","id","into","into_any","into_any_rc","new","render","try_from","try_into","type_id","vzip","DrawPedCrowd","DrawPedestrian","as_any","as_any","as_any_mut","as_any_mut","blob","blob_pl","body_circle","borrow","borrow","borrow_mut","borrow_mut","contains_pt","contains_pt","draw","draw","draw_default","draw_default","from","from","geometry","get_id","get_id","get_outline","get_outline","get_zorder","get_zorder","id","into","into","into_any","into_any","into_any_rc","into_any_rc","members","new","new","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","zorder","zorder","DRAW_CURVEY_LABEL","DrawRoad","LABEL_SCALE_FACTOR","as_any","as_any_mut","borrow","borrow_mut","clear_rendering","contains_pt","draw","draw","draw_building_driveway","from","get_id","get_outline","get_zorder","id","into","into_any","into_any_rc","lanes","new","render","render_center_line","try_from","try_into","type_id","vzip","zorder","crosswalk_icon","dont_walk_icon","draw_signal_stage","draw_stage_number","draw_time_left","walk_icon","DrawTransitStop","RADIUS","as_any","as_any_mut","borrow","borrow_mut","center","contains_pt","draw","draw_default","from","get_id","get_outline","get_zorder","id","into","into_any","into_any_rc","new","try_from","try_into","type_id","vzip","zorder","DrawMovement","TURN_ICON_ARROW_LENGTH","as_any","as_any_mut","borrow","borrow_mut","draw_selected_movement","for_i","from","hitbox","id","into","into_any","into_any_arc","into_any_rc","make_circle_geom","try_from","try_into","type_id","vzip","SimpleApp","SimpleAppArgs","SimpleWarper","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","before_quit","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","calculate_current_selection","cam","clap","color_scheme","cs","cs","current_selection","current_stage_and_remaining_time","dev","draw","draw_default","draw_map","draw_map","draw_unzoomed","draw_with_opts","draw_zoomed","dump_before_abort","event","free_memory","from","from","from","from_clap","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","make_warper","map","map","map_name","map_path","map_switched","minimal_controls","mouseover_unzoomed_buildings","mouseover_unzoomed_roads_and_intersections","mut_cs","mut_draw_map","mut_opts","new","opts","opts","override_options","recalculate_current_selection","scale_factor","session","sim","sim_time","time","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_widgetry_settings","vzip","vzip","vzip","warper","0","ABStreet","CameraState","CityPicker","ColorDiscrete","ColorNetwork","DefaultMap","DrawRoadLabels","DrawSimpleRoadLabels","EditPolygon","Executable","FifteenMin","FilePicker","Grid","HeatmapOptions","InputWaypoints","LTN","Minimap","MinimapControls","NEXT_RELEASE","Navigator","OSMViewer","ParkingMapper","RawMapEditor","RunCommand","Santa","TitleScreen","TripManagement","TripManagementState","TurnExplorer","WaypointID","all","app_header","app_session_current_trip_name","app_type","app_type","base_zoom","cam_x","cam_y","cam_zoom","camera","categories","change_map_btn","checkbox_per_mode","city_picker","cmp_count","cmp_dist","cmp_duration","color_for_mode","color_scheme","colors","colors","comm","command","compare_counts","contours","controls","current","current_exe","data","dragging","draw","draw","draw","draw_isochrone","draw_overlapping_paths","draw_overlapping_paths","enter_state","fg_color","fg_color","find_exe","goal_marker","grey_out_map","has_zorder","heatmap","height","home_btn","icons","idx","importer","include_roads","include_roads","intersections_from_roads","l","labels","last_drawn","last_map","layer","lines","loading_tips","make_heatmap","map","map","max_capacity","max_waypts","minimap","mut_files","navigate","nice_country_name","nice_map_name","offset_x","offset_y","on_load","on_load","outline_color","p","panel","panel","panel","panel","panel","per_zoom","percentage_bar","points","polygon","prompt_to_download_missing_data","radius","resolution","show_success_popup","smoothing","snap_to_endpts","start_marker","started","state_type","sync_from_file_management","target_zoom","time","title_screen","trip_files","turn_explorer","ui","update_url_map_name","updater","version","waypoints","waypoints","width","world","zoom","zoom_lvl","zoomed","CameraState","DefaultMap","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","cam_x","cam_y","cam_zoom","deserialize","deserialize","fmt","fmt","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","last_map","load","save","serialize","serialize","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AllCityPicker","CitiesInCountryPicker","CityPicker","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chose_city","cities_per_country","draw","draw","draw","draw_baselayer","draw_baselayer","draw_baselayer","event","event","event","from","from","from","into","into","into","into_any","into_any","into_any","into_any_rc","into_any_rc","into_any_rc","new_in_city","new_state","new_state","new_state","on_load","on_load","on_load","panel","panel","panel","reimport_city","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ColorDiscrete","ColorNetwork","add_b","add_b","add_i","add_i","add_l","add_l","add_pl","add_r","add_r","add_ts","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","build","build","categories","colors","draw","draw","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","map","map","new","new","no_fading","no_fading","pct_intersections","pct_roads","ranked_intersections","ranked_roads","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","RunCommand","as_any","as_any_mut","borrow","borrow_mut","comm","draw","event","from","into","into_any","into_any_rc","last_drawn","lines","max_capacity","new_state","on_load","p","panel","read_output","show_success_popup","started","try_from","try_into","type_id","vzip","A","B","Compare","CompareCounts","Intersection","Layer","Obj","Road","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","autoselect_layer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","calculate_heatmap","calculate_relative_heatmap","clone","clone","clone_into","clone_into","cmp","counts_a","counts_b","draw","empty","eq","eq","equivalent","fmt","fmt","from","from","from","get_hash","get_hash","get_panel_widget","hash","heatmap_a","heatmap_b","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","layer","make_world","ne","new","on_click","other_event","partial_cmp","recalculate_b","relative_heatmap","relative_road_tooltip","relative_scale","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","world","0","0","draw_overlapping_paths","Grid","HeatmapOptions","NEIGHBORS","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","color_scheme","contours","data","draw_isochrone","eq","from","from","from_controls","height","idx","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","make_heatmap","ne","new","new","orthogonal_neighbors","radius","resolution","smoothing","to_controls","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","width","xy","goal_marker","start_marker","ImportCity","as_any","as_any_mut","borrow","borrow_mut","draw","event","from","generate_new_map_name","grab_geojson_from_clipboard","into","into_any","into_any_rc","new_state","on_load","panel","sanitize_name","try_from","try_into","type_id","vzip","DrawRoadLabels","DrawSimpleRoadLabels","all_roads","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","cheaply_overestimate_bounds","draw","draw","draw","empty","fg_color","fg_color","from","from","include_roads","include_roads","into","into","into_any","into_any","into_any_rc","into_any_rc","light_background","new","new","only_major_roads","only_major_roads","outline_color","per_zoom","render","render","simplify_name","simplify_patterns","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","MINIMAP_HEIGHT","MINIMAP_WIDTH","Minimap","MinimapControls","app_type","as_any","as_any_mut","base_zoom","borrow","borrow_mut","controls","dragging","draw","draw_extra","draw_extra","draw_with_extra_layers","event","from","get_panel","has_layer","has_layer","has_zorder","into","into_any","into_any_rc","layer","make_legend","make_legend","make_unzoomed_panel","make_unzoomed_panel","make_zoomed_side_panel","make_zoomed_side_panel","map_to_minimap_pct","mut_panel","new","offset_x","offset_y","panel","panel_changed","panel_changed","panel_clicked","panel_clicked","recenter","recreate_panel","set_zoom","time","try_from","try_into","type_id","vzip","zoom","zoom_lvl","zoomed","CrossStreet","Navigator","SearchBuildings","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","draw","draw","draw","draw","event","event","event","first","from","from","from","into","into","into","into_any","into_any","into_any","into_any_rc","into_any_rc","into_any_rc","new_state","new_state","new_state","new_state_with_target_zoom","panel","panel","panel","target_zoom","target_zoom","target_zoom","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","EditPolygon","Obj","Point","Polygon","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","draw","eq","equivalent","event","fmt","from","from","get_hash","get_hash","get_points","hash","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","ne","new","points","rebuild_world","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","world","0","ABStreet","Executable","FifteenMin","LTN","OSMViewer","ParkingMapper","RawMapEditor","Santa","TitleScreen","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","built_info","clone","clone_into","current_exe","enter_state","eq","from","from","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","new_state","on_click","replace_process","run","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BUILT_TIME_UTC","CFG_ENDIAN","CFG_ENV","CFG_FAMILY","CFG_OS","CFG_POINTER_WIDTH","CFG_TARGET_ARCH","CI_PLATFORM","DEBUG","FEATURES","FEATURES_STR","HOST","NUM_JOBS","OPT_LEVEL","PKG_AUTHORS","PKG_DESCRIPTION","PKG_HOMEPAGE","PKG_LICENSE","PKG_NAME","PKG_REPOSITORY","PKG_VERSION","PKG_VERSION_MAJOR","PKG_VERSION_MINOR","PKG_VERSION_PATCH","PKG_VERSION_PRE","PROFILE","RUSTC","RUSTC_VERSION","RUSTDOC","RUSTDOC_VERSION","TARGET","maybe_update","NamedTrip","RenameTrip","SavedTrips","TripManagement","TripManagementState","all","all_names","app_session_current_trip_name","app_type","app_type","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","autosave","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","current","current_name","deserialize","deserialize","draw","eq","from","from","from","from","get_panel_widget","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","len","load","mut_files","name","ne","new","new_name","new_state","next","on_click","on_click","panel_changed","prev","save","save_current_trip_to_session","serialize","serialize","set_current","state_type","state_type","sync_from_file_management","to_owned","trips","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","waypoints","CONFLICTING_TURN","CURRENT_TURN","TurnExplorer","as_any","as_any_mut","borrow","borrow_mut","color_turn_type","draw","draw_baselayer","event","from","idx","into","into_any","into_any_rc","l","make_panel","new_state","panel","try_from","try_into","type_id","vzip","FilePicker","as_any","as_any_mut","borrow","borrow_mut","checkbox_per_mode","cmp_count","cmp_dist","cmp_duration","color_for_mode","from","into","into_any","into_any_arc","into_any_rc","new_state","percentage_bar","try_from","try_into","type_id","vzip","download_cities","prompt_to_download_missing_data","size_of_city","0","InputWaypoints","Waypoint","WaypointID","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","at","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","center","clone","clone_into","eq","equivalent","event","fmt","from","from","from","get_hash","get_hash","get_panel_widget","get_waypoint_color","get_waypoint_text","get_waypoints","hash","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","label","len","max_waypts","ne","new","new","new_max_2","overwrite","rebuild_world","snap_to_endpts","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","waypoints"],"q":["map_gui","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::ID","","","","","","","","","","map_gui::colors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::load","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::options","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::render","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::render::agents","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::render::area","","","","","","","","","","","","","","","","","","","","","map_gui::render::bike","","","","","","","","","","","","","","","","","","","","","","","map_gui::render::building","","","","","","","","","","","","","","","","","","","","","","map_gui::render::car","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::render::intersection","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::render::lane","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::render::map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::render::parking_lot","","","","","","","","","","","","","","","","","","","","","","","map_gui::render::pedestrian","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::render::road","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::render::traffic_signal","","","","","","map_gui::render::transit_stop","","","","","","","","","","","","","","","","","","","","","","","","map_gui::render::turn","","","","","","","","","","","","","","","","","","","","map_gui::simple_app","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::camera","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::city_picker","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::colors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::command","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::compare_counts","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::compare_counts::Obj","","map_gui::tools::draw_overlapping_paths","map_gui::tools::heatmap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::icons","","map_gui::tools::importer","","","","","","","","","","","","","","","","","","","","","map_gui::tools::labels","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::minimap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::navigate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::polygon","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::polygon::Obj","map_gui::tools::title_screen","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::title_screen::built_info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::trip_files","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::turn_explorer","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::ui","","","","","","","","","","","","","","","","","","","","","map_gui::tools::updater","","","map_gui::tools::waypoints","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An application wishing to use the tools in this crate has …","","","","","","","","","","","Simple app state that just renders a static map, without …","","","","","","","","","","Initially position the camera here. The format is an …","Change the color scheme. Idempotent. Return true if there …","","","","The color scheme for map elements, agents, and the UI.","A color scheme groups colors used for different map, …","","","","","Dev mode exposes experimental tools useful for debugging, …","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","Create a <code>widgetry::State</code> that warps to the given point.","","","Path to a map to initially load. If not provided, load the …","","When making a screen recording, enable this option to hide …","","","","","","","","","Render static and dynamic map elements.","Override the monitor’s auto-detected scale factor","Custom per-app state can be stored here","","","","If desired, this can be advanced to render traffic signals …","","Assorted tools and UI states that’re useful for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Even if the current map name matches, still reload.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Options controlling the UI. Some of the options are common …","","","Different ways of drawing traffic signals. The names of …","","","","","","","","","","","","","","","","","","Draw buildings in different perspectives","widgetry options","","","","","","","The color scheme for map elements, agents, and the UI.","Every time we draw, render all agents zoomed in. Extremely …","","","","Dev mode exposes experimental tools useful for debugging, …","When time warping, don’t draw to speed up simulation","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","The delay threshold to halt on when jumping to the next …","Display roads and buildings in an alternate language, if …","Restore previous options. If the file is missing or the …","When making a screen recording, enable this option to hide …","","","","","","Draw building driveways.","Draw crosswalks and unmarked crossings.","Draw stop signs.","If true, draw an icon for traffic signals both when zoomed …","If true, modify several basemap features to de-emphasize …","How much to advance the sim with one of the speed controls","","","","Automatically change color_scheme based on simulation time …","How traffic signals should be rendered.","","","","","","","","","","","","","How to render geometric units","","","","","","","","","","","","Control how the map is drawn.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","If the sim has highlighted people, then fade all others …","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","Label every building.","","","","Default options for drawing a map.","","","","","","","","","","Don’t draw the current traffic signal state.","","","","","","","","","","This is controlled almost entirely by the minimap panel. …","","","","","","","","","","","","","","","","","","","","","If the sim time has changed or the unzoomed agent filters …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","This is controlled almost entirely by the minimap panel. …","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Find sections along the intersection polygon that aren’t …","","","Calls <code>U::from(self)</code>.","","","Draws both zebra crosswalks and unmarked crossings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Unsorted, unexpanded, raw result.","","","","A simple variation of the one in game that shows all …","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Build a single gigantic <code>GeomBatch</code> to render the entire map …","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","If <code>text_width</code> is defined, don’t draw the center line in …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","Simple app state that just renders a static map, without …","","","","","","","","","","","","","","","","","Initially position the camera here. The format is an …","","The color scheme for map elements, agents, and the UI.","","","","","Dev mode exposes experimental tools useful for debugging, …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Path to a map to initially load. If not provided, load the …","","When making a screen recording, enable this option to hide …","Only select buildings, and work whether zoomed in or not.","","","","","","","","Options are passed in by each app, usually seeded with …","Assumes some defaults.","Override the monitor’s auto-detected scale factor","Custom per-app state can be stored here","","","If desired, this can be advanced to render traffic signals …","","","","","","","","","","","","","","","","","Represents the state of a widgetry Canvas.","Lets the player switch maps.","","","Track the last map used, to resume next session.","Labels roads when unzoomed. Label size and frequency …","Draws labels in map-space that roughly fit on the roads. …","","","","","A 2D grid containing some arbitrary data.","","Click to add waypoints, drag them, see the list on a panel …","","","Customize the appearance and behavior of a minimap.","","","","","","Executes a command and displays STDOUT and STDERR in a …","","A title screen shared among all of the A/B Street apps.","Save sequences of waypoints as named trips. Basic file …","","A tool to explore all of the turns from a single lane.","","","A standard way to group a home button back to the title …","","","","","","","","","","A button to change maps, with default keybindings","","","Less is better","Shorter is better","Shorter is better","","","","","","","","","","","","Logically represents a 2D vector. Row-major ordering.","","","","","Thresholds are Durations, in units of seconds","","","","","","Returns the path to an executable. Native-only.","Draw a goal marker pointing at something.","Make it clear the map can’t be interacted with right now.","Should the user be able to control the z-order visible? …","","","A button to return to the title screen","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draw a start marker pointing at something.","","","","","","","","","Generic UI tools. Some of this should perhaps be lifted to …","Modify the current URL to set the first free parameter to …","","Returns the version of A/B Street to link to. When …","","","","","","","","Represents the state of a widgetry Canvas.","Track the last map used, to resume next session.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Load the camera’s configuration for the specified map. …","Save the camera’s configuration for the specified map, …","","","","","","","","","","","","","Lets the player switch maps.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Executes a command and displays STDOUT and STDERR in a …","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Start with the relative layer if anything has changed","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","If a button owned by this was clicked, returns the new …","If clickable_roads was enabled and a road was clicked, …","","","","","","","","","","","","","","","","","","","","","","","","A 2D grid containing some arbitrary data.","","","","","","","","","","","","","","","Logically represents a 2D vector. Row-major ordering.","Thresholds are Durations, in units of seconds","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calculate the index from a given (x, y). Doesn’t do any …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","From one tile, calculate the 4 orthogonal neighbors. …","","","","","","","","","","","","","","","The inverse of <code>idx</code>. No bounds checking.","Draw a goal marker pointing at something.","Draw a start marker pointing at something.","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Labels roads when unzoomed. Label size and frequency …","Draws labels in map-space that roughly fit on the roads. …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Label roads that the predicate approves","Label roads that the predicate approves","Only label major roads","Only label major roads","","","","","","","","","","","","","","","","","","Customize the appearance and behavior of a minimap.","","","","","","","","","","Draw extra stuff on the minimap, just pulling from the app.","Draw extra stuff on the minimap, just pulling from the app.","","","Returns the argument unchanged.","","Is there some additional layer displayed on the minimap? …","Is there some additional layer displayed on the minimap? …","Should the user be able to control the z-order visible? …","Calls <code>U::from(self)</code>.","","","","A row beneath the minimap in the zoomed view, usually used …","A row beneath the minimap in the zoomed view, usually used …","When unzoomed, display this panel. By default, no controls …","When unzoomed, display this panel. By default, no controls …","Controls to be placed to the left to the zoomed-in panel","Controls to be placed to the left to the zoomed-in panel","","","","","","","Called for <code>Outcome::Changed</code> on the panel.","Called for <code>Outcome::Changed</code> on the panel.","If a button is clicked that was produced by some method in …","If a button is clicked that was produced by some method in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A title screen shared among all of the A/B Street apps.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Run the given executable with some arguments. On Mac and …","","","","","","","","","","","The build time in RFC2822, UTC.","The endianness, given by <code>CARGO_CFG_TARGET_ENDIAN</code>.","The toolchain-environment, given by <code>CARGO_CFG_TARGET_ENV</code>.","The OS-family, given by <code>CARGO_CFG_TARGET_FAMILY</code>.","The operating system, given by <code>CARGO_CFG_TARGET_OS</code>.","The pointer width, given by <code>CARGO_CFG_TARGET_POINTER_WIDTH</code>.","The target architecture, given by <code>CARGO_CFG_TARGET_ARCH</code>.","The Continuous Integration platform detected during …","Value of DEBUG for the profile used during compilation.","The features that were enabled during compilation.","The features as a comma-separated string.","The host triple of the rust compiler.","The parallelism that was specified during compilation.","Value of OPT_LEVEL for the profile used during compilation.","A colon-separated list of authors.","The description.","The homepage.","The license.","The name of the package.","The source repository as advertised in Cargo.toml.","The full version.","The major version.","The minor version.","The patch version.","The pre-release version.","<code>release</code> for release builds, <code>debug</code> for other builds.","The compiler that cargo resolved to use.","The output of <code>rustc -V</code>","The documentation generator that cargo resolved to use.","The output of <code>rustdoc -V</code>","The target triple that was being compiled for.","","","","","Save sequences of waypoints as named trips. Basic file …","","","","","","","","","","","","","","","saves iff current trip is changed.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A tool to explore all of the turns from a single lane.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Less is better","Shorter is better","Shorter is better","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","How many bytes to download for a city?","","Click to add waypoints, drag them, see the list on a panel …","","","","","","","","","","","","","","","","","","","","","If the outcome from the panel or world isn’t used by the …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Allows any number of waypoints","","Only allow drawing routes with 2 waypoints. If a route is …","The caller should call <code>rebuild_world</code> after this","The caller is responsible for calling <code>initialize_hover</code> and …","","","","","","","","","","","","","","",""],"i":[0,1,1,1,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,112,48,1,1,1,112,0,48,107,107,48,112,48,107,48,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,48,48,107,112,48,112,48,48,48,1,0,48,107,1,0,112,107,48,48,0,107,1,0,1,1,1,1,174,175,176,177,178,179,180,181,182,183,8,0,0,8,8,8,8,11,11,11,8,11,8,11,11,11,11,11,8,11,8,11,11,11,11,11,11,11,8,11,8,8,11,11,11,11,11,8,11,11,8,11,11,8,11,11,8,11,11,11,11,11,0,11,11,11,8,11,8,11,8,11,8,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,11,11,8,11,8,11,11,8,11,11,11,11,11,11,11,11,11,11,11,11,11,8,11,11,11,0,0,184,49,184,49,184,49,184,49,49,49,184,184,49,184,49,184,49,184,184,49,184,49,184,49,184,49,184,49,184,49,54,53,0,53,54,54,54,54,0,0,54,0,53,55,35,53,54,55,35,53,54,55,35,53,54,55,35,53,54,35,35,35,53,54,35,53,54,35,35,35,53,54,35,35,55,53,54,55,53,54,55,35,53,54,55,35,53,54,55,35,53,54,35,53,54,55,35,53,54,35,35,35,35,55,55,35,53,54,35,35,35,35,35,35,35,53,54,35,35,55,35,53,54,55,35,53,54,55,35,53,54,35,55,35,53,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,0,12,14,14,0,65,98,98,97,14,14,12,0,12,12,65,0,0,65,60,60,12,12,12,12,12,82,97,98,82,0,14,60,60,60,0,105,71,77,82,97,105,0,12,14,14,14,14,77,14,0,0,98,14,0,12,0,65,12,12,0,12,12,14,66,0,0,14,14,0,14,66,0,66,14,82,97,98,12,0,0,66,66,65,66,65,65,65,66,65,66,65,65,65,66,65,65,65,65,65,66,65,66,65,66,66,65,66,65,65,66,65,65,66,65,65,65,66,66,65,66,65,66,65,66,65,66,66,65,66,65,0,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,0,0,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,0,79,79,79,79,0,79,0,0,82,82,82,82,0,0,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,0,0,0,82,0,82,82,82,82,82,82,82,82,0,90,90,90,90,0,0,0,0,0,0,90,90,90,90,90,90,90,90,90,90,90,90,90,0,90,90,90,90,90,90,90,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,0,0,97,98,97,98,98,98,97,97,98,97,98,97,98,97,98,97,98,97,98,97,97,98,97,98,97,98,97,97,98,97,98,97,98,98,97,98,97,98,97,98,97,98,97,98,97,98,0,0,0,93,93,93,93,93,93,93,93,0,93,93,93,93,93,93,93,93,93,93,93,0,93,93,93,93,93,0,0,0,0,0,0,0,0,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,0,0,105,105,105,105,105,105,105,105,105,105,105,105,105,0,105,105,105,105,0,0,0,107,110,112,107,110,112,107,107,110,112,107,110,112,107,112,112,112,107,107,107,107,112,110,107,107,107,107,107,107,107,110,107,107,110,112,112,107,110,112,107,110,112,110,112,107,110,112,107,107,107,112,112,107,112,107,107,107,107,107,107,107,107,112,107,112,107,107,107,107,107,110,112,107,110,112,107,110,112,112,107,110,112,110,167,157,0,0,0,0,0,0,0,0,0,157,0,0,0,0,157,0,0,0,0,157,157,157,0,157,0,0,0,0,0,123,0,159,151,123,151,124,124,124,0,132,0,0,0,0,0,0,0,122,0,132,138,0,0,122,151,123,158,146,151,132,134,148,0,0,0,158,149,148,0,0,0,150,0,146,0,0,164,0,149,148,0,164,0,138,125,151,138,0,0,132,134,138,168,0,159,0,0,0,151,151,128,138,149,138,128,138,151,152,164,149,0,156,0,0,122,122,138,122,168,0,138,123,159,152,151,0,0,0,0,0,0,0,0,168,146,156,151,151,151,0,0,124,125,124,125,124,125,124,125,124,124,124,124,125,124,125,124,125,124,125,124,125,124,125,124,125,125,124,124,124,125,124,125,124,125,124,125,124,125,0,0,0,128,129,130,128,129,130,128,129,130,128,129,130,0,0,128,129,130,128,129,130,128,129,130,128,129,130,128,129,130,128,129,130,128,129,130,128,128,129,130,128,129,130,128,129,130,0,128,129,130,128,129,130,128,129,130,128,129,130,0,0,132,134,132,134,132,134,134,132,134,132,132,134,132,134,132,134,132,134,132,134,132,132,132,134,132,134,132,134,132,134,132,134,132,134,132,134,132,134,132,134,134,134,134,134,132,134,132,134,132,134,132,134,0,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,142,142,142,0,141,0,0,141,139,141,142,139,141,142,139,139,141,142,139,141,142,0,0,141,142,141,142,141,139,139,139,139,141,142,141,141,142,139,141,142,141,141,139,141,139,139,139,141,142,139,141,142,141,142,139,141,142,139,0,141,139,139,139,141,139,139,139,139,141,142,139,141,142,139,141,142,139,141,142,139,141,142,139,185,186,0,0,0,0,146,122,146,122,146,122,146,122,122,122,122,122,146,0,122,146,122,122,146,146,146,122,146,122,146,122,146,122,0,122,146,122,146,122,122,122,122,122,146,122,146,122,146,122,146,122,146,146,0,0,0,147,147,147,147,147,147,147,0,0,147,147,147,147,147,147,0,147,147,147,147,0,0,148,149,148,149,148,149,148,149,148,0,149,148,148,148,149,148,149,148,149,148,149,148,149,148,149,148,149,149,148,149,148,149,149,149,148,0,0,149,148,149,148,149,148,149,148,0,0,0,0,151,151,151,151,151,151,151,151,151,150,150,151,151,151,151,150,150,150,151,151,151,151,150,150,150,150,150,150,151,151,151,151,151,151,150,150,150,150,151,151,151,151,151,151,151,151,151,151,151,0,0,0,152,153,154,152,153,154,152,153,154,152,153,154,152,153,154,153,152,153,154,153,152,153,154,152,153,154,152,153,154,152,153,154,152,153,154,152,152,153,154,152,153,154,152,153,154,152,153,154,152,153,154,152,153,154,0,0,155,155,156,155,156,155,156,155,156,155,155,155,156,155,155,156,155,156,155,155,155,156,155,156,155,156,155,155,156,155,155,156,156,156,155,156,155,156,155,156,155,156,155,156,187,157,0,157,157,157,157,157,157,0,158,157,158,157,158,157,158,157,0,157,157,158,158,157,158,157,158,157,158,157,157,158,157,158,158,157,158,157,158,157,158,157,158,157,158,157,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123,162,159,123,162,123,162,160,161,123,162,160,161,123,123,162,160,161,123,162,160,161,160,160,123,162,160,161,162,160,123,162,160,161,123,123,162,160,161,123,162,160,161,123,160,161,123,162,160,161,161,161,159,160,160,123,161,162,161,123,162,162,161,161,123,160,161,123,123,162,159,160,161,123,162,160,161,123,162,160,161,123,162,160,161,123,162,160,161,160,0,0,0,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,0,188,188,188,188,0,0,0,0,0,188,188,188,188,188,188,0,188,188,188,188,0,0,0,167,0,0,0,168,173,167,168,173,167,173,168,173,167,168,173,167,173,167,167,167,167,168,167,168,173,167,167,167,168,168,0,168,167,168,173,167,168,173,167,168,173,167,168,173,167,173,168,168,167,168,173,168,168,168,168,167,168,173,167,168,173,167,168,173,167,168,173,167,168],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[3,[2]]]],[[],4],[[],4],[1,5],[1,6],[[]],[[]],0,[[7,8],9],[1,1],[[]],[[1,1],10],0,0,[[],11],0,0,[6],0,[[],12],0,[[13,14]],[[1,1],9],[[],9],[[1,15],16],[5,1],[[]],[17,1],[18,1],[6,1],[19,1],[20,1],[21,1],[[[22,[21]]],1],[23,1],[24,1],[2,1],[[],25],[[],25],[1],[[]],[[[27,[26]]],[[27,[4,26]]]],[28,[[28,[4]]]],[29,[[29,[4]]]],0,[[7,30,[3,[31]],[3,[1]]],[[27,[32]]]],[[],33],0,0,[[7,33,34]],0,[[],11],[[],12],[[],35],[[1,1],9],0,[[],35],0,[[1,1],[[3,[10]]]],0,0,0,[[],36],[[],37],0,0,[[]],0,[[],38],[[],38],[[],39],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],4],[[],4],[[],4],[[],4],0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[],[[22,[[40,[8]]]]]],[[],11],[8,8],[[]],0,[[11,41],42],0,[[],11],0,[[],[[38,[8]]]],0,0,[[8,8],9],[[11,43],44],0,[[8,15],16],0,[[]],[[]],0,0,0,0,0,[43,42],[[11,43],44],0,[[]],[[]],[[[27,[26]]],[[27,[4,26]]]],[[[27,[26]]],[[27,[4,26]]]],[28,[[28,[4]]]],[28,[[28,[4]]]],[29,[[29,[4]]]],[29,[[29,[4]]]],[45,11],0,[[],11],0,0,0,[46,42],[[7,8],11],[[],11],0,0,0,0,0,0,0,[43,[[44,[8]]]],0,0,0,0,0,0,0,[[11,33],42],0,0,0,[[11,46],42],[[11,46],42],0,0,0,[8,38],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],11],[[]],0,[[],38],[[],38],[[],38],[[],38],0,[[],39],[[],39],0,0,0,0,0,0,0,0,0,0,[[11,41],42],0,[[]],[[]],0,[[11,41],42],[[11,47,41],42],0,0,[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[[49,[48]],13]],[[[49,[48]],7],[[50,[48]]]],[[7,51,[27,[52]]],[[27,[32]]]],[[]],[[]],[[]],[[]],[[[27,[26]]],[[27,[4,26]]]],[[[27,[26]]],[[27,[4,26]]]],[28,[[28,[4]]]],[29,[[29,[4]]]],[29,[[29,[4]]]],[[7,51,[27,[52]]],[[27,[32]]]],0,[[],38],[[],38],[[],38],[[],38],[[],39],[[],39],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[35,35],[53,53],[54,54],[[]],[[]],[[]],0,0,[[],[[38,[35]]]],[[],[[38,[53]]]],[[],[[38,[54]]]],0,0,[[55,13]],[[53,53],9],[[54,54],9],[[55,7],[[50,[48]]]],[[53,15],16],[[54,15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[27,[26]]],[[27,[4,26]]]],[[[27,[26]]],[[27,[4,26]]]],[[[27,[26]]],[[27,[4,26]]]],[[[27,[26]]],[[27,[4,26]]]],[28,[[28,[4]]]],[28,[[28,[4]]]],[28,[[28,[4]]]],[29,[[29,[4]]]],[29,[[29,[4]]]],[29,[[29,[4]]]],[29,[[29,[4]]]],0,0,[[],35],0,[7,[[27,[32]]]],0,[35,38],[53,38],[54,38],0,0,0,0,0,0,[[]],[[]],[[]],0,0,[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],39],[[],39],[[],39],[[],39],0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],4],[[],4],0,0,0,0,0,[[]],[[]],0,0,0,0,0,[[56,33],[[22,[57]]]],0,0,[[30,33],9],[[13,48,14]],0,0,0,0,0,0,0,0,0,[[58,33,36,59,11],[[27,[60]]]],[[]],[[],1],[33,61],[[],62],[[42,3,36],42],0,0,0,0,0,0,0,0,[[]],[[[27,[26]]],[[27,[4,26]]]],[28,[[28,[4]]]],[29,[[29,[4]]]],0,0,0,0,0,[[],14],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],38],[[],38],0,[[],39],0,[[[3,[63]]],64],0,[[]],0,0,0,0,0,0,0,[[],4],[[],4],[[],4],[[],4],[65,9],0,[[]],[[]],[[]],[[]],[65,9],0,[[66,33,36,11],67],[65,9],0,[65,65],[[]],[[65,68,11],[[3,[42]]]],[[66,13,33,36,11,35]],[[65,65],9],[[]],[[]],[[66,69],[[22,[60]]]],[[]],[[]],[[[27,[26]]],[[27,[4,26]]]],[[[27,[26]]],[[27,[4,26]]]],[28,[[28,[4]]]],[29,[[29,[4]]]],[29,[[29,[4]]]],[[65,65],9],[[],66],[[],65],[65,9],0,[[66,69,33,36,11,59]],0,[[]],[[],38],[[],38],[[],38],[[],38],[[],39],[[],39],0,0,[[65,70]],[[]],[[]],0,[[],4],[[],4],[[]],[[]],[[71,30,33],9],[[71,13,48,14]],[[72,11],73],[[]],[71,1],[[71,33],61],0,[[]],[[[27,[26]]],[[27,[4,26]]]],[28,[[28,[4]]]],[29,[[29,[4]]]],[[7,74,11,75],71],[[],38],[[],38],[[],39],[[]],0,[[],4],[[],4],0,[[]],[[]],[[76,30,33],9],[[76,13,48,14]],0,[[]],[76,1],[[76,33],61],[76,62],0,[[]],[[[27,[26]]],[[27,[4,26]]]],[29,[[29,[4]]]],[[58,33,36,59,11],76],[[],38],[[],38],[[],39],[[]],0,0,[[],4],[[],4],[[]],[[]],[77],[[77,30,33],9],[[77,13,48,14]],[[]],[77,1],[[77,33],61],[77,62],0,[[]],[[[27,[26]]],[[27,[4,26]]]],[29,[[29,[4]]]],0,[[7,78,33,11,35,75,75],77],[[],38],[[],38],[[],39],[[]],0,0,[[],4],[[],4],0,0,[[]],[[]],[[79,30,33],9],[[79,13,48,14]],0,[[]],[79,1],[[79,33],61],[79,62],0,[[]],[[[27,[26]]],[[27,[4,26]]]],[29,[[29,[4]]]],[[58,33,36,59,11],79],[[64,64,30,80],57],[[],38],[[],38],[[],39],[[]],[[58,36,11],42],0,0,[[],9],[[],4],[[],4],[[]],[[]],[[56,81,33],[[22,[57]]]],[[56,33],[[22,[57]]]],[[56,33],[[22,[57]]]],[82],[[82,30,33],9],[[82,13,48,14]],0,[[82,13,48,14,83]],0,[[]],[82,1],[[82,33],61],[[56,33],[[22,[84]]]],[82,62],0,[[]],[[[27,[26]]],[[27,[4,26]]]],[29,[[29,[4]]]],[[75,85,33,11]],[[30,64,80],57],[[75,85,33],9],[[75,85,33,11]],[[56,33],82],[[86,64],86],[[82,13,48]],[[82,48],75],[[87,33],3],[[],38],[[],38],[[],39],[[]],0,0,[[],4],[[],4],[[]],[[]],[[48,88,89,75]],[[89,81],[[22,[57]]]],[[89,81],[[22,[61]]]],[[89,33],[[22,[57]]]],[89,[[22,[57]]]],[[33,89],[[22,[57]]]],[90],[[90,30,33],9],[[90,13,48,14]],0,[[]],[90,1],[[90,33],61],[90,62],0,[[]],[[[27,[26]]],[[27,[4,26]]]],[29,[[29,[4]]]],[[89,81],90],[[86,64],86],0,[[90,48],75],[[],38],[[],38],[[],39],[[]],0,0,0,[[],4],[[],4],[[]],[[]],0,0,0,0,0,0,0,0,[12],[[]],[[12,24],71],[[12,5],77],[[12,6],82],[[12,18],90],[[12,91],[[22,[1]]]],[[12,7,1,48,66],[[3,[60]]]],[[12,19],92],[[12,17],93],[[12,91,33],[[22,[60]]]],[[12,23],94],0,[[]],[[[27,[26]]],[[27,[4,26]]]],[29,[[29,[4]]]],[[7,33,35,11,34],12],0,0,0,[[12,6,33]],[[12,81,33]],[[7,33,11,35,34]],[[7,33,11,35]],[[7,33,11,35,34],95],0,0,[[],38],[[],38],[[],39],[[]],[[7,48],75],0,0,[[],4],[[],4],[[]],[[]],[92],[[92,30,33],9],[[92,13,48,14]],0,[[]],[92,1],[[92,33],61],[92,62],0,[[]],[[[27,[26]]],[[27,[4,26]]]],[29,[[29,[4]]]],[[7,96,11,35,75],92],[[92,48],75],[[],38],[[],38],[[],39],[[]],0,0,[[],4],[[],4],[[],4],[[],4],0,0,0,[[]],[[]],[[]],[[]],[[97,30,33],9],[[98,30,33],9],[[97,13,48,14]],[[98,13,48,14]],0,0,[[]],[[]],[[75,36,11,99,46]],[97,1],[98,1],[[97,33],61],[[98,33],61],[97,62],[98,62],0,[[]],[[]],[[[27,[26]]],[[27,[4,26]]]],[[[27,[26]]],[[27,[4,26]]]],[29,[[29,[4]]]],[29,[[29,[4]]]],0,[[99,46,33,36,59,11],97],[[100,33,59,11],98],[[],38],[[],38],[[],38],[[],38],[[],39],[[],39],[[]],[[]],0,0,0,0,0,[[],4],[[],4],[[]],[[]],[93],[[93,30,33],9],[[93,13,48,14]],0,[[48,78,75]],[[]],[93,1],[[93,33],61],[93,62],0,[[]],[[[27,[26]]],[[27,[4,26]]]],[29,[[29,[4]]]],0,[81,93],[[93,48],75],[[48,81,[3,[64]]],75],[[],38],[[],38],[[],39],[[]],0,[84],[[101,59],75],[[59,102,46,6,[3,[103]],75,48,53]],[[59,56,46,75]],[[48,59,102,56,46,103,75]],[[101,59],75],0,0,[[],4],[[],4],[[]],[[]],0,[[94,30,33],9],[[94,13,48,14]],0,[[]],[94,1],[[94,33],61],[94,62],0,[[]],[[[27,[26]]],[[27,[4,26]]]],[29,[[29,[4]]]],[[7,104,33,11],94],[[],38],[[],38],[[],39],[[]],0,0,0,[[],4],[[],4],[[]],[[]],[[105,48,75,[3,[106]]]],[[59,33,11,6,46],22],[[]],0,0,[[]],[[[27,[26]]],[[27,[4,26]]]],[28,[[28,[4]]]],[29,[[29,[4]]]],[[31,84,80]],[[],38],[[],38],[[],39],[[]],0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[107,108]],[[]],[[]],[[]],[[]],[[]],[[]],[[107,7,9,9],[[3,[1]]]],0,[[],109],0,[107,11],0,0,[[107,6]],0,[[110,13,107]],[[107,13]],[107,12],0,[[107,13]],[[107,13,14]],[[107,13,14]],[[107,108]],[[110,7,107],[[50,[107]]]],[107],[[]],[[]],[[]],[111,112],[[]],[[]],[[]],[[[27,[26]]],[[27,[4,26]]]],[[[27,[26]]],[[27,[4,26]]]],[[[27,[26]]],[[27,[4,26]]]],[28,[[28,[4]]]],[28,[[28,[4]]]],[29,[[29,[4]]]],[29,[[29,[4]]]],[29,[[29,[4]]]],[[107,7,30,[3,[31]],[3,[1]]],[[27,[32]]]],[107,33],0,[112,51],0,[[107,7,33,34]],0,[[107,7],[[3,[1]]]],[[107,7],[[3,[1]]]],[107,11],[107,12],[107,35],[[7,35,51,[3,[113]],114]],[107,35],0,[[112,35]],[[107,7]],0,0,[107,36],[107,37],0,[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],39],[[],39],[[],39],[[112,115],115],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[7,48,43],116],[[],3],0,0,0,0,0,0,0,0,[[7,48],116],[[7,48,117],116],0,[[118,46,46]],[[118,48,64,43,43]],[[118,48,103,43,43]],[[48,119],42],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[33,120],75],0,[[48,22],121],0,0,0,[43,113],[[30,31],75],[[13,48]],[[],9],0,0,[7,116],0,0,0,0,0,[[117,33],[[117,[6]]]],0,0,0,0,0,0,[[],118],[[7,75,91,[22,[30]],122],116],0,0,0,0,0,[[],123],0,[43,43],[51,43],0,0,0,0,0,0,0,0,0,0,0,0,[[7,118,31],116],0,0,[[7,51,[27,[52]]],[[50,[48]]]],0,0,0,0,0,[[30,31],75],0,0,[7],0,0,0,0,0,0,[48],0,[[],43],0,0,0,0,0,0,0,0,0,[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],0,0,0,[[],[[38,[124]]]],[[],[[38,[125]]]],[[124,15],16],[[125,15],16],[[]],[[]],[[]],[[]],[[[27,[26]]],[[27,[4,26]]]],[[[27,[26]]],[[27,[4,26]]]],[28,[[28,[4]]]],[28,[[28,[4]]]],[29,[[29,[4]]]],[29,[[29,[4]]]],0,[[7,51],9],[[108,51]],[124,38],[125,38],[[],38],[[],38],[[],38],[[],38],[[],39],[[],39],[[]],[[]],0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[7,51,3],[[50,[48]]]],[[],[[127,[113,[22,[126]]]]]],[[[128,[48]],13]],[[[129,[48]],13]],[[[130,[48]],13]],[[[128,[48]]],131],[[[129,[48]]],131],[[[130,[48]]],131],[[[128,[48]],7],[[50,[48]]]],[[[129,[48]],7],[[50,[48]]]],[[[130,[48]],7],[[50,[48]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[27,[26]]],[[27,[4,26]]]],[[[27,[26]]],[[27,[4,26]]]],[[[27,[26]]],[[27,[4,26]]]],[29,[[29,[4]]]],[29,[[29,[4]]]],[29,[[29,[4]]]],[[7,[27,[52]],126],[[27,[32]]]],[[7,[27,[52]]],[[27,[32]]]],[[7,[27,[52]]],[[27,[32]]]],[[7,[27,[52]],43],[[27,[32]]]],0,0,0,0,0,0,[7,[[50,[48]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],39],[[],39],[[],39],[[]],[[]],[[]],0,0,[[132,5,[133,[43]]]],[[134,5,42]],[[132,6,[133,[43]]]],[[134,6,42]],[[132,18,[133,[43]]]],[[134,18,42]],[[134,19,42]],[[132,17,[133,[43]]]],[[134,17,42]],[[132,23,[133,[43]]]],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[132,7]],[[134,7],135],0,0,0,0,[[]],[[]],[[]],[[]],[[[27,[26]]],[[27,[4,26]]]],[[[27,[26]]],[[27,[4,26]]]],[28,[[28,[4]]]],[28,[[28,[4]]]],[29,[[29,[4]]]],[29,[[29,[4]]]],0,0,[[48,22],132],[48,134],[[48,22],132],[48,134],[[134,[136,[6]],137]],[[134,[136,[17]],137]],[[134,[136,[6]],137]],[[134,[136,[17]],137]],[[],38],[[],38],[[],38],[[],38],[[],39],[[],39],[[]],[[]],0,[[],4],[[],4],[[]],[[]],0,[[[138,[48]],13]],[[[138,[48]],7],[[50,[48]]]],[[]],[[]],[[[27,[26]]],[[27,[4,26]]]],[29,[[29,[4]]]],0,0,0,[[7,9,[22,[113]],[27,[52]]],[[27,[32]]]],0,0,0,[[[138,[48]]]],0,0,[[],38],[[],38],[[],39],[[]],0,0,0,0,0,0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[139],[[]],[[]],[[]],[[]],[[]],[[]],[[7,48,140],135],[[7,48,140,140],135],[141,141],[142,142],[[]],[[]],[[141,141],10],0,0,[[139,13,48]],[7,139],[[141,141],9],[[142,142],9],[[],9],[[141,15],16],[[142,15],16],[[]],[[]],[[]],[[],25],[[],25],[[139,7],116],[141],0,0,[[]],[[]],[[]],[[[27,[26]]],[[27,[4,26]]]],[[[27,[26]]],[[27,[4,26]]]],[[[27,[26]]],[[27,[4,26]]]],[28,[[28,[4]]]],[28,[[28,[4]]]],[29,[[29,[4]]]],[29,[[29,[4]]]],[29,[[29,[4]]]],0,[[7,48,9],[[143,[141]]]],[[141,141],9],[[7,48,140,140,142,9],139],[[139,7,48,43],[[3,[116]]]],[[139,7],[[3,[17]]]],[[141,141],[[3,[10]]]],[[139,7,48,140]],0,[[139,48,17],118],[[],144],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],39],[[],39],[[],39],[[]],[[]],[[]],0,0,0,[[48,22],121],0,0,0,[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[122,122],[[]],0,0,0,[[33,120],75],[[122,122],9],[[]],[[]],[70,122],0,[[[146,[145]],46,46],46],[[]],[[]],[[[27,[26]]],[[27,[4,26]]]],[[[27,[26]]],[[27,[4,26]]]],[28,[[28,[4]]]],[28,[[28,[4]]]],[29,[[29,[4]]]],[29,[[29,[4]]]],[[7,75,91,[22,[30]],122],116],[[122,122],9],[[46,46,145],[[146,[145]]]],[[],122],[[[146,[145]],46,46],22],0,0,0,[[122,7,116],[[22,[116]]]],[[]],[[],38],[[],38],[[],38],[[],38],[[],39],[[],39],[[]],[[]],0,[[[146,[145]],46]],[[30,31],75],[[30,31],75],0,[[],4],[[],4],[[]],[[]],[[[147,[48]],13]],[[[147,[48]],7],[[50,[48]]]],[[]],[[],113],[[],44],[[]],[[[27,[26]]],[[27,[4,26]]]],[29,[[29,[4]]]],[[7,[27,[52]]],[[27,[32]]]],0,0,[113,113],[[],38],[[],38],[[],39],[[]],0,0,[[7,48,42],148],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[43,31,30,80],91],[[149,13,48]],[[148,13]],0,[7,148],0,0,[[]],[[]],0,0,[[]],[[]],[[[27,[26]]],[[27,[4,26]]]],[[[27,[26]]],[[27,[4,26]]]],[29,[[29,[4]]]],[29,[[29,[4]]]],[149,149],[[[27,[114]]],149],[[7,48,42,[27,[114]]],148],[[],149],[[7,48,42],148],0,0,[[149,13,48,31],95],[[148,7,48,34],95],[113,[[3,[113]]]],[[],22],[[],38],[[],38],[[],38],[[],38],[[],39],[[],39],[[]],[[]],0,0,0,0,0,[[],4],[[],4],0,[[]],[[]],0,0,[[[151,[48,[150,[48]]]],13]],[13],[13],[[[151,[48,[150,[48]]]],13,[22,[95]]]],[[[151,[48,[150,[48]]]],7],[[3,[[50,[48]]]]]],[[]],[[[151,[48,[150,[48]]]]],70],[[],9],[[],9],[[],9],[[]],[[[27,[26]]],[[27,[4,26]]]],[29,[[29,[4]]]],0,[7,116],[7,116],[7,70],[7,70],[7,116],[7,116],[[[151,[48,[150,[48]]]],30]],[[[151,[48,[150,[48]]]]],70],[[7,[150,[48]]],[[151,[48,[150,[48]]]]]],0,0,0,[[7,70]],[[7,70]],[[7,43],[[3,[50]]]],[[7,43],[[3,[50]]]],[[[151,[48,[150,[48]]]],7]],[[[151,[48,[150,[48]]]],7]],[[[151,[48,[150,[48]]]],7,46]],0,[[],38],[[],38],[[],39],[[]],0,0,0,0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[152,13]],[[153,13]],[[154,13]],0,[[152,7],[[50,[48]]]],[[153,7],[[50,[48]]]],[[154,7],[[50,[48]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[[27,[26]]],[[27,[4,26]]]],[[[27,[26]]],[[27,[4,26]]]],[[[27,[26]]],[[27,[4,26]]]],[29,[[29,[4]]]],[29,[[29,[4]]]],[29,[[29,[4]]]],[7,[[27,[32]]]],[[7,[22,[17]],31],[[27,[32]]]],[[7,31],[[27,[32]]]],[[7,31],[[27,[32]]]],0,0,0,0,0,0,[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],39],[[],39],[[],39],[[]],[[]],[[]],0,0,0,0,[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[155,155],[[]],[[156,13]],[[155,155],9],[[],9],[[156,7,48]],[[155,15],16],[[]],[[]],[[],25],[[],25],[156],[155],[[]],[[]],[[[27,[26]]],[[27,[4,26]]]],[[[27,[26]]],[[27,[4,26]]]],[28,[[28,[4]]]],[29,[[29,[4]]]],[29,[[29,[4]]]],[[155,155],9],[[[22,[30]]],156],0,[[156,7,48]],[[]],[[],38],[[],38],[[],38],[[],38],[[],39],[[],39],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],0,[157,157],[[]],0,0,[[157,157],9],[[]],[[]],[[]],[[]],[[[27,[26]]],[[27,[4,26]]]],[[[27,[26]]],[[27,[4,26]]]],[28,[[28,[4]]]],[29,[[29,[4]]]],[29,[[29,[4]]]],[[7,157,[27,[114]]],[[27,[32]]]],[[[158,[48]],7,43,70],[[50,[48]]]],[[157,7,[22,[43]]],[[50,[48]]]],[[[158,[48]],7,157,[22,[43]]],[[50,[48]]]],[[]],[[],38],[[],38],[[],38],[[],38],[[],39],[[],39],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[7,116],0,0,0,0,0,0,0,[[],3],0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[[123,[48,[159,[48]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[160,160],[[]],0,0,[[],[[38,[160]]]],[[],[[38,[161]]]],[[[162,[48,[159,[48]]]],13]],[[160,160],9],[[]],[[]],[[]],[[]],[[[123,[48,[159,[48]]]],7],116],[[]],[[]],[[]],[[]],[[[27,[26]]],[[27,[4,26]]]],[[[27,[26]]],[[27,[4,26]]]],[[[27,[26]]],[[27,[4,26]]]],[[[27,[26]]],[[27,[4,26]]]],[28,[[28,[4]]]],[28,[[28,[4]]]],[28,[[28,[4]]]],[29,[[29,[4]]]],[29,[[29,[4]]]],[29,[[29,[4]]]],[29,[[29,[4]]]],[161,46],[48,161],[[],123],0,[[160,160],9],[[],[[123,[48,[159,[48]]]]]],[161,113],[[7,160,161],[[27,[32]]]],[[161,43],[[3,[160]]]],[[[123,[48,[159,[48]]]],7,43],[[3,[[50,[48]]]]]],[[[162,[48,[159,[48]]]],7,43,70],[[50,[48]]]],[[[162,[48,[159,[48]]]],7,70],[[3,[[50,[48]]]]]],[[161,43],[[3,[160]]]],[[161,48]],[[[123,[48,[159,[48]]]]]],[160,38],[161,38],[[[123,[48,[159,[48]]]],43]],0,0,[7],[[]],0,[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],39],[[],39],[[],39],[[],39],[[]],[[]],[[]],[[]],0,0,0,0,[[],4],[[],4],[[]],[[]],[163,42],[[164,13]],[164,131],[[164,7],[[50,[48]]]],[[]],0,[[]],[[[27,[26]]],[[27,[4,26]]]],[29,[[29,[4]]]],0,[[7,18,46],70],[[7,18],[[27,[32]]]],0,[[],38],[[],38],[[],39],[[]],0,[[],4],[[],4],[[]],[[]],[[7,48,117],116],[[118,46,46]],[[118,48,64,43,43]],[[118,48,103,43,43]],[[48,119],42],[[]],[[]],[[[27,[26]]],[[27,[4,26]]]],[28,[[28,[4]]]],[29,[[29,[4]]]],[[7,[3,[113]],[27,[52]]],[[27,[32]]]],[[7,118,31],116],[[],38],[[],38],[[],39],[[]],[[[22,[113]],[165,[113]],[165,[113]]],166],[[7,51,[27,[52]]],[[50,[48]]]],[51,25],0,0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,[[]],[[]],[[]],[[]],[[]],[[]],0,[167,167],[[]],[[167,167],9],[[],9],[[168,48,169,[170,[167]]],9],[[167,15],16],[[]],[[]],[[]],[[],25],[[],25],[[168,7],116],[[168,46],42],[46,171],[168,[[22,[172]]]],[167],[[]],[[]],[[]],[[[27,[26]]],[[27,[4,26]]]],[[[27,[26]]],[[27,[4,26]]]],[[[27,[26]]],[[27,[4,26]]]],[28,[[28,[4]]]],[28,[[28,[4]]]],[28,[[28,[4]]]],[29,[[29,[4]]]],[29,[[29,[4]]]],[29,[[29,[4]]]],0,[168,46],0,[[167,167],9],[48,168],[[48,172],173],[48,168],[[168,48,[22,[172]]]],[[168,7,143,114,46]],0,[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],39],[[],39],[[],39],[[]],[[]],[[]],0],"p":[[4,"ID"],[4,"AgentID"],[4,"Option"],[8,"Any"],[3,"BuildingID"],[3,"IntersectionID"],[3,"EventCtx"],[4,"ColorSchemeChoice"],[15,"bool"],[4,"Ordering"],[3,"ColorScheme"],[3,"DrawMap"],[3,"GfxCtx"],[3,"DrawOptions"],[3,"Formatter"],[6,"Result"],[3,"RoadID"],[3,"LaneID"],[3,"ParkingLotID"],[3,"CarID"],[3,"PedestrianID"],[3,"Vec"],[3,"TransitStopID"],[3,"AreaID"],[15,"u64"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"Pt2D"],[15,"f64"],[8,"State"],[3,"Map"],[3,"Timer"],[3,"Options"],[3,"Sim"],[3,"Time"],[4,"Result"],[3,"TypeId"],[3,"Choice"],[4,"RoadRank"],[3,"Color"],[15,"str"],[6,"Result"],[3,"Style"],[15,"usize"],[4,"LaneType"],[8,"AppLike"],[3,"MapAlreadyLoaded"],[4,"Transition"],[3,"MapName"],[8,"FnOnce"],[4,"TrafficSignalStyle"],[4,"CameraAngle"],[3,"OptionsPanel"],[3,"Intersection"],[3,"Polygon"],[3,"DrawCarInput"],[3,"Prerender"],[8,"Renderable"],[3,"Tessellation"],[15,"isize"],[4,"VehicleType"],[3,"Distance"],[3,"UnzoomedAgents"],[3,"AgentCache"],[3,"QuadTree"],[3,"UnzoomedAgent"],[4,"Traversable"],[3,"Panel"],[3,"DrawArea"],[4,"AreaType"],[4,"Fill"],[3,"Area"],[3,"GeomBatch"],[3,"DrawBike"],[3,"DrawBuilding"],[3,"Building"],[3,"DrawCar"],[3,"Angle"],[3,"Road"],[3,"DrawIntersection"],[3,"ControlTrafficSignal"],[3,"PolyLine"],[3,"Turn"],[3,"Line"],[3,"RoadWithStopSign"],[4,"BufferType"],[3,"Lane"],[3,"DrawLane"],[3,"Bounds"],[3,"DrawParkingLot"],[3,"DrawRoad"],[3,"DrawTransitStop"],[3,"Drawable"],[3,"ParkingLot"],[3,"DrawPedestrian"],[3,"DrawPedCrowd"],[3,"DrawPedestrianInput"],[3,"DrawPedCrowdInput"],[3,"Movement"],[3,"Stage"],[3,"Duration"],[3,"TransitStop"],[3,"DrawMovement"],[4,"TurnPriority"],[3,"SimpleApp"],[3,"Canvas"],[3,"App"],[3,"SimpleWarper"],[3,"ArgMatches"],[3,"SimpleAppArgs"],[3,"String"],[8,"Fn"],[3,"Settings"],[3,"Widget"],[3,"BTreeSet"],[3,"Text"],[4,"TripMode"],[3,"HashMap"],[3,"ToggleZoomedBuilder"],[3,"HeatmapOptions"],[3,"TripManagement"],[3,"CameraState"],[3,"DefaultMap"],[3,"CityName"],[3,"BTreeMap"],[3,"CityPicker"],[3,"AllCityPicker"],[3,"CitiesInCountryPicker"],[4,"DrawBaselayer"],[3,"ColorDiscrete"],[8,"AsRef"],[3,"ColorNetwork"],[3,"ToggleZoomed"],[3,"Counter"],[3,"ColorScale"],[3,"RunCommand"],[3,"CompareCounts"],[3,"TrafficCounts"],[4,"Obj"],[4,"Layer"],[3,"World"],[3,"DivergingScale"],[8,"Copy"],[3,"Grid"],[3,"ImportCity"],[3,"DrawSimpleRoadLabels"],[3,"DrawRoadLabels"],[8,"MinimapControls"],[3,"Minimap"],[3,"Navigator"],[3,"CrossStreet"],[3,"SearchBuildings"],[4,"Obj"],[3,"EditPolygon"],[4,"Executable"],[3,"TitleScreen"],[8,"TripManagementState"],[3,"NamedTrip"],[3,"SavedTrips"],[3,"RenameTrip"],[4,"TurnType"],[3,"TurnExplorer"],[3,"Sender"],[8,"Future"],[3,"WaypointID"],[3,"InputWaypoints"],[4,"Outcome"],[4,"WorldOutcome"],[15,"char"],[4,"TripEndpoint"],[3,"Waypoint"],[13,"Road"],[13,"Lane"],[13,"Intersection"],[13,"Building"],[13,"ParkingLot"],[13,"Car"],[13,"Pedestrian"],[13,"PedCrowd"],[13,"TransitStop"],[13,"Area"],[3,"MapLoader"],[13,"Road"],[13,"Intersection"],[13,"Point"],[3,"FilePicker"]]},\
"map_model":{"doc":"<code>map_model</code> describes the world where simulations occur. …","t":[12,12,12,12,12,12,12,3,13,3,4,3,3,4,13,13,13,13,13,13,13,13,13,3,13,13,13,4,3,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,4,3,13,13,13,13,13,13,3,3,13,13,13,13,3,4,13,4,4,3,4,3,13,13,13,13,13,13,13,13,13,13,3,3,3,4,13,13,3,13,13,3,3,4,13,13,13,13,13,13,17,17,3,3,3,13,3,13,3,17,3,13,13,4,13,13,3,17,13,13,3,3,3,4,3,4,4,3,3,3,4,13,3,3,13,13,13,13,3,13,13,13,13,3,13,13,13,4,13,13,13,3,3,3,3,3,17,13,13,13,13,13,13,4,13,3,4,13,13,13,13,13,13,13,13,13,13,3,3,3,3,4,3,13,13,3,4,4,13,3,13,13,13,13,13,13,3,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,11,12,12,12,11,12,12,12,12,12,12,12,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,12,12,12,12,12,12,11,12,12,12,12,12,12,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,0,12,12,11,11,12,12,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,0,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,12,12,12,12,12,12,12,11,12,11,12,12,12,0,0,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,12,12,11,12,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,0,12,12,11,11,12,12,12,12,12,12,12,0,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,11,11,11,11,11,11,11,12,0,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,12,12,12,12,11,12,12,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,17,12,11,11,12,11,12,11,11,11,11,12,11,11,11,11,11,13,13,13,3,13,13,13,4,4,3,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,0,12,12,12,12,12,12,12,12,3,3,5,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,13,13,13,13,13,4,3,3,4,3,3,2,13,13,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,0,11,11,12,12,11,11,11,12,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,5,11,11,11,11,11,11,12,12,0,12,12,5,5,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,12,11,12,12,12,12,12,12,12,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,5,13,13,13,13,13,17,4,3,4,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,11,11,0,0,11,11,11,11,11,11,11,12,5,0,12,2,5,11,0,0,5,11,11,0,11,11,0,5,5,5,5,5,5,5,5,17,17,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,11,11,12,12,5,5,5,11,11,11,12,12,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,12,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,4,13,13,4,13,13,13,13,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,11,11,11,12,12,12,11,12,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,13,4,3,3,13,13,17,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,5,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,12,11,12,11,11,11,11,12,12,12,11,11,11,12,5,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,12,11,11,11,12,11,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,3,13,13,3,3,3,4,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,17,3,13,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,12,11,11,11,11,12,12,12,11,11,11,12,11,11,11,12,12,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,3,3,4,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,13,17,17,17,13,13,17,17,13,3,17,17,4,17,17,17,13,3,4,17,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,13,13,13,2,2,4,2,2,2,2,2,2,2,13,3,13,2,11,12,12,12,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,0,11,11,0,5,11,11,11,11,11,11,11,11,11,11,11,11,0,12,5,0,0,2,0,11,11,0,5,13,13,13,4,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,3,11,11,11,11,11,11,11,5,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,13,13,13,3,3,4,11,11,12,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,5,11,11,11,11,11,11,11,11,11,12,11,11,11,13,13,13,3,3,4,13,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,5,5,5,11,11,11,11,11,12,12,12,12,13,13,13,13,4,3,11,11,11,11,11,11,11,11,12,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,5,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,12,12,13,13,13,3,4,11,11,11,11,11,11,11,11,12,11,11,5,11,12,5,11,11,11,11,5,11,11,11,12,11,5,12,12,12,12,13,17,17,3,4,13,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12],"n":["0","0","0","0","0","0","0","AccessRestrictions","Along","Amenity","AmenityType","Area","AreaID","AreaType","Back","BanTurns","Bank","Banned","Bar","Beauty","Bike","Bike","Biking","Block","Border","Both","Buffer","BufferType","Building","BuildingID","BuildingType","Bus","Bus","CacheCH","CacheDijkstra","Cafe","Car","CarRepair","CarShare","ChangeCrosswalks","ChangeIntersection","ChangeRoad","ChangeRouteSchedule","Childcare","City","Closed","Commercial","CommonEndpoint","CompressedMovementID","Construction","Construction","Contraflow","ContraflowLane","ContraflowMovement","ContraflowTurn","ControlStopSign","ControlTrafficSignal","ConvenienceStore","Crosswalk","Culture","Curb","DirectedRoadID","Direction","Driving","DrivingSide","EditCmd","EditEffects","EditIntersection","EditRoad","Empty","Exercise","FastFood","Fixed","FlexPosts","Food","Footway","Fwd","GreenSpace","Hotel","Intersection","IntersectionCluster","IntersectionID","IntersectionType","Island","JerseyBarrier","Lane","Lane","Lane","LaneID","LaneSpec","LaneType","Laundry","Left","Left","Left","Library","LightRail","MAX_BIKE_SPEED","MAX_WALKING_SPEED","Map","MapConfig","MapEdits","Medical","Movement","Movement","MovementID","NORMAL_LANE_THICKNESS","NamePerLanguage","NoCache","None","OffstreetParking","One","OnlyAllowTurns","OriginalRoad","PARKING_LOT_SPOT_LENGTH","Park","Parking","ParkingLot","ParkingLotID","Path","PathConstraints","PathRequest","PathStep","PathStepV2","PathV2","Pathfinder","PathfinderCache","PathfinderCaching","Pedestrian","Perimeter","PermanentMapEdits","Pet","Planters","Playground","Pool","Position","PostOffice","Private","Protected","PublicGarage","RawToMapOptions","Religious","Residential","ResidentialCommercial","RestrictionType","Right","Right","Right","Road","RoadID","RoadSideID","RoadWithStopSign","RoutingParams","SIDEWALK_THICKNESS","School","SharedLeftTurn","SharedSidewalkCorner","SharedUse","Shopping","Shoulder","SideOfRoad","Sidewalk","Stage","StageType","StopSign","StopSign","Straight","Stripes","StudyArea","Supermarket","Tourism","TrafficSignal","TrafficSignal","Train","TransitRoute","TransitRouteID","TransitStop","TransitStopID","Traversable","Turn","Turn","Turn","TurnID","TurnPriority","TurnType","UTurn","UberTurn","Uncontrolled","University","UnmarkedCrossing","Variable","Water","Yield","Zone","access_restrictions","access_restrictions","add_new_lane","added_turns","address","aisles","all","all_areas","all_buildings","all_costs_from","all_incoming_borders","all_intersections","all_lanes","all_outgoing_borders","all_parking_lots","all_roads","all_transit_routes","all_transit_stops","all_turns","all_zones","allow_through_traffic","almost_blank","alt_start","amenities","amenity_type","angle","apply_edits","area_type","areas","areas","as_string_code","avoid_high_stress","avoid_movements_between","avoid_roads","avoid_steep_incline_penalty","barrier_nodes","bike_graph","bike_lane_penalty","bikes_can_use_bus_lanes","biking_blackhole","blank","bldg_type","blocked_starts","borders","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boundary","boundary_polygon","bounds","building_to_road","buildings","bus_graph","bus_lane_penalty","bus_routes_on_roads","cache","cached_alternatives","car_graph","categorize","center_pts","changed_intersections","changed_parking_lots","changed_roads","changed_roads","changed_routes","check_lanes_ltr","city","clear_edits_before_save","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","commands","commands","common_endpt","complicated_turn_restrictions","config","connectivity","constraints","cost","create_for_test","create_from_raw","crossed_so_far","crosswalk","crosswalk_backward","crosswalk_forward","currently_inside_ut","default_for_side","deleted_lanes","deleted_turns","describe","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dir","dir","dir","dist_along","districts","driveway_geom","driveway_line","driving_blackhole","driving_lane_penalty","driving_pos","driving_pos","driving_side","dst","dst_i","dst_i","edit_road_cmd","edits","edits","edits_generation","edits_name","edits_name","elevation","end","end_border","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","export_geometry","extra_spots","find_b_by_osm_id","find_dog_legs_experiment","find_driving_lane_near_building","find_i_by_osm_id","find_r_by_osm_id","find_road_between","find_tr_by_gtfs","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_char","from_short_name","from_str","geom","geom","get","get_a","get_b","get_boundary_polygon","get_bounds","get_bus_routes_on_road","get_city_name","get_config","get_edits","get_edits_change_key","get_gps_bounds","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_i","get_i_crosswalks_edit","get_i_edit","get_l","get_languages","get_movement_for_traffic_signal","get_movements_for","get_name","get_next_roads","get_next_turns_and_lanes","get_next_turns_and_lanes_for","get_parent","get_pathfinder","get_pl","get_r","get_r_edit","get_routes_serving_stop","get_stop_sign","get_t","get_tr","get_traffic_signal","get_transit_route","get_ts","get_turn_between","get_turns_for","get_turns_from_lane","get_turns_to_lane","gps_bounds","gtfs_id","gtfs_id","hack_add_area","hack_override_bldg_type","hack_override_offstreet_spots","hack_override_offstreet_spots_individ","hack_override_orig_spawn_times","has_common_endpoint","hash","hash","hash","hash","hash","hash","hash","i","i1","i2","id","id","id","id","id","id","id","id","id","id","id","id","idx","idx","incoming_lanes","incremental_edit_traffic_signal","inferred_sidewalks","interior","intersection_type","intersections","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_for_moving_vehicles","is_train_stop","is_unprotected_turn","is_walkable","iter","keep_bldg_tags","keep_pathfinder_despite_edits","label_center","lane","lane_center_pts","lane_closest_to_edge","lane_type","lanes","lanes_ltr","languages","levels","load_synchronously","long_name","lt","main_road_penalty","make","map","map_loaded_directly","map_name","max_elevation","maybe_add_bike_lanes","maybe_get_a","maybe_get_b","maybe_get_i","maybe_get_l","maybe_get_pl","maybe_get_r","maybe_get_stop_sign","maybe_get_t","maybe_get_tr","maybe_get_traffic_signal","maybe_get_ts","members","members","members","merge_osm_ways","merge_zones","merge_zones","merged","minify","minify_buildings","modified_lanes","movements","must_apply_edits","must_stop","mut_lane","mut_road","mut_turn","name","name","name","name","names","ne","ne","ne","ne","new","new","new","new_edits","objects","offset","offset","oneway_for_driving","opposite","orig_id","orig_id","orig_id","orig_req","orig_spawn_times","original_crosswalks","original_intersections","osm","osm2lanes","osm_id","osm_id","osm_tags","osm_tags","osm_tags","osm_tags","osm_way_id","other_side","outgoing_lanes","params","parent","parent","parking","parking_lots","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path","pathfind","pathfind","pathfind_v2","pathfind_v2_with_params","pathfind_with_params","pathfinder","pathfinder_dirty","percent_incline","perimeter","polygon","polygon","polygon","polygon","polygon","proposal_description","proposal_description","proposal_link","proposal_link","protected_movements","recalculate_all_movements","recalculate_pathfinding_after_edits","recalculate_road_to_buildings","req","restrictions","road","road","road","road","road_to_buildings","road_to_buildings","roads","roads","roads","roads","route_type","routing_params","routing_params","save","save_edits","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","short_name","short_name","should_use_transit","side","sidewalk_line","sidewalk_pos","sidewalk_pos","sidewalk_pos","simple_path_btwn","simple_path_btwn_v2","skip_ch","spawn_times","speed_limit","speed_limit","spots","src","src_i","src_i","stage_type","stages","start","start","steps","steps","stop_signs","stops","street_parking_spot_length","supports_any_movement","to","to_char","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","toggle_road_direction","total_length","traffic_signals","train_graph","transit_routes","transit_stops","transit_stops","traversable","try_apply_edits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","turn_on_red","turn_restrictions","turn_type","turn_type","turns","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","typical_lane_width","typical_lane_widths","uber_turns","uber_turns","uber_turns","unnamed","unprotected_turn_penalty","unsaved_edits","untrimmed_center_pts","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walking_graph","walking_with_transit_graph","width","width","yield_movements","zones","zorder","0","0","1","num_housing_units","num_residents","0","i","i","id","new","new","new","new","old","old","old","old","r","0","0","0","0","0","1","1","0","0","0","0","0","0","0","0","0","0","1","2","0","0","City","POLYGON_EPSILON","areas","borrow","borrow_mut","boundary","deserialize","districts","from","from_huge_map","from_individual_maps","into","name","serialize","try_from","try_into","type_id","vzip","Border","Building","DirectedRoad","Item","LeaveMap","RideTransit","SidewalkEndpoint","Spot","WalkingNode","WalkingOptions","all_vehicle_costs_from","all_walking_costs_from","allow_shoulders","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","closest","cmp","cmp","cmp","cost","deserialize","deserialize","end_transit","eq","eq","eq","equivalent","equivalent","equivalent","find_scc","fmt","fmt","from","from","from","get_hash","get_hash","hash","hash","into","into","into","ne","ne","ne","node","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vehicle_cost","vzip","vzip","vzip","walking","walking_speed","0","0","0","0","0","0","1","Item","WalkingOptions","all_walking_costs_from","allow_shoulders","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","common_speeds","cost","default","default_speed","eq","equivalent","from","from","into","into","ne","node","partial_cmp","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","walking_speed","0","ChangeCrosswalks","ChangeIntersection","ChangeRoad","ChangeRouteSchedule","Closed","EditCmd","EditCrosswalks","EditEffects","EditIntersection","EditRoad","MapEdits","PermanentMapEdits","StopSign","TrafficSignal","access_restrictions","added_turns","apply","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","changed_intersections","changed_lanes","changed_parking_lots","changed_roads","changed_roads","changed_routes","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","commands","compat","compress","default","deleted_lanes","deleted_turns","describe","deserialize","diff","edits_name","eq","eq","eq","eq","eq","fix_building_driveways","fix_parking_lot_driveways","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_checksum","get_orig_from_osm","get_title","into","into","into","into","into","into","lanes_ltr","load_from_bytes","load_from_file","merge_zones","modified_lanes","modify_lanes","ne","ne","ne","ne","ne","new","original_crosswalks","original_intersections","perma","proposal_description","proposal_link","recalculate_intersection_polygon","recalculate_turns","save","serialize","speed_limit","to_owned","to_owned","to_owned","to_owned","to_owned","to_perma","to_permanent","to_permanent","to_permanent","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","undo","update_derived","vzip","vzip","vzip","vzip","vzip","vzip","i","i","id","new","new","new","new","old","old","old","old","r","0","0","ChangeAccessRestrictions","ChangeLaneType","ChangeSpeedLimit","OriginalLane","ReverseLane","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deserialize","deserialize","deserialize","deserialize","deserialize","dir","dst_i","fix_adaptive_stages","fix_city_name","fix_f64s","fix_intersection_ids","fix_lane_widths","fix_map_name","fix_merge_zones","fix_offset","fix_old_lane_cmds","fix_phase_to_stage","fix_plans","fix_road_direction","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","id","id","id","idx","into","into","into","into","into","l","lookup","lt","new","new","num_back","num_fwd","old","old","orig_lt","parent","remove_vehicle_caps","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upgrade","vzip","vzip","vzip","vzip","vzip","walk","ChangeCrosswalks","ChangeIntersection","ChangeRoad","ChangeRouteSchedule","Closed","IGNORE_OLD_LANES","PermanentEditCmd","PermanentEditCrosswalks","PermanentEditIntersection","PermanentMapEdits","StopSign","TrafficSignal","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","commands","deserialize","deserialize","deserialize","deserialize","edits_name","from","from","from","from","get_title","into","into","into","into","into_cmd","into_edits","into_edits_permissive","map_name","merge_zones","proposal_description","proposal_link","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","turns","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","with_permanent","with_permanent","gtfs_id","i","i","new","new","new","new","old","old","old","old","r","0","must_stop","RawToMapOptions","borrow","borrow_mut","bridges","buildings","clap","clone","clone_into","default","from","from_clap","into","keep_bldg_tags","match_points_to_lanes","parking_lots","skip_ch","snap_driveway","snap_nodes_to_line","to_owned","traffic_signals","transit","trim_path","try_from","try_into","turns","type_id","vzip","walking_turns","find_bridges","classify_bldg","get_address","make_all_buildings","infer_spots","line_valid","make_all_parking_lots","snap_driveway","PROTECTED","YIELD","all_walk_all_yield","degenerate","expand_all_stages","four_way_four_stage","four_way_two_stage","get_possible_policies","greedy_assignment","half_signal","lagging_green","make_stages","new","stage_per_road","synchronize","three_way","add_stage","four_way_four_stage","is_conflict","make_crosswalk_variable","make_lagging_green_variable","make_signal","make_traffic_signal","merge_stages","movements","movements_from","multi_way_stages","optimize","protected_yield_stage","remove_movement","straight_types","three_way_three_stage","BorderSnapper","borrow","borrow_mut","bus_incoming_borders","bus_outgoing_borders","create_route","create_stop","finalize_transit","from","into","new","train_incoming_borders","train_outgoing_borders","try_from","try_into","type_id","vzip","curvey_turn","ensure_unique","expected_turn_types_for_four_way","make_all_turns","make_vehicle_turns","remove_merging_turns","turn_type_from_angles","verify_vehicle_connectivity","baseline_geometry","filter_turns","make_crosswalk","make_shared_sidewalk_corner","make_walking_turns","turn_id","area","block","building","intersection","lane","movement","parking_lot","road","stop_signs","traffic_signals","transit","turn","zone","0","Area","AreaID","area_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","deserialize","deserialize","eq","equivalent","fmt","fmt","fmt","from","from","get_hash","hash","id","into","into","ne","osm_id","osm_tags","partial_cmp","polygon","serialize","serialize","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Block","Perimeter","borrow","borrow","borrow_mut","borrow_mut","calculate_coloring","check_continuity","clone","clone","clone_into","clone_into","collapse_deadends","contains","deserialize","deserialize","find_all_single_blocks","find_roads_to_skip_tracing","flip_side_of_road","fmt","from","from","interior","into","into","merge_all","merge_holes","partition_by_predicate","perimeter","polygon","restore_invariant","reverse_to_fix_winding_order","roads","serialize","serialize","single_block","to_block","to_owned","to_owned","try_from","try_from","try_into","try_into","try_to_merge","type_id","type_id","undo_invariant","vzip","vzip","0","Building","BuildingID","BuildingType","Commercial","Empty","OffstreetParking","Private","PublicGarage","Residential","ResidentialCommercial","address","amenities","biking_connection","bldg_type","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","deserialize","deserialize","deserialize","deserialize","driveway_geom","driving_connection","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","get_hash","has_amenity","has_residents","hash","id","into","into","into","into","label_center","levels","name","ne","ne","num_parking_spots","orig_id","osm_tags","parking","partial_cmp","polygon","serialize","serialize","serialize","serialize","sidewalk","sidewalk_pos","sidewalk_to_bike","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","0","0","1","num_housing_units","num_residents","0","0","1","1","0","Intersection","IntersectionID","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","deserialize","deserialize","elevation","eq","equivalent","find_road_between","fmt","fmt","fmt","from","from","get_hash","get_incoming_lanes","get_outgoing_lanes","get_rank","get_road_sides_sorted_by_incoming_angle","get_roads_sorted_by_incoming_angle","get_sorted_incoming_roads","get_zorder","hash","id","incoming_lanes","intersection_type","into","into","is_border","is_closed","is_cycleway","is_deadend_for_driving","is_deadend_for_everyone","is_degenerate","is_footway","is_incoming_border","is_light_rail","is_outgoing_border","is_private","is_stop_sign","is_traffic_signal","merged","movements","name","ne","orig_id","outgoing_lanes","partial_cmp","polygon","roads","serialize","serialize","some_incoming_road","some_outgoing_road","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","turn_to_movement","turns","type_id","type_id","vzip","vzip","Both","CommonEndpoint","Lane","LaneID","None","One","PARKING_LOT_SPOT_LENGTH","biking_blackhole","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","common_endpoint","decode_u32","deserialize","deserialize","dir","dist_along_of_point","driving_blackhole","dst_i","dummy","encode_u32","end_line","endpoint","eq","eq","equivalent","first_line","first_pt","fmt","fmt","fmt","from","from","from","get_directed_parent","get_hash","get_lane_level_turn_restrictions","get_nearest_side_of_road","get_thick_polygon","hash","id","intersections","into","into","into","is_biking","is_bus","is_driving","is_footway","is_light_rail","is_parking","is_shoulder","is_sidewalk","is_walkable","lane_center_pts","lane_type","last_line","last_pt","length","ne","ne","new","number_parking_spots","offset","parse_turn_type_from_osm","partial_cmp","road","serialize","serialize","src_i","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","width","0","CompressedMovementID","Movement","MovementID","angle","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","conflicts_with","crosswalk","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","find_r","fmt","fmt","fmt","for_i","from","from","from","from","from_permanent","geom","get_hash","get_hash","hash","hash","i","id","idx","into","into","into","members","movement_geom","ne","ne","ne","parent","partial_cmp","partial_cmp","serialize","serialize","serialize","src_center_and_width","to","to_owned","to_owned","to_owned","to_permanent","try_from","try_from","try_from","try_into","try_into","try_into","turn_type","type_id","type_id","type_id","vzip","vzip","vzip","0","ParkingLot","ParkingLotID","aisles","borrow","borrow","borrow_mut","borrow_mut","capacity","clone","clone","clone_into","clone_into","cmp","deserialize","deserialize","driveway_line","driving_pos","eq","equivalent","extra_spots","fmt","fmt","from","from","get_hash","hash","id","into","into","ne","osm_id","partial_cmp","polygon","serialize","serialize","sidewalk_line","sidewalk_pos","spots","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","DirectedRoadID","Left","Right","Road","RoadID","RoadSideID","SideOfRoad","access_restrictions","access_restrictions_from_osm","barrier_nodes","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","both_directions","both_sides","center_pts","children","children_backwards","children_forwards","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","common_endpoint","complicated_turn_restrictions","crosswalk_backward","crosswalk_forward","deserialize","deserialize","deserialize","deserialize","deserialize","dir","dir_and_offset","directed_id_from","directed_id_to","dst_i","dst_i","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","find_closest_lane","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_detailed_rank","get_dir_change_pl","get_half_polygon","get_half_width","get_hash","get_hash","get_hash","get_hash","get_lanes_between","get_name","get_outermost_lane","get_rank","get_thick_polygon","get_width","get_zone","has_lanes","hash","hash","hash","hash","high_stress_for_bikes","id","incoming_lanes","into","into","into","into","into","is_cycleway","is_deadend_for_driving","is_driveable","is_extremely_short","is_footway","is_light_rail","is_private","is_service","lane_specs","lanes","lanes","length","must_get_sidewalk","ne","ne","ne","oneway_for_driving","orig_id","osm_tags","other_endpt","other_side","parking_to_driving","partial_cmp","partial_cmp","partial_cmp","partial_cmp","percent_incline","recreate_lanes","road","road","serialize","serialize","serialize","serialize","serialize","shift_from_left_side","side","speed_limit","speed_limit_from_osm","src_i","src_i","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","transit_stops","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","turn_restrictions","type_id","type_id","type_id","type_id","type_id","untrimmed_center_pts","vzip","vzip","vzip","vzip","vzip","zorder","ControlStopSign","RoadWithStopSign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","flip_sign","fmt","fmt","from","from","get_priority","id","into","into","lane_closest_to_edge","must_stop","ne","ne","new","roads","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CROSSWALK_PACE","ControlTrafficSignal","Fixed","Stage","StageType","Variable","adjust_major_minor_timing","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","convert_to_ped_scramble","convert_to_ped_scramble_without_promotion","could_be_protected","deserialize","deserialize","deserialize","edit_movement","enforce_minimum_crosswalk_time","eq","eq","eq","export","fmt","fmt","fmt","from","from","from","get_min_crossing_time","get_possible_policies","get_priority_of_movement","get_priority_of_turn","id","import","internal_convert_to_ped_scramble","into","into","into","max_crosswalk_time","missing_turns","ne","ne","ne","new","new","offset","protected_movements","serialize","serialize","serialize","simple_cycle_duration","simple_duration","stage_type","stages","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate","validating_new","vzip","vzip","vzip","yield_movements","0","0","1","2","0","TransitRoute","TransitRouteID","TransitStop","TransitStopID","all_path_requests","all_paths","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","deserialize","deserialize","deserialize","deserialize","driving_pos","end_border","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","get_hash","get_hash","gtfs_id","gtfs_id","hash","hash","id","id","idx","into","into","into","into","is_train_stop","long_name","name","ne","ne","ne","orig_spawn_times","partial_cmp","partial_cmp","plural_noun","road","route_type","serialize","serialize","serialize","serialize","short_name","sidewalk_pos","spawn_times","start","stops","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Banned","Crosswalk","Left","Protected","Right","SharedSidewalkCorner","Straight","Turn","TurnID","TurnPriority","TurnType","UTurn","UnmarkedCrossing","Yield","angle","between_sidewalks","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","conflicts_with","crosswalk_line","crosswalk_over_road","deserialize","deserialize","deserialize","deserialize","dst","eq","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","geom","get_hash","hash","id","into","into","into","into","is_crossing_arterial_intersection","ne","ne","parent","partial_cmp","partial_cmp","partial_cmp","pedestrian_crossing","penalty","permitted_by_lane","permitted_by_road","serialize","serialize","serialize","serialize","src","to_movement","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","turn_type","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AccessRestrictions","Zone","allow_through_traffic","borders","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","floodfill","fmt","fmt","from","from","into","into","make_all","members","ne","ne","new","restrictions","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","0","Arterial","ENDPT_BACK","ENDPT_FWD","HIGHWAY","Highway","Local","MAXSPEED","NAME","Node","NodeID","OSM_REL_ID","OSM_WAY_ID","OsmID","PARKING_BOTH","PARKING_LEFT","PARKING_RIGHT","Relation","RelationID","RoadRank","SIDEWALK","Way","WayID","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","deserialize","deserialize","deserialize","deserialize","detailed_from_highway","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_highway","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","inner","into","into","into","into","into","ne","ne","ne","ne","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","0","0","0","Bike","Bus","Car","CreateEngine","Path","PathConstraints","PathRequest","PathStep","PathStepV2","PathV2","Pathfinder","PathfinderCache","PathfinderCaching","Pedestrian","RoutingParams","Train","WalkingNode","all","avoid_high_stress","avoid_movements_between","avoid_roads","avoid_steep_incline_penalty","bike_lane_penalty","bitand","bitor","bitxor","borrow","borrow","borrow_mut","borrow_mut","bus_lane_penalty","can_use","can_use_road","clone","clone","clone_into","clone_into","cmp","default","deserialize","deserialize","deserialize","driving_lane_penalty","engine","enum_from_u32","enum_into_u32","eq","eq","eq","equivalent","filter_lanes","fmt","fmt","from","from","from_lt","into","into","main_road_penalty","ne","node_map","not","partial_cmp","pathfinder","round","serialize","serialize","serialize","sub","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","uber_turns","unprotected_turn_penalty","unround","v1","v2","vehicle_cost","vehicles","vzip","vzip","walking","zone_cost","CH","CH","CHSeedingNodeOrdering","CreateEngine","Dijkstra","Dijkstra","Empty","PathfindEngine","all_costs_from","borrow","borrow","borrow_mut","borrow_mut","calculate_path","calculate_path_multiple_sources_and_targets","clone","clone_into","create","deserialize","from","from","into","into","is_dijkstra","reuse_ordering","serialize","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","graph","graph","path_calc","InnerNodeMap","NodeMap","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deserialize","deserialize_nodemap","from","from","get","get_or_insert","guarantee_node_ordering","id_to_node","id_to_node","into","into","new","node_to_id","serialize","to_owned","translate_id","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CacheCH","CacheDijkstra","NoCache","Pathfinder","PathfinderCache","PathfinderCaching","all_costs_from","apply_edits","bike_graph","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bus_graph","cache","cached_alternatives","car_graph","clone","clone","clone_into","clone_into","deserialize","empty","eq","finalize_transit","from","from","from","into","into","into","new","new","new_ch","new_dijkstra","new_limited","params","pathfind","pathfind_v2","pathfind_with_params","pathfind_with_params","serialize","should_use_transit","to_owned","to_owned","train_graph","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","walking_graph","walking_with_transit_graph","IntersectionCluster","UberTurn","UberTurnV2","autodetect","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","deserialize","deserialize","entry","entry","eq","eq","equivalent","exit","exit","find_all","flood","fmt","fmt","from","from","from","geom","into","into","into","into_v2","members","ne","ne","new","partial_cmp","path","path","serialize","serialize","to_owned","to_owned","trace_back","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uber_turns","vzip","vzip","vzip","ContraflowLane","ContraflowTurn","Lane","Path","PathRequest","PathStep","Turn","about_to_start_ut","add","alt_start","as_lane","as_traversable","as_turn","between_buildings","between_directed_roads","blocked_starts","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","constraints","crossed_so_far","crossed_so_far","crosses_road","current_step","currently_inside_ut","currently_inside_ut","deduplicate","deserialize","deserialize","deserialize","dist_crossed_from_step","end","eq","eq","eq","equivalent","equivalent","estimate_duration","exact_slice","fmt","fmt","fmt","fmt","from","from","from","get_blocked_starts","get_hash","get_req","get_step_at_dist_along","get_steps","get_total_elevation_change","hash","into","into","into","is_empty","is_last_step","is_upcoming_uber_turn_component","isnt_last_step","last_step","leave_from_driveway","max_speed_along","max_speed_and_incline_along","maybe_next_step","modify_step","ne","ne","ne","new","next_step","orig_req","partial_cmp","percent_dist_crossed","serialize","serialize","serialize","shift","start","steps","to_owned","to_owned","to_owned","to_string","total_length","total_length","trace","trace_from_start","trace_v2","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uber_turns","validate_continuity","validate_restrictions","validate_zones","vehicle","vzip","vzip","vzip","walking","0","0","0","0","Along","Contraflow","ContraflowMovement","Movement","PathStepV2","PathV2","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cost","crosses_road","deserialize","deserialize","find_uber_turns","fmt","fmt","from","from","from_roads","get_cost","get_req","get_steps","into","into","into_v1","into_v1_walking","new","req","serialize","serialize","steps","to_owned","to_owned","trace_all_polygons","trace_v2","try_from","try_from","try_into","try_into","type_id","type_id","uber_turns","vzip","vzip","0","0","0","0","Node","Road","UberTurn","VehiclePathfinder","all_costs_from","apply_edits","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","constraints","deserialize","deserialize","empty","engine","eq","equivalent","fmt","from","from","get_hash","hash","into","into","make_input_graph","ne","new","nodes","params","partial_cmp","pathfind","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","uber_turns","vehicle_cost","vzip","vzip","0","0","LeaveMap","RideTransit","SidewalkEndpoint","SidewalkPathfinder","WalkingNode","all_costs_from","apply_edits","borrow","borrow_mut","clone","clone_into","deserialize","empty","engine","from","into","make_input_graph","new","nodes","one_step_walking_path","pathfind","serialize","should_use_transit","to_owned","transit_input_graph","try_from","try_into","type_id","use_transit","vzip","walking_path_to_steps","0","0","0","1","Lane","MAX_BIKE_SPEED","MAX_WALKING_SPEED","Position","Traversable","Turn","as_lane","as_turn","bike_speed_on_incline","borrow","borrow","borrow_mut","borrow_mut","buffer_dist","clone","clone","clone_into","clone_into","cmp","cmp","deserialize","deserialize","dist_along","dist_along","end","eq","eq","equiv_pos","equiv_pos_for_long_object","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","get_hash","get_polyline","get_zorder","hash","into","into","lane","lane","max_speed_along_movement","max_speed_along_road","maybe_lane","maybe_turn","min_dist","ne","ne","new","partial_cmp","partial_cmp","pt","pt_and_angle","serialize","serialize","start","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","walking_speed_on_incline","0","0"],"q":["map_modelmap_model::BuildingType","","","","","map_model::CommonEndpoint","map_model::EditCmd","","","","","","","","","","","","map_model::EditIntersection","","map_model::LaneType","map_model::OffstreetParking","","","","map_model::PathStep","","","","map_model::PathStepV2","","","","map_model::StageType","","","","map_model::Traversable","","map_model::city","","","","","","","","","","","","","","","","","","map_model::connectivity","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::connectivity::Spot","","","map_model::connectivity::WalkingNode","","","","map_model::connectivity::walking","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::edits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::edits::EditCmd","","","","","","","","","","","","map_model::edits::EditIntersection","","map_model::edits::compat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::edits::perma","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::edits::perma::PermanentEditCmd","","","","","","","","","","","","map_model::edits::perma::PermanentEditIntersection","","map_model::make","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::make::bridges","map_model::make::buildings","","","map_model::make::parking_lots","","","","map_model::make::traffic_signals","","","","","","","","","","","","","","","","map_model::make::traffic_signals::lagging_green","","","","","","","","","","","","","","","","map_model::make::transit","","","","","","","","","","","","","","","","","map_model::make::turns","","","","","","","","map_model::make::walking_turns","","","","","","map_model::objects","","","","","","","","","","","","","map_model::objects::area","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects::block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects::building","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects::building::BuildingType","","","","","map_model::objects::building::OffstreetParking","","","","map_model::objects::intersection","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects::lane","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects::lane::CommonEndpoint","map_model::objects::movement","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects::parking_lot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects::roadmap_model::objects::stop_signs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects::traffic_signals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects::traffic_signals::StageType","","","","map_model::objects::transit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects::turn","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects::zone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::osm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::osm::OsmID","","","map_model::pathfind","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::pathfind::engine","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::pathfind::engine::CreateEngine","map_model::pathfind::engine::PathfindEngine","","","map_model::pathfind::node_map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::pathfind::pathfinder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::pathfind::uber_turns","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::pathfind::v1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::pathfind::v1::PathStep","","","","map_model::pathfind::v2","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::pathfind::v2::PathStepV2","","","","map_model::pathfind::vehicles","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::pathfind::vehicles::Node","","map_model::pathfind::walking","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::pathfind::walking::WalkingNode","","","","map_model::traversable","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::traversable::Traversable",""],"d":["","","","","","","","","Original direction","A business located inside a building.","Businesses are categorized into one of these types.","Areas are just used for drawing.","","","","","","For stop signs: Can’t currently specify this! For …","","","","","","A block is defined by a perimeter that traces along the …","","Two lanes/roads share both endpoints, because they both …","","","A building has connections to the road and sidewalk, may …","","","","","Create a slow-to-build but fast-to-use contraction …","Create a fast-to-build but slow-to-use Dijkstra-based …","","","","","","","","","","A single city (like Seattle) can be broken down into …","","An estimated number of workers","","This is cheaper to store than a MovementID. It simply …","","","Opposite direction, sidewalks only","Sidewalks only!","","","","A traffic signal consists of a sequence of Stages that …","","A marked zebra crossing, where pedestrians usually have …","","A raised curb","","","","","","","","","","","","","Flex posts, wands, cones, other “weak” forms of …","","Some kind of pedestrian-only path unassociated with a road","","","","An intersection connects roads. Most have &gt;2 roads and are …","This only applies to VehiclePathfinder; walking through …","","","","Solid barrier, no gaps.","A road segment is broken down into individual lanes, which …","Original direction","","A lane is identified by its parent road and its position, …","","","","","","","","","","","","","Represents changes to a map. Note this isn’t …","","A Movement groups all turns from one road to another, …","","A movement is like a turn, but with less detail – it …","","None corresponds to the native name","Create a fast-to-build but slow-to-use Dijkstra-based …","Two lanes/roads don’t have any common endpoints","Represent no parking as Private(0, false).","Two lanes/roads share one endpoint","","A way to refer to roads across many maps and over time. …","From some manually audited cases in Seattle, the length of …","","","Parking lots have some fixed capacity for cars, and are …","","","Who’s asking for a path?","","","One step along a path.","A path between two endpoints for a particular mode. This …","","For callers needing to request paths with a variety of …","When pathfinding with different <code>RoutingParams</code> is done, a …","","A sequence of roads in order, beginning and ending at the …","MapEdits are converted to this before serializing. …","","Sturdier planters, with gaps.","","","Represents a specific point some distance along a lane.","","(Spots, explicitly tagged as a garage)","For stop signs: cars can do this without stopping. These …","(Name, spots)","Options for converting RawMaps to Maps.","","","An estimated number of residents, workers","","","","","A Road represents a segment between exactly two …","","","","Tuneable parameters for all types of routing.","","","","The corner where two sidewalks meet. Pedestrians can cross …","Some kind of shared pedestrian+bicycle space. May be …","","","See https://wiki.openstreetmap.org/wiki/Forward_…","","","","","","","Just paint!","Not from OSM. A user-specified area to focus on.","","","","","","","","","","Either a lane or a turn, where most movement happens.","A Turn leads from the end of one Lane to the start of …","","","Turns are uniquely identified by their (src, dst) lanes …","","","","","","","An unmarked crossing, where pedestrians may cross without …","Minimum is the minimum duration, 0 allows cycle to be …","","For stop signs: cars have to stop before doing this turn, …","A contiguous set of roads with access restrictions. This …","","","Returns the index where the new lane was inserted","","","","All types of amenities, in alphabetical order.","","","Return the cost of a single path, and also a mapping from …","This and all_outgoing_borders are expensive to constantly …","","","","","","","","","","","A dummy map that won’t crash UIs, but has almost nothing …","","","This is the specific amenity listed in OSM, not the more …","","","","","","Prints the OriginalRoad in a way that can be copied to …","","Don’t allow movements between these roads at all. Only …","Don’t allow crossing these roads at all. Only affects …","","Some kind of modal filter or barrier this distance along …","","","","","Just for temporary std::mem::replace tricks.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Categorize an OSM amenity tag.","The physical center of the road, including sidewalks, …","","","","Derived from commands, kept up to date by update_derived","","This is meant for table-driven unit tests. Call this on …","","A hack. Use this to apply edits, then save the map anyway, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A stack, oldest edit is first. The same intersection may …","","self is ‘from’. (via, to). Only BanTurns.","","","","","Transforms a string describing lane types and directions, …","","","Could be a Crosswalk or UnmarkedCrossing","","Is there a tagged crosswalk near each end of the road?","","","","","","","","","","","","","","","","","","","","","","","The individual maps","Goes from building to sidewalk","Goes from the lot to the driving lane","{Cars, bikes} trying to start or end here might not be …","","Guaranteed to be at least 7m (MAX_CAR_LENGTH + a little …","These may be on different roads entirely, like for light …","If true, driving happens on the right side of the road …","","","","","Once a Map exists, the player can edit it in the UI …","","","","","","","A transit vehicle either vanishes at its last stop or …","","","","","","","","","","","","","","","","","","","","","Export all road and intersection geometry to GeoJSON, …","If we can’t render all spots (maybe a lot with no aisles …","","Enable experimental dog-leg intersection merging","Cars trying to park near this building should head for the …","","","Finds the road directly connecting two intersections.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","The inverse of <code>to_char</code>. Always picks one buffer type. …","","","The “overall” path of movement, aka, an “average” …","","","","","","","What’re the names of bus routes along a road? Note this …","","","","If you need to regenerate anything when the map is edited, …","","","","","","","","","","","Panics on borders","","","None for SharedSidewalkCorners and turns not belonging to …","Find all movements from one road to another that’re …","","","","","","","","","","","","","","","","","","","The turns may belong to two different intersections!","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","As long as this is unique per road, this value is …","Note that a lane may belong to both incoming_lanes and …","Since the player is in the middle of editing, the signal …","If true, roads without explicitly tagged sidewalks may be …","These roads exist entirely within the perimeter","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","If false, only buses serve this stop","Does a turn at a stop sign go from a smaller to a larger …","","","Preserve all OSM tags for buildings, increasing the final …","Normally after applying edits, you must call …","Where a text label should be centered to have the best …","","","","","Invariant: A road must contain at least one child. These …","","","","Load a map from a local serialized Map or RawMap. Note …","","","When crossing an arterial or highway road, multiply the …","See …","A bunch of (mostly read-only) queries on a Map.","After deserializing a map directly, call this after.","","Returns the highest elevation in the map","","","","","","","","","","","","","","","","Experimentally merge these OSM ways","If false, adjacent roads with the same AccessRestrictions …","If false, adjacent roads with the same AccessRestrictions …","Was a short road adjacent to this intersection merged?","Modifies the map in-place, removing parts not essential …","Modifies the map in-place, removing buildings.","","","Returns (changed_roads, deleted_lanes, deleted_turns, …","","","Public for importer. Do not abuse!","","","","","","","","","","","","","","","","","","None if bidirectional. If it’s one-way, which direction …","","","","","","Explicitly store whatever the original was, since this can…","","","Useful utilities for working with OpenStreetMap.","If true, use experimental osm2lanes for figuring out lanes …","The importing process also automatically creates some …","","Depending on options while importing, these might be …","","Depending on options while importing, these might be …","","","","","","","","","","","","","","","","","","Everything related to pathfinding through a map for …","","","","","","","[-1.0, 1.0] theoretically, but in practice, about [-0.25, …","","","The polygon covers the interior of the block.","","This needs to be in clockwise orientation, or later …","","Edits without these are player generated.","Some edits are included in the game by default, in …","The link is optional even for proposals","","","","This can expensive, so don’t constantly do it while …","","","","","","","","","","","","Only roads incoming to the intersection are listed here.","","","Returns the routing params baked into the map.","","","","","","","","","","","","","","","","","","","","","Lot to sidewalk","The building’s connection for any agent can change based …","","","Simple search along undirected roads. Expresses the result …","Simple search along directed roads, weighted by distance. …","Should contraction hierarchies for pathfinding be built? …","Non-empty, times in order for one day when a vehicle …","","","The middle of the “T”, pointing towards the parking …","src and dst must both belong to parent. No guarantees that …","","","","","A transit vehicle spawns at the beginning of this lane. …","","","","","","Street parking is divided into spots of this length. 8 …","","","Represents the lane type as a single character, for use in …","","","","","","","","","","","","","","","","","","Convert the driving lanes of a road between one-way …","","","","","Meaningless order","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If true, turns on red which do not conflict crossing …","self is ‘from’","","","","","","","","","","","","","","","","","","Pick a reasonable default for a lane width, without any …","For a given lane type, returns some likely widths. This …","","","","","","","Like center_pts, but before any trimming for intersection …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A single city (like Seattle) can be broken down into …","","","","","","","The individual maps","Returns the argument unchanged.","If there’s a single map covering all the smaller maps, …","Generate a city from a bunch of smaller, individual maps. …","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","false is src_i, true is dst_i","","","","Starting from some initial spot, calculate the cost to all …","Starting from some initial buildings, calculate the cost …","If true, allow walking on shoulders.","","","","","","","","","","","","","","","","","","","","","","","","","Calculate the strongly connected components (SCC) of the …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","This returns the pathfinding cost of crossing one road and …","","","","","","","","","","","","","","","Starting from some initial buildings, calculate the cost …","If true, allow walking on shoulders.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","This must contain all crossing turns at one intersection, …","","","","Represents changes to a map. Note this isn’t …","","","","","","","","","","","","","","","","","","","","Pick apart changed_roads and figure out if an entire road …","","","Derived from commands, kept up to date by update_derived","","","","","","","","","","","","A stack, oldest edit is first. The same intersection may …","","Assumes update_derived has been called.","","","","(summary, details)","","","","","","","","","Recalculate the driveways of some buildings after map …","Recalculate the driveways of some parking lots after map …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Produces an md5sum of the contents of the edits.","","Get the human-friendly of these edits. If they have a …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Load map edits from the given JSON bytes. Strip out any …","Load map edits from a JSON file. Strip out any commands …","If false, adjacent roads with the same AccessRestrictions …","","","","","","","","","","","","Some edits are included in the game by default, in …","","","","","","","","","","","","","Encode the edits in a permanent format, referring to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","When the PermanentMapEdits format changes, add a …","","","","","","","","","","","","","","","","MapEdits are converted to this before serializing. …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the human-friendly of these edits. If they have a …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Transform permanent edits to MapEdits, looking up the map …","Transform permanent edits to MapEdits, looking up the map …","","If false, adjacent roads with the same AccessRestrictions …","Edits without these are player generated.","The link is optional even for proposals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Options for converting RawMaps to Maps.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Preserve all OSM tags for buildings, increasing the final …","Snap points to an exact Position along the nearest lane. …","","Should contraction hierarchies for pathfinding be built? …","","","","The various traffic signal generators live in the traffic …","","Adjust the path to start on the polygon’s border, not …","","","","","","","Look for roads underneath bridges, then lower their …","","","Finalize importing of buildings, mostly by matching them …","","","Take in parking lots from OSM and all parking aisle roads. …","Returns (driveway_line, driving_pos, sidewalk_line, …","","","","","","","","Applies a bunch of heuristics to a single intersection, …","","","","","","","Simple second-pass after generating all signals. Find …","","","","","","","","Create a traffic signal which has a stage that is: …","","","","Build stages. First find roads that are straight across, …","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Generate all driving and walking turns at an intersection, …","","","","Ideally, we want every incoming lane to lead to at least …","","Filter out crosswalks on really short roads. In reality, …","","","Looks at all sidewalks (or lack thereof) in …","","","","","","","","","","","","Public transit stops and routes.","","Zones and AccessRestrictions are used to model things like:","","Areas are just used for drawing.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The importing process also automatically creates some …","","","","","","","","","","","","","","","","","A block is defined by a perimeter that traces along the …","A sequence of roads in order, beginning and ending at the …","","","","","Assign each perimeter one of <code>num_colors</code>, such that no two …","","","","","","If the perimeter follows any dead-end roads, “collapse”…","Does this perimeter completely enclose the other?","","","This calculates all single block perimeters for the entire …","Blockfinding is specialized for the LTN tool, so …","Shrinks or expands the perimeter by tracing the opposite …","","Returns the argument unchanged.","Returns the argument unchanged.","These roads exist entirely within the perimeter","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Try to merge all given perimeters. If successful, only one …","Looks for perimeters that’re completely surrounded by …","Consider the perimeters as a graph, with adjacency …","","The polygon covers the interior of the block.","Restore the first=last invariant. Methods may temporarily …","Should we reverse one perimeter to match the winding order?","","","","Starting at any lane, snap to the nearest side of that …","","","","","","","","Try to merge two blocks. Returns true if this is …","","","A perimeter has the first and last road matching up, but …","","","","A building has connections to the road and sidewalk, may …","","","An estimated number of workers","","Represent no parking as Private(0, false).","(Spots, explicitly tagged as a garage)","(Name, spots)","","An estimated number of residents, workers","","","Returns (biking position, sidewalk position). Could fail …","","","","","","","","","","","","","","","","","","","","","","","Goes from building to sidewalk","The polyline goes from the building to the driving position","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Does this building contain any amenity matching the …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Where a text label should be centered to have the best …","","","","","","","Depending on options while importing, these might be …","","","","","","","","","The building’s connection for any agent can change based …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An intersection connects roads. Most have &gt;2 roads and are …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Strict for bikes. If there are bike lanes, not allowed to …","","","","Return all incoming roads to an intersection, sorted by …","Higher numbers get drawn on top","","","Note that a lane may belong to both incoming_lanes and …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Does this intersection connect to only a single driveable …","Ignoring mode of travel, is this intersection only …","Does this intersection only connect two road segments? …","","","","","","","","Was a short road adjacent to this intersection merged?","","","","","","","This needs to be in clockwise orientation, or later …","","","","","","","","","","","","","Don’t call for SharedSidewalkCorners","","","","","","Two lanes/roads share both endpoints, because they both …","","A road segment is broken down into individual lanes, which …","A lane is identified by its parent road and its position, …","Two lanes/roads don’t have any common endpoints","Two lanes/roads share one endpoint","From some manually audited cases in Seattle, the length of …","","","","","","","","","","","","","","","","","","","{Cars, bikes} trying to start or end here might not be …","","","","pt2 will be endpoint","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the set of allowed turn types, based on individual …","This does the reasonable thing for the leftmost and …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is cheaper to store than a MovementID. It simply …","A Movement groups all turns from one road to another, …","A movement is like a turn, but with less detail – it …","","","","","","","","","","","","","","","","","Could be a Crosswalk or UnmarkedCrossing","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","The “overall” path of movement, aka, an “average” …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Polyline points FROM intersection","","","","","","","","","","","","","","","","","","","","Parking lots have some fixed capacity for cars, and are …","","","","","","","","","","","","","","","Goes from the lot to the driving lane","Guaranteed to be at least 7m (MAX_CAR_LENGTH + a little …","","","If we can’t render all spots (maybe a lot with no aisles …","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Lot to sidewalk","","The middle of the “T”, pointing towards the parking …","","","","","","","","","","","","","","","","A Road represents a segment between exactly two …","","","See https://wiki.openstreetmap.org/wiki/Forward_…","","","Some kind of modal filter or barrier this distance along …","","","","","","","","","","","","","The physical center of the road, including sidewalks, …","","","These are ordered from closest to center lane (left-most …","","","","","","","","","","","","","","","","self is ‘from’. (via, to). Only BanTurns.","","Is there a tagged crosswalk near each end of the road?","","","","","","","lane must belong to this road. Offset 0 is the centermost …","Get the DirectedRoadID pointing to the intersection. …","Get the DirectedRoadID pointing from the intersection. …","","","","","","","","","","","Includes off-side","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","This is the FIRST yellow line where the direction of the …","Creates the thick polygon representing one half of the …","","","","","","Returns all lanes located between l1 and l2, exclusive.","","","","","","","Does this directed road have any lanes of a certain type?","","","","","A simple classification of if the directed road is …","","Returns lanes from the “center” going out","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Does either end of this road lead nowhere for cars? …","","Many roads wind up with almost no length, due to their …","","","","","","Strict for bikes. If there are bike lanes, not allowed to …","Invariant: A road must contain at least one child. These …","","Get the only sidewalk or shoulder on this side of the …","","","","","","","Returns the other intersection of this road, panicking if …","","","","","","","[-1.0, 1.0] theoretically, but in practice, about [-0.25, …","","","","","","","","","","","","","","","","","","","","","","Meaningless order","","","","","","","","","","","self is ‘from’","","","","","","Like center_pts, but before any trimming for intersection …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get the priority of a turn according to the stop sign – …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Only roads incoming to the intersection are listed here.","","","","","","","","","","","","","","A traffic signal consists of a sequence of Stages that …","","","","Minimum is the minimum duration, 0 allows cycle to be …","Modifies the fixed timing of all stages, applying either a …","","","","","","","","","","","","","Move crosswalks from stages, adding them to an all-walk as …","Move crosswalks from stages, adding them to an all-walk as …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","How long a full cycle of the signal lasts, assuming no …","","","","","","","","","","","","","","","","","Only call this variant while importing the map, to enforce …","","","","","","","","","","","","","","","Entry i is the path to drive to stop i. The very last …","","","","","","","","","","","","","","","","","","","","","","","These may be on different roads entirely, like for light …","A transit vehicle either vanishes at its last stop or …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","As long as this is unique per road, this value is …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","If false, only buses serve this stop","","","","","","Explicitly store whatever the original was, since this can…","","","","","","","","","","","","Non-empty, times in order for one day when a vehicle …","A transit vehicle spawns at the beginning of this lane. …","","","","","","","","","","","","","","","","","","","","","","","","For stop signs: Can’t currently specify this! For …","A marked zebra crossing, where pedestrians usually have …","","For stop signs: cars can do this without stopping. These …","","The corner where two sidewalks meet. Pedestrians can cross …","","A Turn leads from the end of one Lane to the start of …","Turns are uniquely identified by their (src, dst) lanes …","","","","An unmarked crossing, where pedestrians may cross without …","For stop signs: cars have to stop before doing this turn, …","","","","","","","","","","","","","","","","","","","","","","Only appropriat for pedestrian crossings. The geometry of …","If this turn is a crosswalk over a single road, return …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Is the turn a crosswalk or unmarked crossing?","Penalties for (lane types, lane-changing, slow lane). The …","Is this turn legal, according to turn lane tagging?","Is this turn legal, according to turn restrictions defined …","","","","","src and dst must both belong to parent. No guarantees that …","","","","","","","","","","","","","","","","","","","","","","","","","A contiguous set of roads with access restrictions. This …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Larger number means a bigger road, according to …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Who’s asking for a path?","","","","","","","","","Tuneable parameters for all types of routing.","","","","","Don’t allow movements between these roads at all. Only …","Don’t allow crossing these roads at all. Only affects …","","","","","","","","","","","Can an agent use a lane? There are some subtle exceptions …","Can an agent use a road in either direction? There are …","","","","","","","","","","","","","","","","","","Strict for bikes. If there are bike lanes, not allowed to …","","","Returns the argument unchanged.","Returns the argument unchanged.","Not bijective, but this is the best guess of user intent","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","When crossing an arterial or highway road, multiply the …","","Some helpers for working with fast_paths.","","","","","","","","","","","","","","","","","To deal with complicated intersections and short roads in …","","","","Structures related to the new road-based pathfinding …","","Pathfinding for cars, bikes, buses, and trains using …","","","Pathfinding for pedestrians, as well as figuring out if …","Heavily penalize crossing into an access-restricted zone …","","","","","","","","This operates on raw IDs and costs; no type safety. The …","","","","","","Returns (path cost, node IDs in path)","Returns (path cost, node IDs in path). Input is pairs of …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","A bidirectional mapping between fast_paths NodeId and some …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Call this after filling out the input graph, right before …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Create a slow-to-build but fast-to-use contraction …","Create a fast-to-build but slow-to-use Dijkstra-based …","Create a fast-to-build but slow-to-use Dijkstra-based …","","For callers needing to request paths with a variety of …","When pathfinding with different <code>RoutingParams</code> is done, a …","","","","","","","","","","","","","","","","","","","Quickly create an invalid pathfinder, just to make borrow …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a new Pathfinder with custom routing params that …","Create a new Pathfinder with custom routing params that …","Create a new Pathfinder with custom routing params that …","","Finds a path from a start to an end for a certain type of …","Finds a path from a start to an end for a certain type of …","New pathfinders will be created as-needed using Dijkstra’…","Finds a path from a start to an end for a certain type of …","","","","","","","","","","","","","","","","","","","","This only applies to VehiclePathfinder; walking through …","","A sequence of movements through a cluster of …","Find all other traffic signals “close” to one. Ignore …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Group lane-based uber-turns into road-based UberTurnV2s.","","","","(legal, illegal)","","","","","","","","","","","","","","","","","","","","","","Sidewalks only!","","Original direction","","","","","","","","","","","Determines the start and end position to travel between …","Create a request from the beginning of one road to the end …","","","","","","","","","","","","","","","","","","","","","","Group similar requests together, returning the number of …","","","","Once we finish this PathStep, how much distance will be …","","","","","","","Estimate how long following the path will take in the best …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","If the agent following this path will initially block some …","","The original PathRequest used to produce this path. If the …","","","Returns the total elevation (gain, loss) experienced over …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","The caller must pass in two valid positions for the …","The single definitive place to determine how fast somebody …","The single definitive place to determine how fast somebody …","","Trusting the caller to do this in valid ways.","","","","","","","","","","","","","","","","","","","","","Traces along the path from its originally requested start. …","Traces along the path from a specified distance along the …","Draws the thickened path, matching entire roads. Ignores …","","","","","","","","","","","","","","The caller must pass in two valid positions for the …","","","","The caller must pass in two valid sidewalk positions. This …","","","","","Original direction","Opposite direction, sidewalks only","","","One step along a path.","A path between two endpoints for a particular mode. This …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Vehicle implementations often just calculate the sequence …","The time needed to perform this path. This time is not a …","The original PathRequest used to produce this path.","All steps in this path.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Transform a sequence of roads representing a path into the …","","","","","","","","","Returns polygons covering the entire path. Ignores the path…","Draws the thickened path, matching entire roads. Ignores …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","This returns the pathfinding cost of crossing one road and …","","","","","","","false is src_i, true is dst_i","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Attempt the pathfinding and see if we should ride public …","","","","","","","","","","","","","","","","Represents a specific point some distance along a lane.","Either a lane or a turn, where most movement happens.","","","","","","","","","","","","","","","","","","","","","","","Given a position along a lane, find the equivalent …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Return the center-line geometry of this lane or turn.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","The single definitive place to determine how fast somebody …","The single definitive place to determine how fast somebody …","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[28,49,20,43,67,37,45,0,167,0,0,0,0,0,27,31,6,139,6,6,6,63,2,0,30,129,2,0,0,0,0,2,63,85,85,6,63,6,6,39,39,39,39,6,0,59,76,0,0,2,30,167,164,167,164,0,0,6,78,6,25,0,0,2,0,0,0,0,0,76,6,6,140,25,6,2,27,6,6,0,0,0,0,24,25,0,164,165,0,0,0,6,4,136,78,6,2,0,0,0,0,0,6,0,167,0,0,0,85,129,0,129,31,0,0,24,2,0,0,0,0,0,0,0,0,0,0,0,63,0,0,6,25,6,6,0,6,125,139,125,0,6,76,76,0,4,136,78,0,0,0,0,0,0,6,2,78,2,6,2,0,2,0,0,30,59,78,25,24,6,6,30,59,63,0,0,0,0,0,0,164,165,0,0,0,78,0,30,6,78,140,24,139,0,69,21,26,17,51,68,6,8,8,8,8,8,8,8,8,8,8,8,8,8,135,8,9,51,23,132,8,50,88,8,18,84,84,84,84,21,66,84,29,60,8,51,82,137,23,6,24,2,25,26,27,28,29,4,30,18,31,8,23,6,24,2,25,26,27,28,29,4,30,18,31,8,88,8,8,8,8,66,84,8,160,66,66,6,21,17,17,17,14,14,26,0,8,23,6,24,2,25,26,27,28,29,4,30,18,31,8,23,6,24,2,25,26,27,28,29,4,30,18,31,8,6,2,25,27,28,18,31,100,14,18,21,8,0,9,83,26,8,82,64,21,21,82,29,17,17,2,23,24,2,25,26,27,28,29,4,30,18,31,8,26,60,62,86,88,51,68,60,84,68,75,29,61,60,21,8,0,8,8,100,14,11,9,71,6,24,2,25,26,27,28,4,30,18,31,6,24,2,25,27,28,30,18,31,8,68,8,29,8,8,8,8,8,23,6,24,2,25,26,27,27,28,29,4,30,18,18,31,23,6,24,2,25,26,27,28,29,4,30,18,31,8,64,2,2,6,132,73,28,8,8,8,8,8,8,8,8,8,8,24,2,25,27,30,18,31,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,75,71,8,8,8,8,8,18,24,2,25,27,30,18,31,131,18,18,50,51,11,60,132,68,21,72,74,75,71,73,131,70,11,8,29,123,11,8,23,6,24,2,25,26,27,28,29,4,30,18,31,8,2,75,8,2,6,35,8,51,86,60,138,60,21,69,28,51,8,71,26,84,0,0,8,100,8,26,8,8,8,8,8,8,8,8,8,8,8,163,132,137,29,100,14,11,8,8,17,11,8,138,8,8,8,88,51,75,8,23,2,26,28,18,28,18,31,8,0,42,74,26,27,51,11,21,82,71,14,14,0,29,50,68,23,50,51,21,18,18,11,66,64,61,51,8,6,2,25,27,28,18,31,161,0,8,8,8,8,8,8,21,124,50,124,51,11,68,100,14,100,14,117,8,8,8,83,137,42,62,127,70,8,8,123,11,72,8,71,8,8,8,8,23,24,2,25,26,27,28,29,4,30,18,31,8,2,71,8,127,68,51,68,75,8,8,35,71,69,21,68,61,60,21,117,74,71,9,82,83,8,71,29,2,64,2,23,6,24,2,25,26,27,28,29,4,30,18,31,8,6,27,18,26,82,8,66,8,21,8,0,8,23,6,24,2,25,26,27,28,29,4,30,18,31,8,23,6,24,2,25,26,27,28,29,4,30,18,31,8,29,21,132,73,11,23,6,24,2,25,26,27,28,29,4,30,18,31,8,26,26,163,82,83,28,84,8,21,100,23,6,24,2,25,26,27,28,29,4,30,18,31,8,66,66,26,60,117,8,21,171,172,171,173,173,174,175,176,177,178,175,177,176,178,175,177,176,178,179,180,181,182,183,182,183,184,185,186,187,188,189,190,191,192,193,193,193,194,195,0,0,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,89,89,89,0,93,93,93,0,0,0,0,0,92,89,94,93,89,94,93,89,93,89,93,93,89,94,93,94,89,93,93,89,94,93,89,94,93,0,89,93,89,94,93,89,93,89,93,89,94,93,89,94,93,94,89,94,93,89,93,89,93,89,94,93,89,94,93,89,94,93,0,89,94,93,0,92,196,197,198,199,200,201,199,0,0,0,92,92,96,92,96,92,92,96,92,96,92,92,96,96,92,96,92,96,96,96,96,92,92,96,92,96,92,96,92,96,92,58,39,39,39,39,59,0,0,0,0,0,0,0,59,59,69,17,39,17,14,59,69,58,39,17,14,59,69,58,39,17,14,17,17,14,14,14,59,69,58,39,14,59,69,58,39,14,0,14,14,17,17,39,69,69,14,14,59,69,58,39,0,0,14,59,69,58,39,17,14,59,69,58,39,14,69,14,17,14,59,69,58,39,69,14,14,14,17,0,14,59,69,58,39,14,14,14,0,14,14,0,0,14,69,69,14,59,69,58,39,39,14,59,58,17,14,59,69,58,39,17,14,59,69,58,39,17,14,59,69,58,39,39,14,17,14,59,69,58,39,175,176,177,178,175,177,176,178,175,177,176,178,179,180,0,0,0,0,0,103,104,105,106,107,103,104,105,106,107,103,104,105,106,107,103,105,0,0,0,0,0,0,0,0,0,0,0,0,103,104,105,106,107,103,104,105,106,107,104,106,107,103,103,104,105,106,107,105,103,104,106,107,103,103,106,107,104,103,0,103,104,105,106,107,103,104,105,106,107,103,104,105,106,107,0,103,104,105,106,107,0,99,99,99,99,101,0,0,0,0,0,101,101,100,101,102,99,100,101,102,99,100,101,102,99,100,101,102,99,100,100,101,102,99,100,100,101,102,99,100,100,101,102,99,99,100,100,100,100,100,100,100,101,102,99,100,101,102,99,100,101,102,99,100,101,102,99,102,100,101,102,99,100,100,101,102,99,101,102,202,203,204,205,203,204,202,205,203,204,202,205,206,207,0,35,35,0,0,35,35,35,35,35,35,35,35,0,0,35,0,0,35,0,0,0,35,35,0,35,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,119,119,119,0,0,0,119,119,119,119,119,119,119,119,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,0,0,50,49,50,49,50,49,50,49,50,49,49,50,49,49,49,49,50,49,50,49,49,50,49,50,49,50,50,49,50,49,50,49,50,49,49,50,49,50,49,50,49,50,0,0,124,123,124,123,123,123,124,123,124,123,123,123,124,123,123,123,123,123,124,123,123,124,123,123,123,123,124,124,123,123,123,124,123,123,123,124,123,124,123,124,123,123,124,123,123,124,123,20,0,0,0,76,76,0,125,125,76,76,51,51,51,51,20,51,125,76,20,51,125,76,20,51,125,76,20,51,125,76,20,20,51,125,76,51,51,20,125,20,20,20,51,125,76,20,51,125,76,20,51,76,20,51,20,51,125,76,51,51,51,20,125,51,51,51,51,20,51,20,51,125,76,51,51,0,20,51,125,76,20,20,51,125,76,20,51,125,76,20,51,125,76,20,51,125,76,171,172,171,173,173,182,183,182,183,43,0,0,43,11,43,11,43,11,43,11,43,43,11,11,43,43,11,43,43,11,43,11,43,11,11,11,11,11,11,11,43,11,11,11,43,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,43,11,11,43,11,11,43,11,11,11,43,11,43,43,11,43,11,11,11,43,11,43,11,129,0,0,0,129,129,0,60,42,60,129,42,60,129,42,60,42,60,42,60,42,42,60,60,60,60,60,42,42,60,60,42,129,42,60,60,42,42,60,42,60,129,60,42,60,60,60,42,60,60,42,60,129,60,60,60,60,60,60,60,60,60,60,60,60,60,60,42,129,129,60,42,0,42,42,42,60,60,42,60,42,42,60,129,42,60,129,42,60,129,42,60,129,60,174,0,0,0,132,64,131,132,64,131,132,64,131,132,64,131,132,64,131,132,64,64,131,132,64,131,132,64,131,0,64,131,132,132,64,131,132,64,64,132,64,131,64,131,131,132,131,64,131,132,132,0,64,131,132,64,64,131,64,131,132,132,64,64,131,132,64,64,131,132,64,131,132,132,64,131,132,64,131,132,67,0,0,68,67,68,67,68,68,67,68,67,68,67,67,68,68,68,67,67,68,67,67,67,68,67,67,68,67,68,67,68,67,68,67,68,68,68,68,67,68,67,67,68,67,68,67,68,67,68,37,0,136,136,0,0,0,0,21,21,21,37,62,136,127,21,37,62,136,127,21,37,37,21,21,21,21,37,62,136,127,21,37,62,136,127,21,37,62,136,127,21,21,21,21,37,62,136,127,21,62,21,21,21,62,21,37,62,136,127,37,62,136,127,21,37,37,62,62,136,127,21,37,62,136,127,21,21,21,21,21,37,62,136,127,21,21,127,21,21,21,21,62,37,62,136,127,21,21,21,37,62,136,127,21,21,21,21,21,21,21,21,21,21,62,21,21,62,37,62,127,21,21,21,21,127,21,37,62,136,127,21,21,62,127,37,62,136,127,21,21,127,21,21,62,21,37,62,136,127,21,37,62,21,37,62,136,127,21,37,62,136,127,21,21,37,62,136,127,21,21,37,62,136,127,21,21,0,0,72,138,72,138,72,138,72,138,72,138,72,138,72,72,138,72,138,72,72,72,138,138,138,72,138,72,72,72,138,72,138,72,138,72,138,72,138,72,138,0,0,140,0,0,140,74,74,117,140,74,117,140,74,117,140,74,117,140,74,74,117,74,117,140,117,117,74,117,140,74,74,117,140,74,117,140,74,74,117,117,74,74,74,74,117,140,117,74,74,117,140,74,117,74,117,74,117,140,74,140,117,74,74,117,140,74,117,140,74,117,140,74,117,140,74,74,74,117,140,117,192,193,193,193,45,0,0,0,0,71,71,70,45,75,71,70,45,75,71,70,45,75,71,70,45,75,71,70,45,70,45,75,71,75,71,70,45,75,70,45,70,70,45,45,75,71,70,45,75,71,70,45,75,71,70,45,75,71,70,70,45,75,71,75,71,75,70,45,75,71,70,45,71,70,71,70,45,75,71,71,75,71,71,71,70,45,75,71,70,45,70,45,75,71,70,45,75,71,70,45,75,71,70,45,75,71,139,78,78,139,78,78,78,0,0,0,0,78,78,139,73,73,61,78,139,73,61,78,139,73,61,78,139,73,61,78,139,73,61,78,73,73,73,61,78,139,73,61,61,78,139,73,61,78,61,61,78,139,73,61,78,139,73,73,61,61,73,61,78,139,73,73,61,73,61,61,78,139,78,73,73,73,61,78,139,73,61,61,61,78,139,73,61,61,78,139,73,61,78,139,73,73,61,78,139,73,61,78,139,73,0,0,135,137,135,137,135,137,135,137,135,137,135,137,135,137,0,135,137,135,137,135,137,137,137,135,137,135,137,135,137,135,137,135,137,135,137,135,137,135,137,33,142,143,126,0,0,0,126,126,0,0,41,0,0,0,0,0,0,0,41,0,0,0,41,0,126,33,142,143,41,126,33,142,143,41,126,33,142,143,41,126,33,142,143,41,126,33,142,143,41,33,142,143,41,126,126,33,142,143,41,126,33,142,143,41,126,33,33,142,142,143,143,41,41,126,33,142,143,41,126,33,142,143,41,33,142,143,41,41,126,33,142,143,41,33,142,143,41,126,33,142,143,41,33,142,143,41,126,33,142,143,41,33,142,143,41,126,33,142,143,41,126,33,142,143,41,126,33,142,143,41,126,33,142,143,41,208,209,210,63,63,63,0,0,0,0,0,0,0,0,0,0,63,0,63,0,63,84,84,84,84,84,63,63,63,63,84,63,84,84,63,63,63,84,63,84,63,84,63,63,84,84,0,63,63,63,63,84,63,63,63,84,63,84,63,63,84,84,84,0,63,63,0,0,63,63,84,63,63,84,63,84,63,84,63,84,0,84,0,0,0,0,0,63,84,0,0,149,148,149,0,149,148,148,0,148,149,148,149,148,148,148,148,148,149,148,149,148,149,148,148,148,148,148,149,148,149,148,149,148,149,148,211,212,213,213,0,0,156,157,156,157,156,156,157,0,156,157,156,156,156,156,157,156,157,156,156,156,156,156,156,157,156,157,156,157,156,157,85,85,85,0,0,0,66,66,66,160,66,85,160,66,85,66,160,66,66,66,85,66,85,66,66,85,66,160,66,85,160,66,85,160,66,66,66,66,66,66,66,160,66,66,66,66,85,66,160,66,85,160,66,85,160,66,85,160,66,85,66,66,0,0,0,163,163,161,162,163,161,162,161,162,161,162,162,161,162,161,162,161,162,162,161,162,163,0,161,162,163,161,162,161,163,161,162,163,163,161,162,163,162,161,162,161,162,161,162,0,163,161,162,163,161,162,163,161,162,163,163,161,162,164,164,164,0,0,0,164,82,82,9,164,164,164,9,9,82,164,82,9,164,82,9,164,82,9,164,82,9,164,9,82,82,82,82,82,82,9,164,82,9,82,9,164,82,9,164,9,82,164,164,82,9,9,164,82,9,82,164,82,82,82,82,164,164,82,9,82,82,82,82,82,9,164,164,82,82,164,82,9,82,82,82,164,82,164,82,9,82,9,82,164,82,9,9,82,82,82,82,82,164,82,9,164,82,9,164,82,9,82,0,0,0,9,164,82,9,9,184,185,186,187,167,167,167,167,0,0,167,83,167,83,167,83,167,83,83,83,167,83,0,167,83,167,83,83,83,83,83,167,83,83,83,83,83,167,83,83,167,83,83,83,167,83,167,83,167,83,83,167,83,188,189,190,191,0,169,169,0,168,168,168,169,168,169,168,169,168,169,169,168,168,169,168,168,169,169,169,168,169,169,169,168,169,0,169,168,168,168,169,168,168,169,168,169,168,169,168,169,168,169,168,0,168,169,214,215,93,93,93,0,0,170,170,170,170,170,170,170,170,170,170,170,0,170,170,0,170,170,170,170,0,170,170,170,170,170,0,199,200,201,199,165,0,0,0,0,165,165,165,0,86,165,86,165,86,86,165,86,165,86,165,86,165,86,86,86,86,165,86,86,86,165,86,86,165,165,86,165,165,165,165,165,86,165,86,86,165,165,165,165,86,86,165,86,86,165,86,86,86,165,86,86,165,86,165,86,165,86,165,86,165,86,165,0,194,195],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,3,4],5],0,0,0,[[],[[1,[6,7]]]],[8,1],[8,1],[[8,9],10],[8,[[1,[11]]]],[8,1],[8,12],[8,[[1,[11]]]],[8,1],[8,1],[8,1],[8,13],[8,12],[8,1],0,[[],8],0,0,0,0,[[8,14,15,16],17],0,0,0,[18,19],0,0,0,0,0,0,0,0,0,[[],8],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[8,20],21],0,0,0,0,0,0,0,[22,[[10,[6]]]],0,0,0,0,0,0,[[19,22,22,22,22,15]],0,[8],[23,23],[6,6],[24,24],[2,2],[25,25],[26,26],[27,27],[28,28],[29,29],[4,4],[30,30],[18,18],[31,31],[8,8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,6],32],[[2,2],32],[[25,25],32],[[27,27],32],[[28,28],32],[[18,18],32],[[31,31],32],0,0,[[18,18],33],0,0,0,0,0,[[22,22],[[1,[26,7]]]],[[34,35,16],8],0,0,0,0,0,[4,29],0,0,[2,22],[[],[[36,[23]]]],[[],[[36,[24]]]],[[],[[36,[2]]]],[[],[[36,[25]]]],[[],[[36,[26]]]],[[],[[36,[27]]]],[[],[[36,[28]]]],[[],[[36,[29]]]],[[],[[36,[4]]]],[[],[[36,[30]]]],[[],[[36,[18]]]],[[],[[36,[31]]]],[[],[[36,[8]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[8,37,38],39],0,0,0,0,0,0,0,0,[[6,6],15],[[24,24],15],[[2,2],15],[[25,25],15],[[26,26],15],[[27,27],15],[[28,28],15],[[4,4],15],[[30,30],15],[[18,18],15],[[31,31],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[8,40],0,[[8,41],[[10,[20]]]],0,[[8,20],42],[[8,33],[[44,[43]]]],[[8,18],[[44,[37]]]],[[8,43,43],[[10,[37]]]],[[8,22],[[10,[45]]]],[[23,46],[[36,[47]]]],[[6,46],[[36,[47]]]],[[24,46],[[36,[47]]]],[[2,46],[[36,[47]]]],[[25,46],[[36,[47]]]],[[26,46],[[36,[47]]]],[[27,46],[[36,[47]]]],[[27,46],[[36,[47]]]],[[28,46],[[36,[47]]]],[[29,46],[[36,[47]]]],[[4,46],[[36,[47]]]],[[30,46],[[36,[47]]]],[[18,46],[[36,[47]]]],[[18,46],[[36,[47]]]],[[31,46],[[36,[47]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[48,2],[22,[[10,[2]]]],[22,[[36,[6]]]],0,0,[[28,[10,[19]]],19],[[8,49],50],[[8,20],51],[8,52],[8,53],[[8,37],54],[8,55],[8,29],[8,14],[8,5],[8,56],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[8,43],11],[[8,43],58],[[8,43],59],[[8,42],60],[8,[[54,[19]]]],[[8,61],10],[[8,62,63],[[1,[64]]]],[8,65],[[8,37],[[54,[37]]]],[[8,42],1],[[8,42,63],1],[[8,42],21],[8,66],[[8,67],68],[[8,37],21],[[8,37],69],[[8,70],[[1,[71]]]],[[8,43],72],[[8,61],73],[[8,45],71],[[8,43],74],[[8,22],[[10,[71]]]],[[8,70],75],[[8,42,42,43],[[10,[73]]]],[[8,42,63],[[1,[73]]]],[[8,42],[[1,[73]]]],[[8,42],[[1,[73]]]],0,0,0,[[8,24,52,3]],[[8,20,76]],[[8,5]],[[8,20,5]],[[8,45,[1,[77]]]],[[18,18],15],[24],[2],[25],[27],[30],[18],[31],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[8,74]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,15],0,[[8,37,37,78],15],[2,15],[[],79],0,[8],0,0,0,0,0,0,0,[28,[[1,[19,7]]]],0,[[19,16],8],0,0,0,0,0,[[8,16]],0,[8,80],[[1,[10,[25]],4]],[[8,49],[[10,[50]]]],[[8,20],[[10,[51]]]],[[8,43],[[10,[11]]]],[[8,42],[[10,[60]]]],[[8,67],[[10,[68]]]],[[8,37],[[10,[21]]]],[[8,43],[[10,[72]]]],[[8,61],[[10,[73]]]],[[8,45],[[10,[71]]]],[[8,43],[[10,[74]]]],[[8,70],[[10,[75]]]],0,0,0,0,0,0,0,[[8,16]],[[8,16]],0,0,[[8,14,16],17],0,[[8,42],60],[[8,37],21],[[8,61],73],0,0,0,0,0,[[2,2],15],[[26,26],15],[[28,28],15],[[18,18],15],[3,[[10,[28]]]],[81,18],[22,[[10,[31]]]],[8,14],0,0,0,[[],[[10,[27]]]],[27,27],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[18,33],33],0,0,0,0,0,0,[[6,6],[[10,[32]]]],[[2,2],[[10,[32]]]],[[25,25],[[10,[32]]]],[[27,27],[[10,[32]]]],[[28,28],[[10,[32]]]],[[18,18],[[10,[32]]]],[[31,31],[[10,[32]]]],0,0,[[8,9],[[44,[82]]]],[[8,9],[[44,[83]]]],[[8,9,84,85],[[44,[83]]]],[[8,9,84,85],[[44,[82]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[8,16]],[[8,16]],[8],0,0,0,0,0,0,[[8,37],54],0,0,0,0,0,0,[8,84],0,[8],[8],[23,36],[24,36],[2,36],[25,36],[26,36],[27,36],[28,36],[29,36],[4,36],[30,36],[18,36],[31,36],[8,36],[2,22],0,[[8,86,86],10],0,0,0,0,0,[[8,43,43],10],[[8,43,43,63],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2,15],0,[2,48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[1,4]],0,0,0,0,0,0,0,[[8,14,16]],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],0,0,0,0,0,[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[2,80],[[2,3],[[1,[7]]]],0,0,0,[[],28],0,[8,15],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[[],[[36,[88]]]],0,[[]],[8,88],[[55,16],88],[[]],0,[88,36],[[],36],[[],36],[[],87],[[]],0,0,0,0,0,0,0,0,0,0,[[8,[1,[89]],90,63],[[91,[20,90]]]],[[8,[1,[89]],90,92],[[91,[20,90]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[89,89],[93,93],[[]],[[]],[[86,8],93],[[89,89],32],[[94,94],32],[[93,93],32],0,[[],[[36,[89]]]],[[],[[36,[93]]]],[[86,8],93],[[89,89],15],[[94,94],15],[[93,93],15],[[],15],[[],15],[[],15],[[8,63]],[[89,46],95],[[93,46],95],[[]],[[]],[[]],[[],57],[[],57],[89],[93],[[]],[[]],[[]],[[89,89],15],[[94,94],15],[[93,93],15],0,[[89,89],[[10,[32]]]],[[94,94],[[10,[32]]]],[[93,93],[[10,[32]]]],[89,36],[93,36],[[]],[[]],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],87],[[],87],[[],87],[[62,64,63,84,8],[[10,[90]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[8,[1,[89]],90,92],[[91,[20,90]]]],0,[[]],[[]],[[]],[[]],[92,92],[[]],[[96,96],32],[[],1],0,[[],92],[[],97],[[96,96],15],[[],15],[[]],[[]],[[]],[[]],[[96,96],15],0,[[96,96],[[10,[32]]]],[[]],[[],36],[[],36],[[],36],[[],36],[[],87],[[],87],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[39,17,8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[14,8]],0,0,0,0,[14,14],[59,59],[69,69],[58,58],[39,39],[[]],[[]],[[]],[[]],[[]],0,0,[[14,8]],[[],14],0,0,[[39,8]],[[],[[36,[69]]]],[[69,69],[[1,[19]]]],0,[[14,14],15],[[59,59],15],[[69,69],15],[[58,58],15],[[39,39],15],[[8,[1,[20]],17]],[[8,[1,[67]]]],[[14,46],95],[[59,46],95],[[69,46],95],[[58,46],95],[[39,46],95],[[]],[[]],[[]],[[]],[[]],[[]],[[14,8],19],[[21,29],69],[14,22],[[]],[[]],[[]],[[]],[[]],[[]],0,[[8,[1,[98]]],[[44,[14]]]],[[8,19,16],[[44,[14]]]],0,0,[[8,37,[1,[26]],17]],[[14,14],15],[[59,59],15],[[69,69],15],[[58,58],15],[[39,39],15],[[],14],0,0,0,0,0,[[8,37,80,43],[[1,[37]]]],[[43,8,17]],[[14,8]],[69,36],0,[[]],[[]],[[]],[[]],[[]],[[39,8],99],[[14,8],100],[[59,8],101],[[58,8],102],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[39,39],[[14,8]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[36,[103]]]],[[],[[36,[104]]]],[[],[[36,[105]]]],[[],[[36,[106]]]],[[],[[36,[107]]]],0,0,[108],[108],[108],[108],[[108,8],44],[108],[108],[108],[[108,8],44],[108],[108],[108],[[103,46],95],[[104,46],95],[[105,46],95],[[106,46],95],[[107,46],95],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,[[103,8],44],0,0,0,0,0,0,0,0,0,[108],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],87],[[],87],[[],87],[[],87],[[],87],[[108,8],[[44,[100]]]],[[]],[[]],[[]],[[]],[[]],[108],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[100,100],[101,101],[102,102],[99,99],[[]],[[]],[[]],[[]],0,[[],[[36,[100]]]],[[],[[36,[101]]]],[[],[[36,[102]]]],[[],[[36,[99]]]],0,[[]],[[]],[[]],[[]],[100,22],[[]],[[]],[[]],[[]],[[99,8],[[44,[39]]]],[[100,8],[[44,[14]]]],[[100,8],14],0,0,0,0,[100,36],[101,36],[102,36],[99,36],[[]],[[]],[[]],[[]],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],0,[[],87],[[],87],[[],87],[[],87],0,[[]],[[]],[[]],[[]],[[101,43,8],[[44,[59]]]],[[102,43,8],[[44,[58]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,0,[[],109],[35,35],[[]],[[],35],[[]],[110,35],[[]],0,[[8,[112,[111]],38,80,80,16],[[91,[111,86]]]],0,0,0,[113,[[1,[80]]]],[[]],0,0,[[52,114],114],[[],36],[[],36],0,[[],87],[[]],0,[[1,53,16]],[[3,115,115,116],76],[[3,42,8],19],[[13,8,15,16],[[1,[51]]]],[52,1],[[52,114],15],[[8,16],[[1,[68]]]],[[111,52,91,8],44],0,0,[11,74],[[8,11],[[10,[74]]]],[[74,11]],[[8,11],[[10,[74]]]],[[8,11],[[10,[74]]]],[[8,43,15],1],[11,74],[11,[[10,[74]]]],0,[[74,29,11,[1,[1]]]],[43,74],[[8,11],74],[8],[[8,11],[[10,[74]]]],[[74,117]],[[11,8],[[10,[74]]]],[[117,11],10],[[74,11]],[74],[[11,8],[[10,[74]]]],[[8,11],[[10,[74]]]],[[74,11],[[10,[74]]]],[11],[37,[[1,[64]]]],[11,[[10,[74]]]],[[74,11],[[10,[74]]]],[[64,64],117],[[37,37,1],[[10,[64]]]],[[]],[[11,8],[[10,[74]]]],0,[[]],[[]],0,0,[[118,8,91,119],44],[[120,91,91,8],44],[[8,34,16]],[[]],[[]],[8,119],0,0,[[],36],[[],36],[[],87],[[]],[[60,60,11],[[44,[113]]]],[[[1,[73]]],[[1,[73]]]],[[11,8],[[10,[[91,[78]]]]]],[[8,11],[[1,[73]]]],[[11,8],[[1,[73]]]],[[8,[1,[73]],78],[[1,[73]]]],[[121,121],78],[[11,8],44],[[122,122],113],[[[1,[73]],8,11],[[1,[73]]]],[[11,60,60],113],[[11,60,60],113],[[8,11],[[1,[73]]]],[[43,42,42],61],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[49,49],[50,50],[[]],[[]],[[49,49],32],[[],[[36,[49]]]],[[],[[36,[50]]]],[[49,49],15],[[],15],[[49,46],95],[[49,46],95],[[50,46],95],[[]],[[]],[[],57],[49],0,[[]],[[]],[[49,49],15],0,0,[[49,49],[[10,[32]]]],0,[49,36],[50,36],[[]],[[]],[[],19],[[],36],[[],36],[[],36],[[],36],[[],87],[[],87],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[5,[[10,[[1,[5]]]]]],[[123,8],44],[124,124],[123,123],[[]],[[]],[123],[[123,123],15],[[],[[36,[124]]]],[[],[[36,[123]]]],[8,[[1,[123]]]],[8,[[112,[37]]]],[123,123],[[123,46],95],[[]],[[]],0,[[]],[[]],[[8,[1,[123]],15,15],[[1,[123]]]],[[8,[1,[123]]],[[1,[123]]]],[[[1,[123]],38],[[1,[[1,[123]]]]]],0,0,[123],[[123,8,123],15],0,[124,36],[123,36],[[8,42,112],[[44,[123]]]],[[123,8],[[44,[124]]]],[[]],[[]],[[],36],[[],36],[[],36],[[],36],[[123,8,123,15,15],15],[[],87],[[],87],[123],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[51,8],10],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20,20],[51,51],[125,125],[76,76],[[]],[[]],[[]],[[]],[[20,20],32],[[],[[36,[20]]]],[[],[[36,[51]]]],[[],[[36,[125]]]],[[],[[36,[76]]]],0,[[51,8],10],[[20,20],15],[[125,125],15],[[],15],[[20,46],95],[[20,46],95],[[51,46],95],[[125,46],95],[[76,46],95],[[]],[[]],[[]],[[]],[[],57],[[51,6],15],[76,15],[20],0,[[]],[[]],[[]],[[]],0,0,0,[[20,20],15],[[125,125],15],[51,5],0,0,0,[[20,20],[[10,[32]]]],0,[20,36],[51,36],[125,36],[76,36],[51,42],0,[[86,8],10],[[]],[[]],[[]],[[]],[[],19],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],87],[[],87],[[],87],[[],87],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[43,43],[11,11],[[]],[[]],[[43,43],32],[[],[[36,[43]]]],[[],[[36,[11]]]],0,[[43,43],15],[[],15],[[11,43,8],[[10,[21]]]],[[43,46],95],[[43,46],95],[[11,46],95],[[]],[[]],[[],57],[[11,8,63],[[1,[42]]]],[[11,8,63],[[1,[42]]]],[[11,8],126],[[11,8],[[1,[127]]]],[[11,8],[[1,[37]]]],[[11,8],[[1,[37]]]],[[11,8],128],[43],0,0,0,[[]],[[]],[11,15],[11,15],[[11,8],15],[[11,8],15],[11,15],[11,15],[[11,8],15],[11,15],[[11,8],15],[11,15],[[11,8],15],[11,15],[11,15],0,0,[[11,[10,[19]],8],19],[[43,43],15],0,0,[[43,43],[[10,[32]]]],0,0,[43,36],[11,36],[[11,8],[[10,[62]]]],[[11,8],[[10,[62]]]],[[]],[[]],[[],19],[[],36],[[],36],[[],36],[[],36],[[11,61]],0,[[],87],[[],87],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[42,42],[60,60],[[]],[[]],[[42,42],32],[[60,60],129],[130,42],[[],[[36,[42]]]],[[],[[36,[60]]]],0,[[60,122],[[10,[80]]]],0,0,[[],42],[42,130],[[60,43],114],[[60,43],122],[[42,42],15],[[129,129],15],[[],15],[60,114],[60,122],[[42,46],95],[[42,46],95],[[60,46],95],[[]],[[]],[[]],[60,62],[[],57],[[60,21,15],[[10,[[54,[78]]]]]],[[60,8],127],[60,52],[42],0,[60,[[1,[43]]]],[[]],[[]],[[]],[60,15],[60,15],[60,15],[60,15],[60,15],[60,15],[60,15],[60,15],[60,15],0,0,[60,114],[60,122],[60,80],[[42,42],15],[[129,129],15],[[],129],[[60,29],5],0,[22,[[1,[78]]]],[[42,42],[[10,[32]]]],0,[42,36],[60,36],0,[[]],[[]],[[],19],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],87],[[],87],[[],87],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[64,64],[131,131],[132,132],[[]],[[]],[[]],[[64,64],32],[[131,131],32],[[132,132],15],0,[[],[[36,[64]]]],[[],[[36,[131]]]],[[],[[36,[132]]]],[[64,64],15],[[131,131],15],[[132,132],15],[[],15],[[],15],[[133,8],[[44,[62]]]],[[64,46],95],[[131,46],95],[[132,46],95],[[43,8],[[13,[64,132]]]],[[]],[[]],[[]],0,[[134,8],[[44,[64]]]],0,[[],57],[[],57],[64],[131],0,0,0,[[]],[[]],[[]],0,[[[1,[113]],62,62],[[44,[113]]]],[[64,64],15],[[131,131],15],[[132,132],15],0,[[64,64],[[10,[32]]]],[[131,131],[[10,[32]]]],[64,36],[131,36],[132,36],[[132,8]],0,[[]],[[]],[[]],[[64,8],134],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],0,[[],87],[[],87],[[],87],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[68,5],[67,67],[68,68],[[]],[[]],[[67,67],32],[[],[[36,[67]]]],[[],[[36,[68]]]],0,0,[[67,67],15],[[],15],0,[[67,46],95],[[67,46],95],[[]],[[]],[[],57],[67],0,[[]],[[]],[[67,67],15],0,[[67,67],[[10,[32]]]],0,[67,36],[68,36],0,0,0,[[]],[[]],[[],19],[[],36],[[],36],[[],36],[[],36],[[],87],[[],87],[[]],[[]],0,0,0,0,0,0,0,0,0,[21,135],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37,[[1,[62]]]],[37],0,[[21,27],1],[21,1],[21,1],[37,37],[62,62],[136,136],[127,127],[21,21],[[]],[[]],[[]],[[]],[[]],[[37,37],32],[[62,62],32],[[136,136],32],[[127,127],32],[[21,21],129],0,0,0,[[],[[36,[37]]]],[[],[[36,[62]]]],[[],[[36,[136]]]],[[],[[36,[127]]]],[[],[[36,[21]]]],0,[[21,42]],[[21,43],62],[[21,43],62],[[62,8],43],0,[[37,37],15],[[62,62],15],[[136,136],15],[[127,127],15],[[],15],[[],15],[[],15],[[],15],[[21,42,38],[[10,[42]]]],[[37,46],95],[[37,46],95],[[62,46],95],[[62,46],95],[[136,46],95],[[127,46],95],[[21,46],95],[[]],[[]],[[]],[[]],[[]],[21,5],[[21,8],113],[[21,27,8],[[44,[52]]]],[21,80],[[],57],[[],57],[[],57],[[],57],[[21,42,42],[[1,[42]]]],[[21,[10,[19]]],19],[[127,8],60],[21,126],[21,52],[21,80],[[21,8],[[10,[137]]]],[[62,2,8],15],[37],[62],[136],[127],[[21,8,27],15],0,[[21,43],1],[[]],[[]],[[]],[[]],[[]],[21,15],[[21,8],15],[21,15],[21,15],[21,15],[21,15],[21,15],[21,15],[21,[[1,[26]]]],[[62,63,8],[[1,[42]]]],0,[21,80],[[62,8],42],[[37,37],15],[[62,62],15],[[127,127],15],[21,[[10,[27]]]],0,0,[[21,43],43],[127,127],[[21,42],[[10,[42]]]],[[37,37],[[10,[32]]]],[[62,62],[[10,[32]]]],[[136,136],[[10,[32]]]],[[127,127],[[10,[32]]]],0,[[21,[1,[26]]]],0,0,[37,36],[62,36],[136,36],[127,36],[21,36],[[21,80],[[44,[113]]]],0,0,[21,97],[[62,8],43],0,[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],0,[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],0,[[],87],[[],87],[[],87],[[],87],[[],87],0,[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[72,72],[138,138],[[]],[[]],[[],[[36,[72]]]],[[],[[36,[138]]]],[[72,72],15],[[138,138],15],[[72,37]],[[72,46],95],[[138,46],95],[[]],[[]],[[72,61,8],139],0,[[]],[[]],0,0,[[72,72],15],[[138,138],15],[[8,43],72],0,[72,36],[138,36],[[]],[[]],[[],36],[[],36],[[],36],[[],36],[[],87],[[],87],[[]],[[]],0,0,0,0,0,0,[[74,90,90,8],44],[[]],[[]],[[]],[[]],[[]],[[]],[74,74],[117,117],[140,140],[[]],[[]],[[]],[[74,11],15],[[74,11],15],[[117,64,11],15],[[],[[36,[74]]]],[[],[[36,[117]]]],[[],[[36,[140]]]],[[117,132,139]],[[117,132]],[[74,74],15],[[117,117],15],[[140,140],15],[[74,8],141],[[74,46],95],[[117,46],95],[[140,46],95],[[]],[[]],[[]],[[74,5,11],90],[[8,43],1],[[117,64],139],[[117,61,11],139],0,[[141,43,8],[[44,[74]]]],[[74,15,11],15],[[]],[[]],[[]],[[117,11],[[10,[90]]]],[[74,11],[[54,[64]]]],[[74,74],15],[[117,117],15],[[140,140],15],[[8,43],74],[[],117],0,0,[74,36],[117,36],[140,36],[74,90],[140,90],0,0,[[]],[[]],[[]],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],87],[[],87],[[],87],[[74,11],44],[[8,43],74],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[71,8],[[1,[9]]]],[[71,8],[[44,[[1,[82]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[70,70],[45,45],[75,75],[71,71],[[]],[[]],[[]],[[]],[[70,70],32],[[45,45],32],[[],[[36,[70]]]],[[],[[36,[45]]]],[[],[[36,[75]]]],[[],[[36,[71]]]],0,0,[[70,70],15],[[45,45],15],[[75,75],15],[[],15],[[],15],[[70,46],95],[[70,46],95],[[45,46],95],[[45,46],95],[[75,46],95],[[71,46],95],[[]],[[]],[[]],[[]],[[],57],[[],57],0,0,[70],[45],0,0,0,[[]],[[]],[[]],[[]],0,0,0,[[70,70],15],[[45,45],15],[[75,75],15],0,[[70,70],[[10,[32]]]],[[45,45],[[10,[32]]]],[71,22],0,0,[70,36],[45,36],[75,36],[71,36],0,0,0,0,0,[[]],[[]],[[]],[[]],[[],19],[[],19],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],87],[[],87],[[],87],[[],87],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[73,121],[73,15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[61,61],[78,78],[139,139],[73,73],[[]],[[]],[[]],[[]],[[61,61],32],[[78,78],32],[[73,73],15],[73,[[10,[114]]]],[[73,8],[[10,[62]]]],[[],[[36,[61]]]],[[],[[36,[78]]]],[[],[[36,[139]]]],[[],[[36,[73]]]],0,[[61,61],15],[[78,78],15],[[139,139],15],[[73,73],15],[[],15],[[],15],[[61,46],95],[[61,46],95],[[78,46],95],[[139,46],95],[[73,46],95],[[]],[[]],[[]],[[]],0,[[],57],[61],0,[[]],[[]],[[]],[[]],[[73,8],15],[[61,61],15],[[73,73],15],0,[[61,61],[[10,[32]]]],[[78,78],[[10,[32]]]],[[139,139],[[10,[32]]]],[78,15],[[73,63,8]],[[73,8],15],[[73,11,8],15],[61,36],[78,36],[139,36],[73,36],0,[[61,8],64],[[]],[[]],[[]],[[]],[[],19],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],0,[[],87],[[],87],[[],87],[[],87],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[135,135],[137,137],[[]],[[]],[[],[[36,[135]]]],[[],[[36,[137]]]],[[135,135],15],[[137,137],15],[[8,37],137],[[135,46],95],[[137,46],95],[[]],[[]],[[]],[[]],[8,[[1,[137]]]],0,[[135,135],15],[[137,137],15],[[],135],0,[135,36],[137,36],[[]],[[]],[[],36],[[],36],[[],36],[[],36],[[],87],[[],87],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[126,126],[33,33],[142,142],[143,143],[41,41],[[]],[[]],[[]],[[]],[[]],[[126,126],32],[[33,33],32],[[142,142],32],[[143,143],32],[[41,41],32],[[],[[36,[33]]]],[[],[[36,[142]]]],[[],[[36,[143]]]],[[],[[36,[41]]]],[22,5],[[126,126],15],[[33,33],15],[[142,142],15],[[143,143],15],[[41,41],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[126,46],[[36,[47]]]],[[33,46],[[36,[47]]]],[[33,46],[[36,[47]]]],[[142,46],[[36,[47]]]],[[142,46],[[36,[47]]]],[[143,46],[[36,[47]]]],[[143,46],[[36,[47]]]],[[41,46],[[36,[47]]]],[[41,46],[[36,[47]]]],[[]],[[]],[[]],[[]],[[]],[22,126],[[],57],[[],57],[[],57],[[],57],[33],[142],[143],[41],[41,81],[[]],[[]],[[]],[[]],[[]],[[33,33],15],[[142,142],15],[[143,143],15],[[41,41],15],[[126,126],[[10,[32]]]],[[33,33],[[10,[32]]]],[[142,142],[[10,[32]]]],[[143,143],[[10,[32]]]],[[41,41],[[10,[32]]]],[33,36],[142,36],[143,36],[41,36],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],87],[[],87],[[],87],[[],87],[[],87],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[1,[63]]]],0,0,0,0,0,[[63,[145,[[144,[63]]]]]],[[63,[145,[[144,[63]]]]]],[[63,[145,[[144,[63]]]]]],[[]],[[]],[[]],[[]],0,[[63,60,8],15],[[63,21,8],15],[63,63],[84,84],[[]],[[]],[[63,63],32],[[],84],[146,[[36,[[144,[63]]]]]],[[],[[36,[63]]]],[[],[[36,[84]]]],0,0,[130,63],[63,130],[[63,63],15],[[63,144],15],[[84,84],15],[[],15],[[63,[1,[42]],8],[[1,[42]]]],[[63,46],95],[[84,46],95],[[]],[[]],[2,63],[[]],[[]],0,[[84,84],15],0,[63],[[63,63],[[10,[32]]]],0,[90,5],[63,36],[[[144,[63]],147],36],[84,36],[[63,[145,[[144,[63]]]]]],[[]],[[]],[[],36],[[],36],[[],36],[[],36],[[],87],[[],87],0,0,[5,90],0,0,0,0,[[]],[[]],0,[[64,63,8],90],0,0,0,0,0,0,0,0,[[148,5],[[91,[5,5]]]],[[]],[[]],[[]],[[]],[[148,5,5],10],[[148,1,1],10],[148,148],[[]],[[149,150],148],[[],[[36,[148]]]],[[]],[[]],[[]],[[]],[148,15],[148,149],[148,36],[[]],[[],36],[[],36],[[],36],[[],36],[[],87],[[],87],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[156,[[0,[151,152,153,154,155]]]]],[[156,[[0,[151,152,153,154,155]]]]]],[[]],[[],[[36,[[157,[[0,[152,153,154]]]]]]]],[146,[[36,[[156,[[0,[158,152,153,154,155]]]]]]]],[[]],[[]],[[[156,[[0,[152,153,154,155]]]],[0,[152,153,154,155]]],159],[[[156,[[0,[152,153,154,155]]]],[0,[152,153,154,155]]],159],[[[156,[[0,[152,153,154,155]]]],150]],0,0,[[]],[[]],[[],[[156,[[0,[152,153,154,155]]]]]],0,[[[156,[[0,[152,153,154,155]]]]],36],[[]],[[[156,[[0,[152,153,154,155]]]],5],[[0,[152,153,154,155]]]],[[],36],[[],36],[[],36],[[],36],[[],87],[[],87],[[]],[[]],0,0,0,0,0,0,[[66,9,8],10],[[66,8,16]],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[66,66],[85,85],[[]],[[]],[[],[[36,[66]]]],[[],66],[[85,85],15],[[66,8,149]],[[]],[[]],[[]],[[]],[[]],[[]],[[],160],[[8,84,149,16],66],[[8,84,[1,[63]],16],66],[[8,84,[1,[63]],16],66],[[8,84,149,[1,[63]],16],66],0,[[66,9,8],[[10,[83]]]],[[66,9,8],[[10,[83]]]],[[160,8,9,84],[[10,[83]]]],[[66,9,84,85,8],[[10,[83]]]],[66,36],[[66,8,86,86],10],[[]],[[]],0,[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],87],[[],87],[[],87],[[]],[[]],[[]],0,0,0,0,0,[[43,8],[[10,[[54,[43]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[161,161],[162,162],[[]],[[]],[[162,162],32],[[],[[36,[161]]]],[[],[[36,[162]]]],[161,42],[162,62],[[161,161],15],[[162,162],15],[[],15],[161,42],[162,62],[8,[[1,[163]]]],[[61,8,54],[[1,[161]]]],[[161,46],95],[[162,46],95],[[]],[[]],[[]],[[161,8],113],[[]],[[]],[[]],[[163,8],[[1,[162]]]],0,[[161,161],15],[[162,162],15],[[[54,[43]],8]],[[162,162],[[10,[32]]]],0,0,[161,36],[162,36],[[]],[[]],[[61,13],[[1,[61]]]],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],87],[[],87],[[],87],0,[[]],[[]],[[]],0,0,0,0,0,0,0,[82,[[10,[161]]]],[[82,164,8]],0,[164,42],[164,165],[164,61],[[8,20,20,63],[[10,[9]]]],[[8,62,62,63],[[10,[9]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[164,164],[82,82],[9,9],[[]],[[]],[[]],[[164,164],32],0,[82,80],0,[[82,37],15],[82,164],[82,10],0,[[8,[1,[9]]],1],[[],[[36,[164]]]],[[],[[36,[82]]]],[[],[[36,[9]]]],[[82,8,164],80],0,[[164,164],15],[[82,82],15],[[9,9],15],[[],15],[[],15],[[82,8,[10,[97]]],90],[[164,8,80,[10,[80]]],[[44,[113]]]],[[164,46],95],[[82,46],95],[[9,46],95],[[9,46],95],[[]],[[]],[[]],[82,[[1,[42]]]],[[],57],[82,9],[[82,8,80],[[44,[164]]]],[82,166],[[82,8]],[164],[[]],[[]],[[]],[82,15],[82,15],[[82,61],15],[82,15],[82,164],[[86,86,63,8],9],[[164,[10,[97]],63,8],97],[[164,[10,[97]],63,8]],[82,[[10,[164]]]],[[82,5,164,8]],[[164,164],15],[[82,82],15],[[9,9],15],[[8,[1,[164]],9,[1,[161]],[1,[42]]],82],[82,164],0,[[164,164],[[10,[32]]]],[82,115],[164,36],[82,36],[9,36],[[82,8],164],0,0,[[]],[[]],[[]],[[],19],[82,80],0,[[82,8],[[10,[113]]]],[[82,8,80],[[10,[113]]]],[[82,8],[[44,[52]]]],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],87],[[],87],[[],87],0,[8],[8],[[8,9]],[[86,86,63],9],[[]],[[]],[[]],[[86,86],9],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[167,167],[83,83],[[]],[[]],0,[[83,37],15],[[],[[36,[167]]]],[[],[[36,[83]]]],[[8,[1,[162]]],[[1,[161]]]],[[167,46],95],[[83,46],95],[[]],[[]],[[[1,[62]],9,90,[1,[162]],8],83],[83,90],[83,9],[83,1],[[]],[[]],[[83,8],[[44,[82]]]],[[83,8],[[44,[82]]]],[[[1,[167]],9,90,[1,[162]]],83],0,[167,36],[83,36],0,[[]],[[]],[[83,8],[[1,[52]]]],[[83,8],[[44,[52]]]],[[],36],[[],36],[[],36],[[],36],[[],87],[[],87],0,[[]],[[]],0,0,0,0,0,0,0,0,[[168,86,8],[[91,[62,90]]]],[[168,8]],[[]],[[]],[[]],[[]],[168,168],[169,169],[[]],[[]],[[169,169],32],0,[[],[[36,[168]]]],[[],[[36,[169]]]],[[],168],0,[[169,169],15],[[],15],[[169,46],95],[[]],[[]],[[],57],[169],[[]],[[]],[[63,156,84,8],150],[[169,169],15],[[8,63,84,149],168],0,0,[[169,169],[[10,[32]]]],[[168,9,8],[[10,[83]]]],[168,36],[169,36],[[]],[[]],[[],36],[[],36],[[],36],[[],36],[[],87],[[],87],0,[[62,64,63,84,8],[[10,[90]]]],[[]],[[]],0,0,0,0,0,0,0,[[170,86,8],[[91,[62,90]]]],[[170,8,10]],[[]],[[]],[170,170],[[]],[[],[[36,[170]]]],[[],170],0,[[]],[[]],[[156,10,8],150],[[8,10,149],170],0,[[9,8],83],[[170,9,8],[[10,[83]]]],[170,36],[[170,8,86,86],10],[[]],[[150,156,8,168,168]],[[],36],[[],36],[[],87],0,[[]],[[[1,[93]],8],[[1,[167]]]],0,0,0,0,0,0,0,0,0,0,[165,42],[165,61],[[97,115],97],[[]],[[]],[[]],[[]],[[86,80,8],[[10,[86]]]],[86,86],[165,165],[[]],[[]],[[86,86],32],[[165,165],32],[[],[[36,[86]]]],[[],[[36,[165]]]],[86,80],0,[[42,8],86],[[86,86],15],[[165,165],15],[[86,42,8],86],[[86,42,80,8],86],[[],15],[[],15],[[86,46],95],[[86,46],95],[[165,46],95],[[165,46],95],[[]],[[]],[[],57],[[165,8],113],[[165,8],128],[165],[[]],[[]],[86,42],0,[[64,[10,[97]],63,8],97],[[62,[10,[97]],63,8]],[165,[[10,[42]]]],[165,[[10,[61]]]],[[86,80,8],[[10,[86]]]],[[86,86],15],[[165,165],15],[[42,80],86],[[86,86],[[10,[32]]]],[[165,165],[[10,[32]]]],[[86,8],122],[[86,8]],[86,36],[165,36],[42,86],[[]],[[]],[[],19],[[],19],[[],36],[[],36],[[],36],[[],36],[[],87],[[],87],[[]],[[]],[[97,115],97],0,0],"p":[[3,"Vec"],[4,"LaneType"],[3,"Tags"],[4,"DrivingSide"],[15,"usize"],[4,"AmenityType"],[3,"Global"],[3,"Map"],[3,"PathRequest"],[4,"Option"],[3,"Intersection"],[8,"Iterator"],[3,"BTreeMap"],[3,"MapEdits"],[15,"bool"],[3,"Timer"],[3,"EditEffects"],[3,"OriginalRoad"],[3,"String"],[3,"BuildingID"],[3,"Road"],[15,"str"],[3,"Amenity"],[4,"AreaType"],[4,"BufferType"],[3,"LaneSpec"],[4,"Direction"],[3,"NamePerLanguage"],[3,"MapConfig"],[4,"IntersectionType"],[4,"RestrictionType"],[4,"Ordering"],[3,"NodeID"],[3,"RawMap"],[3,"RawToMapOptions"],[4,"Result"],[3,"RoadID"],[8,"Fn"],[4,"EditCmd"],[4,"GeoJson"],[4,"OsmID"],[3,"LaneID"],[3,"IntersectionID"],[6,"Result"],[3,"TransitRouteID"],[3,"Formatter"],[3,"Error"],[15,"char"],[3,"AreaID"],[3,"Area"],[3,"Building"],[3,"Polygon"],[3,"Bounds"],[3,"BTreeSet"],[3,"CityName"],[3,"GPSBounds"],[15,"u64"],[3,"EditCrosswalks"],[4,"EditIntersection"],[3,"Lane"],[3,"TurnID"],[3,"DirectedRoadID"],[4,"PathConstraints"],[3,"MovementID"],[3,"MapName"],[3,"Pathfinder"],[3,"ParkingLotID"],[3,"ParkingLot"],[3,"EditRoad"],[3,"TransitStopID"],[3,"TransitRoute"],[3,"ControlStopSign"],[3,"Turn"],[3,"ControlTrafficSignal"],[3,"TransitStop"],[4,"BuildingType"],[3,"Time"],[4,"TurnType"],[3,"AmenityTypeIter"],[3,"Distance"],[15,"i64"],[3,"Path"],[3,"PathV2"],[3,"RoutingParams"],[4,"PathfinderCaching"],[3,"Position"],[3,"TypeId"],[3,"City"],[4,"Spot"],[3,"Duration"],[3,"HashMap"],[3,"WalkingOptions"],[4,"WalkingNode"],[3,"Item"],[6,"Result"],[3,"Item"],[3,"Speed"],[15,"u8"],[4,"PermanentEditCmd"],[3,"PermanentMapEdits"],[4,"PermanentEditIntersection"],[3,"PermanentEditCrosswalks"],[3,"OriginalLane"],[3,"ChangeLaneType"],[3,"ReverseLane"],[3,"ChangeSpeedLimit"],[3,"ChangeAccessRestrictions"],[4,"Value"],[3,"App"],[3,"ArgMatches"],[3,"HashablePt2D"],[3,"HashSet"],[3,"PolyLine"],[3,"Line"],[15,"f64"],[3,"XorShiftRng"],[3,"Stage"],[3,"RawTransitRoute"],[3,"BorderSnapper"],[3,"RawTransitStop"],[3,"Angle"],[3,"Pt2D"],[3,"Perimeter"],[3,"Block"],[4,"OffstreetParking"],[4,"RoadRank"],[3,"RoadSideID"],[15,"isize"],[4,"CommonEndpoint"],[15,"u32"],[3,"CompressedMovementID"],[3,"Movement"],[3,"DirectedRoad"],[3,"Turn"],[3,"AccessRestrictions"],[4,"SideOfRoad"],[3,"Zone"],[3,"RoadWithStopSign"],[4,"TurnPriority"],[4,"StageType"],[3,"TrafficSignal"],[3,"WayID"],[3,"RelationID"],[3,"EnumSet"],[8,"Into"],[8,"Deserializer"],[8,"Serializer"],[4,"PathfindEngine"],[4,"CreateEngine"],[3,"InputGraph"],[8,"Clone"],[8,"Copy"],[8,"Ord"],[8,"Debug"],[8,"Serialize"],[3,"NodeMap"],[3,"InnerNodeMap"],[8,"Deserialize"],[6,"NodeId"],[3,"PathfinderCache"],[3,"UberTurn"],[3,"UberTurnV2"],[3,"IntersectionCluster"],[4,"PathStep"],[4,"Traversable"],[3,"VecDeque"],[4,"PathStepV2"],[3,"VehiclePathfinder"],[4,"Node"],[3,"SidewalkPathfinder"],[13,"ResidentialCommercial"],[13,"Commercial"],[13,"Residential"],[13,"One"],[13,"ChangeIntersection"],[13,"ChangeCrosswalks"],[13,"ChangeRouteSchedule"],[13,"ChangeRoad"],[13,"StopSign"],[13,"TrafficSignal"],[13,"Buffer"],[13,"PublicGarage"],[13,"Private"],[13,"Lane"],[13,"ContraflowLane"],[13,"Turn"],[13,"ContraflowTurn"],[13,"Along"],[13,"Contraflow"],[13,"Movement"],[13,"ContraflowMovement"],[13,"Fixed"],[13,"Variable"],[13,"Lane"],[13,"Turn"],[13,"Building"],[13,"Border"],[13,"DirectedRoad"],[13,"SidewalkEndpoint"],[13,"RideTransit"],[13,"LeaveMap"],[13,"ChangeRouteSchedule"],[13,"ChangeIntersection"],[13,"ChangeCrosswalks"],[13,"ChangeRoad"],[13,"TrafficSignal"],[13,"StopSign"],[13,"Node"],[13,"Way"],[13,"Relation"],[13,"CHSeedingNodeOrdering"],[13,"Dijkstra"],[13,"CH"],[13,"Road"],[13,"UberTurn"]]},\
"osm_viewer":{"doc":"","t":[5,5,0,6,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,12,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["main","run","viewer","App","BusinessSearch","MinimapController","Viewer","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","businesses","calculate_tags","counts","draw","draw_baselayer","event","fixed_object_outline","from","from","from","has_zorder","highlight","hovering_on_amenity","hovering_on_amenity","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","make_legend","minimap","new","new_state","recalculate_top_panel","render","show","top_panel","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update","vzip","vzip","vzip"],"q":["osm_viewer","","","osm_viewer::viewer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,3,12,10,3,12,10,3,12,10,3,12,10,3,3,12,3,3,3,3,3,12,10,10,12,12,12,3,12,10,3,12,10,10,3,12,10,10,3,12,3,3,12,12,3,3,12,10,3,12,10,3,12,10,12,3,12,10],"f":[[[]],[1],0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],0,[[3,4,5],6],0,[[3,7,5]],[3,8],[[3,4,5],[[9,[5]]]],0,[[]],[[]],[[]],[[10,5],11],0,[[12,4,5,[14,[13]]]],0,[[]],[[]],[[]],[[[16,[15]]],[[16,[2,15]]]],[[[16,[15]]],[[16,[2,15]]]],[[[16,[15]]],[[16,[2,15]]]],[17,[[17,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[[10,4,5],6],0,[[4,5],12],[[4,5],[[16,[19]]]],[[3,4,5,[14,[6]]]],[[12,4],6],0,0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[12,4,5]],[[]],[[]],[[]]],"p":[[3,"Settings"],[8,"Any"],[3,"Viewer"],[3,"EventCtx"],[3,"SimpleApp"],[3,"Widget"],[3,"GfxCtx"],[4,"DrawBaselayer"],[4,"Transition"],[3,"MinimapController"],[15,"bool"],[3,"BusinessSearch"],[3,"String"],[4,"Option"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[8,"State"],[4,"Result"],[3,"TypeId"]]},\
"parking_mapper":{"doc":"","t":[5,0,6,13,3,13,13,13,17,13,13,13,3,13,4,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,11,11,11,11,5,5,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["main","mapper","App","BothSides","ChangeWay","Complicated","DividedHighways","Done","FAKE_PARKING_TAG","LeftOnly","NoStopping","OverlappingStuff","ParkingMapper","RightOnly","Show","ToDo","UnmappedDividedHighways","Value","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","data","data","draw","draw","draw","draw_layer","eq","eq","event","event","find_divided_highways","find_overlapping_stuff","fmt","from","from","from","from","generate_osmc","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","make","new_state","new_state","osm_way_id","panel","panel","selected","show","show","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip"],"q":["parking_mapper","","parking_mapper::mapper","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,3,0,3,2,2,0,3,3,2,0,3,0,2,2,0,4,7,2,3,4,7,2,3,4,7,2,3,4,7,2,3,2,3,2,3,4,7,4,7,7,4,2,3,4,7,0,0,2,4,7,2,3,0,4,7,2,3,4,7,2,3,2,3,4,7,2,3,4,4,7,7,4,7,4,4,7,2,3,4,7,2,3,4,7,2,3,4,7,2,3,4,7,2,3],"f":[[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,2],[3,3],[[]],[[]],0,0,[[4,5,6]],[[7,5,6]],0,0,[[2,2],8],[[3,3],8],[[4,9,6],[[10,[6]]]],[[7,9,6],[[10,[6]]]],[6,[[12,[11]]]],[[6,13],[[15,[14]]]],[[2,16],17],[[]],[[]],[[]],[[]],[[18,8,13],19],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[9,6,2,[18,[24,3]]],[[21,[25]]]],[[9,6],[[21,[25]]]],[[9,6,12,2,[18,[24,3]]],[[21,[25]]]],0,0,0,0,0,0,[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]]],"p":[[8,"Any"],[4,"Show"],[4,"Value"],[3,"ParkingMapper"],[3,"GfxCtx"],[3,"SimpleApp"],[3,"ChangeWay"],[15,"bool"],[3,"EventCtx"],[4,"Transition"],[3,"RoadID"],[3,"HashSet"],[3,"Timer"],[3,"Polygon"],[3,"Vec"],[3,"Formatter"],[6,"Result"],[3,"BTreeMap"],[6,"Result"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"WayID"],[8,"State"],[4,"Result"],[3,"TypeId"]]},\
"piggyback":{"doc":"","t":[5],"n":["dummy"],"q":["piggyback"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"popdat":{"doc":"popdat (“population data”) generates <code>Scenarios</code> given a …","t":[4,13,3,3,3,13,13,13,13,13,13,13,4,3,13,13,13,13,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,5,12,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,0,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,5,5,5,5,5,3,11,12,11,11,11,11,11,11,11,11,11,11,5,11,11,5,11,11,11,11,13,3,4,13,3,3,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,5,11,12,5,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12],"n":["Activity","Breakfast","CensusArea","CensusPerson","Config","Dinner","Entertainment","Errands","Financial","Healthcare","Home","Lunch","PersonType","Schedule","School","Student","Work","Worker","activities","activities","age","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","distribute_people","distribute_population_to_homes","employed","eq","eq","equivalent","fetch_all_for_map","fmt","fmt","from","from","from","from","from","from","generate_scenario","generate_schedule","get_hash","hash","home","import_census","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","make_person","ne","od","owns_car","polygon","population","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","walk_for_distances_shorter_than","walk_or_bike_for_distances_shorter_than","hours","minutes","rand_duration","rand_time","assign_people_to_houses","distribute_population_to_homes","PersonFactory","activity_to_buildings","activity_to_buildings","as_any","as_any_mut","borrow","borrow_mut","find_building_for_activity","from","into","into_any","into_any_arc","into_any_rc","make_people","make_person","new","pick_mode","try_from","try_into","type_id","vzip","AllowRemote","DesireLine","IncludeZonePolicy","MustOverlap","NormalDistribution","Options","Zone","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borders","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","center","create_zones","default","departure_time","disaggregate","eq","fmt","from","from","from","from","from","home_zone","homes","include_zones","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_remote","mean","mode","new","number_commuters","pct_overlap","pick_borders","pick_home","pick_workplace","polygon","sample","std_deviation","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","work_duration","work_zone","workplaces"],"q":["popdat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","popdat::activities","","","","popdat::distribute_people","","popdat::make_person","","","","","","","","","","","","","","","","","","","","","popdat::od","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Different things people might do in the day. Maybe it’s …","","Represents aggregate demographic data for some part of a …","Demographic information for a single person","Any arbitrarily chosen parameters needed should be put …","","","","","","","","It might be useful to classify a CensusPerson into …","A single person’s daily schedule. It’s assumed that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Starting from some number of total people living in a …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Wires together all the pieces, so you can just hand this …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","This is a standalone pipeline for generating a Scenario, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Starting from some number of total people living in a …","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Keep all zones. When looking at desire lines between two …","This describes some number of commuters living in some …","Only desire lines starting and ending in zones matching …","Keep zones that at least partially overlap the map’s …","A normal distribution of Durations.","","","","","","","","","","","","","","","","","","","","","","","","","","","When should somebody depart from home to work?","Generates a scenario from aggregated origin/destination …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns endpoints to (leave home, goto home). These’re …","Returns endpoints to (leave work, goto work). These’re …","","","","","","","","","","","","","","","","","","","","","","","","How long should somebody work before returning home?","",""],"i":[0,2,0,0,0,2,2,2,2,2,2,2,0,0,2,43,2,43,0,19,18,18,43,19,3,9,2,18,43,19,3,9,2,18,43,19,3,9,2,18,43,19,3,9,2,2,2,3,0,0,18,9,2,2,9,9,2,18,43,19,3,9,2,0,18,2,2,18,0,18,43,19,3,9,2,18,43,19,3,9,2,18,43,19,3,9,2,18,43,19,3,9,2,0,9,0,18,9,9,2,18,43,19,3,9,2,18,43,19,3,9,2,18,43,19,3,9,2,18,43,19,3,9,2,3,3,0,0,0,0,0,0,0,31,31,31,31,31,31,31,31,31,31,31,31,0,31,31,0,31,31,31,31,38,0,0,38,0,0,0,40,39,42,41,38,40,39,42,41,38,39,40,39,42,41,38,40,39,42,41,38,39,0,40,40,0,38,41,40,39,42,41,38,41,39,40,40,39,42,41,38,40,39,42,41,38,40,39,42,41,38,40,39,42,41,38,39,42,41,42,41,39,39,39,39,39,42,42,40,39,42,41,38,40,39,42,41,38,40,39,42,41,38,40,39,42,41,38,40,41,39],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,2],[[]],[[],3],0,[[4,5,6,7],8],0,[[9,9],10],[[2,2],10],[[],10],[[11,12],13],[[9,14],15],[[2,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[16,[8,[9]],3,6,7],17],[[18,3,7],19],[[],20],[2],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],0,[[9,9],10],0,0,0,0,[[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[5,27],[5,27],[[7,27,27],27],[[7,27,27],28],[[[8,[9]],6,7,3],[[8,[18]]]],[[4,5,6,7],8],0,[6,[[30,[2,[8,[29]]]]]],0,[[],1],[[],1],[[]],[[]],[[31,2,32,6,7],[[33,[29]]]],[[]],[[]],[[[22,[21]]],[[22,[1,21]]]],[23,[[23,[1]]]],[24,[[24,[1]]]],[[[8,[18]],6,34,7,3],[[8,[35]]]],[[31,18,6,7,3],35],[6,31],[[32,32,6,7,3],36],[[],25],[[],25],[[],26],[[]],0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[6,[30,[37,11]],38,34],[[30,[37,39]]]],[[],40],0,[[6,[30,[37,11]],[8,[41]],40,7,34],[[8,[35]]]],[[38,38],10],[[41,14],15],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[39,10],0,0,[[27,27],42],0,0,[[39,36,6,7],33],[[39,36,6,7],33],[[39,36,6,7],33],0,[[42,7],27],0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],0,0,0],"p":[[8,"Any"],[4,"Activity"],[3,"Config"],[3,"Polygon"],[15,"usize"],[3,"Map"],[3,"XorShiftRng"],[3,"Vec"],[3,"CensusArea"],[15,"bool"],[3,"Polygon"],[3,"GPSBounds"],[8,"Future"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"Scenario"],[3,"CensusPerson"],[3,"Schedule"],[15,"u64"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[4,"Result"],[3,"TypeId"],[3,"Duration"],[3,"Time"],[3,"BuildingID"],[3,"HashMap"],[3,"PersonFactory"],[4,"TripEndpoint"],[4,"Option"],[3,"Timer"],[3,"PersonSpec"],[4,"TripMode"],[3,"String"],[4,"IncludeZonePolicy"],[3,"Zone"],[3,"Options"],[3,"DesireLine"],[3,"NormalDistribution"],[4,"PersonType"]]},\
"raw_map":{"doc":"The convert_osm crate produces a RawMap from OSM and other …","t":[3,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,3,3,3,3,3,4,13,13,13,13,13,13,13,13,13,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,4,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Amenity","AmenityType","AreaType","Bank","Bar","Beauty","Bike","Bus","Cafe","CarRepair","CarShare","Childcare","ConvenienceStore","Culture","Exercise","FastFood","Food","GreenSpace","Hotel","Island","Laundry","Library","Medical","Park","Pet","Playground","Pool","PostOffice","RawArea","RawBuilding","RawMap","RawParkingLot","RawTransitRoute","RawTransitStop","RawTransitType","Religious","School","Shopping","StudyArea","Supermarket","Tourism","Train","University","Water","amenities","amenity_type","area_type","areas","blank","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buildings","bus_routes_on_roads","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_city_name","gtfs_id","gtfs_id","into","into","into","into","into","into","into","long_name","name","name","names","new_osm_way_id","num_parking_spots","osm_id","osm_id","osm_tags","osm_tags","osm_tags","osm_tags","parking_aisles","parking_lots","polygon","polygon","polygon","position","public_garage_name","route_type","save","serialize","serialize","serialize","serialize","serialize","serialize","serialize","shape","short_name","stops","streets","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transit_routes","transit_stops","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","Amenity","AmenityType","AmenityTypeIter","AreaType","Bank","Bar","Beauty","Bike","Cafe","CarRepair","CarShare","Childcare","ConvenienceStore","Culture","Exercise","FastFood","Food","GreenSpace","Hotel","Island","Laundry","Library","Medical","Park","Pet","Playground","Pool","PostOffice","Religious","School","Shopping","StudyArea","Supermarket","Tourism","University","Water","all","amenity_type","back_idx","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","categorize","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from_str","get","get_hash","hash","idx","into","into","into","into","into_iter","iter","len","marker","names","next","next_back","nth","osm_tags","partial_cmp","serialize","serialize","size_hint","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","types"],"q":["raw_mapraw_map::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A business located inside a building.","Businesses are categorized into one of these types.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Not from OSM. A user-specified area to focus on.","","","","","","","This is the specific amenity listed in OSM, not the more …","","","","","","","","","","","","","","","","","","","Per road, what bus routes run along it?","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Depending on options while importing, these might be …","","","","","","","","","Only stops within a map’s boundary are kept","","","","","","","","","","","This may begin and/or end inside or outside the map …","","Entries into transit_stops","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A business located inside a building.","Businesses are categorized into one of these types.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Not from OSM. A user-specified area to focus on.","","","","","All types of amenities, in alphabetical order.","This is the specific amenity listed in OSM, not the more …","","","","","","","","","","Categorize an OSM amenity tag.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Depending on options while importing, these might be …","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,17,17,17,17,7,17,17,17,17,17,17,17,17,17,17,17,23,17,17,17,23,17,17,17,17,0,0,0,0,0,0,0,17,17,17,23,17,17,7,17,23,3,21,4,2,2,2,3,4,5,6,7,8,2,3,4,5,6,7,8,2,2,3,4,5,6,7,8,3,4,5,6,7,8,2,3,4,5,6,7,8,7,3,4,5,6,7,8,2,3,4,5,6,7,8,2,6,8,2,3,4,5,6,7,8,6,2,8,21,2,3,4,5,21,3,4,5,2,2,3,4,5,8,3,6,2,2,3,4,5,6,7,8,6,6,6,2,3,4,5,6,7,8,2,2,2,3,4,5,6,7,8,2,3,4,5,6,7,8,2,3,4,5,6,7,8,0,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,23,17,17,17,23,17,17,17,17,17,17,17,23,17,17,17,23,17,21,22,21,17,22,23,21,17,22,23,17,21,17,22,23,21,17,22,23,17,21,23,17,23,17,23,21,17,23,21,17,22,23,17,22,23,23,22,21,17,22,23,22,17,22,22,21,22,22,22,21,17,21,23,22,21,17,22,23,17,21,17,22,23,21,17,22,23,21,17,22,23,17],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[2]]]],[[],[[9,[3]]]],[[],[[9,[4]]]],[[],[[9,[5]]]],[[],[[9,[6]]]],[[],[[9,[7]]]],[[],[[9,[8]]]],[[7,7],10],[[3,11],12],[[4,11],12],[[5,11],12],[[6,11],12],[[7,11],12],[[8,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,13],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[2,14],15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2],[2,9],[3,9],[4,9],[5,9],[6,9],[7,9],[8,9],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[18,[17]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19,[[20,[17]]]],[21,21],[17,17],[22,22],[23,23],[[]],[[]],[[]],[[]],[[17,17],24],[[],[[9,[21]]]],[[],[[9,[23]]]],[[17,17],10],[[23,23],10],[[],10],[[],10],[[21,11],12],[[17,11],[[9,[25]]]],[[23,11],12],[[]],[[]],[[]],[[]],[19,[[9,[17]]]],[[22,26],[[20,[17]]]],[[],27],[23],0,[[]],[[]],[[]],[[]],[[]],[[],22],[22,26],0,0,[22,20],[22,20],[[22,26],20],0,[[17,17],[[20,[24]]]],[21,9],[23,9],[22],[[]],[[]],[[]],[[]],[[],28],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],16],[[],16],[[],16],[[],16],[17,[[18,[19]]]]],"p":[[3,"MapName"],[3,"RawMap"],[3,"RawBuilding"],[3,"RawArea"],[3,"RawParkingLot"],[3,"RawTransitRoute"],[4,"RawTransitType"],[3,"RawTransitStop"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"CityName"],[15,"i64"],[3,"WayID"],[3,"TypeId"],[4,"AmenityType"],[3,"Vec"],[15,"str"],[4,"Option"],[3,"Amenity"],[3,"AmenityTypeIter"],[4,"AreaType"],[4,"Ordering"],[3,"Error"],[15,"usize"],[15,"u64"],[3,"String"]]},\
"santa":{"doc":"","t":[6,6,0,0,0,0,0,0,0,5,0,0,0,5,0,0,0,3,3,3,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,3,3,4,13,13,13,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,3,17,11,11,12,11,11,12,11,12,11,5,11,12,11,11,11,12,5,5,11,11,11,11,11,12,12,11,4,3,13,13,13,13,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,12,17,3,5,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,17,17,3,3,3,17,17,3,12,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,12,12,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,3,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,12,12,12,11,11,12,12,12,11,11,11,11,12,12,11,5,5,17,3,3,17,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,12,11,11,3,13,4,3,13,17,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,3,12,11,11,11,11,12,11,11,11,11,12,12,11,11,12,12,11,11,12,12,11,11,11,11,11,11,11,12,12,11,12,12,11,11,12,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,3,11,11,11,11,11,12,11,11,11,11,11,11,12,11,12,12,12,11,11,11,11],"n":["App","Transition","after_level","animation","before_level","buildings","controls","game","levels","main","meters","music","player","run","session","title","vehicles","RecordPath","Results","Strategize","ZOOM","add_pt","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","draw","draw","draw_all","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","new","new_state","new_state","on_click","on_click","other_event","other_event","pts","render","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unlock_messages","vzip","vzip","vzip","Animation","Animator","Effect","Flash","FollowPath","Scale","SnowEffect","Snowflake","active","add","add_screenspace","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","draw","draw","draw","draw_mapspace","draw_screenspace","effect","end","event","event","fall_speed","flakes","from","from","from","from","from","initial_pos","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_done","max_swoop","new","new","pos","render","rng","screenspace","spawn_new","start","start","swoop_period","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","alpha_scale","center","color","cycles","lerp_scale","orig","orig","pl","width","Picker","ZOOM","as_any","as_any_mut","bldgs","borrow","borrow_mut","current_picks","draw","draw_start","event","explain_upzoning","from","instructions_panel","into","into_any","into_any_rc","level","make_upzone_panel","make_vehicle_panel","new_state","randomly_pick_upzones","try_from","try_into","type_id","upzone_panel","vehicle_panel","vzip","BldgState","Buildings","Done","Ignore","Store","Undelivered","all_stores","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","buildings","clone","clone_into","draw_all","draw_done_houses","from","from","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","new","to_owned","total_housing_units","try_from","try_from","try_into","try_into","type_id","type_id","upzones","vzip","vzip","0","HACK","InstantController","angle_from_arrow_keys","as_any","as_any_mut","borrow","borrow_mut","displacement","facing","from","into","into_any","into_any_arc","into_any_rc","new","try_from","try_into","type_id","vzip","ACQUIRE_BOOST_RATE","BOOST_SPEED_MULTIPLIER","EnergylessArrow","Game","GameState","HANGRY_SPEED_MULTIPLIER","MAX_BOOST","MinimapController","all_stores","animator","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bldgs","boost","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","draw","draw","draw_done_houses","energy","energyless_arrow","event","from","from","from","from","game_over","has_energy","has_zorder","idle_time","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","last_update","level","make_legend","met_goal","minimap","new","new","new_state","on_destroy","pause_panel","player","present_dropped","record_path","score","snow","started","state","status_panel","time_panel","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","update","update_boost_panel","update_status_panel","update_time_panel","vehicle","vzip","vzip","vzip","vzip","warned_low_energy","warned_low_time","Level","all","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","description","deserialize","eq","from","goal","into","into_any","into_any_arc","into_any_rc","map","minimap_zoom","music","ne","serialize","start","time_limit","title","to_owned","try_from","try_into","type_id","unlock_upzones","unlock_vehicles","vzip","custom_bar","make_bar","IN_GAME","Inner","Music","OUT_OF_GAME","_stream","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","change_song","change_song","current_song","default","draw","empty","event","from","from","inner","into","into","into_any","into_any","into_any_rc","into_any_rc","mute","new","panel","sink","specify_volume","specify_volume","start","stream_handle","try_from","try_from","try_into","try_into","type_id","type_id","unmute","unmuted_volume","vzip","vzip","BuildingsAlongRoad","Intersection","On","Player","Road","ZOOM","apply_displacement","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","bldgs_along_road","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","controls","eq","facing","from","from","from","get_angle","get_connections","get_pos","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","ne","new","new","on","on_good_road","override_pos","per_road","pos","pos_to_on","query_range","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_with_speed","vzip","vzip","vzip","0","0","1","2","ColorScheme","Session","apartment","as_any","as_any","as_any_mut","as_any_mut","boost","borrow","borrow","borrow_mut","borrow_mut","colors","current_vehicle","deserialize","deserialize","enable_modding","energy","from","from","high_scores","house","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","levels","levels_unlocked","load","music","play_music","record_score","save","score","serialize","serialize","store","try_from","try_from","try_into","try_into","type_id","type_id","unlock_all","update_music","upzones_explained","upzones_per_level","upzones_unlocked","vehicles_unlocked","visited","vzip","vzip","Credits","TitleScreen","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","draw","draw","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","level_btn","link","locked_level","new_state","new_state","on_click","on_click","other_event","other_event","try_from","try_from","try_into","try_into","type_id","type_id","unlocked_level","vzip","vzip","Vehicle","animate","as_any","as_any_mut","borrow","borrow_mut","draw_frames","from","get","into","into_any","into_any_arc","into_any_rc","max_energy","max_stats","name","scale","speed","try_from","try_into","type_id","vzip"],"q":["santa","","","","","","","","","","","","","","","","","santa::after_level","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","santa::animation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","santa::animation::Effect","","","","","","","","","santa::before_level","","","","","","","","","","","","","","","","","","","","","","","","","","","","santa::buildings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","santa::buildings::BldgState","santa::controls","","","","","","","","","","","","","","","","","","","santa::game","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","santa::levels","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","santa::meters","","santa::music","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","santa::player","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","santa::player::On","","","","santa::session","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","santa::title","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","santa::vehicles","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pass in a future value for <code>now</code> to schedule a delayed effect","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Which of the 8 directions are we facing, based on the last …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Is the player currently on a road with a bus or bike lane?","For the game over animation","","","","","","","","","","","","","","","Returns any buildings we passed","","","","","","","","","Persistent state that lasts across levels.","","","","","","","","","","","","","","","Enable this to use the levels, instead of overwriting them …","","Returns the argument unchanged.","Returns the argument unchanged.","Level title -&gt; the top 3 scores","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","If a message is returned, a new level and some powers were …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","(max speed, max energy)","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,5,8,2,5,8,2,5,8,2,5,8,2,5,8,5,5,8,2,5,8,2,5,8,2,8,2,5,8,2,2,5,8,5,8,5,8,2,2,5,8,2,5,8,2,5,8,2,5,5,8,2,0,0,0,29,29,29,0,0,26,26,26,26,67,29,30,32,26,67,29,30,32,26,67,29,30,32,26,67,29,30,32,26,30,30,26,26,67,67,26,30,32,30,26,67,29,30,32,32,26,67,29,30,32,26,67,29,30,32,67,29,32,26,67,29,30,32,26,32,26,30,32,29,30,67,30,67,32,32,26,67,29,30,32,26,67,29,30,32,26,67,29,30,32,26,67,29,30,32,68,69,70,68,69,69,68,70,70,0,0,35,35,35,35,35,35,35,35,35,0,35,35,35,35,35,35,0,0,35,35,35,35,35,35,35,35,0,0,38,38,38,38,16,16,38,16,38,16,38,16,38,16,38,38,16,16,16,38,16,38,16,38,38,16,38,16,38,16,16,38,16,38,16,38,16,16,38,71,0,0,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,0,0,0,0,0,0,0,0,50,45,45,46,50,47,45,46,50,47,46,46,45,46,50,47,45,46,50,47,45,50,46,46,46,45,45,46,50,47,46,46,47,46,45,46,50,47,45,46,50,47,47,45,46,50,47,50,46,47,46,45,46,50,45,45,45,45,46,46,46,45,50,45,45,45,45,46,50,47,45,46,50,47,45,46,50,47,45,50,45,45,45,46,45,46,50,47,46,46,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,54,53,54,53,54,53,54,53,54,53,54,54,53,53,53,53,53,54,53,53,54,53,54,53,54,54,54,54,54,53,54,53,54,53,54,53,54,53,54,54,54,53,54,0,58,0,0,58,0,57,57,60,58,57,60,58,57,57,60,58,57,60,58,58,58,57,58,57,57,60,58,57,58,57,57,60,58,57,60,58,57,60,58,57,60,58,58,57,60,57,57,57,60,57,57,60,58,57,60,58,57,60,58,57,60,58,57,57,60,58,72,73,73,73,0,0,62,20,62,20,62,62,20,62,20,62,20,20,20,62,20,62,20,62,20,62,20,62,20,62,62,20,62,20,20,20,20,20,20,20,62,20,62,62,20,62,20,62,20,62,20,20,20,20,20,20,62,20,62,0,0,64,65,64,65,64,65,64,65,64,65,64,65,64,65,64,65,64,65,64,65,0,0,0,64,65,64,65,64,65,64,65,64,65,64,65,0,64,65,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49],"f":[0,0,0,0,0,0,0,0,0,[[]],0,0,0,[1],0,0,0,0,0,0,0,[[2,3]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[5,6,7]],[[8,6,7]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[9]]],[[10,[4,9]]]],[[[10,[9]]],[[10,[4,9]]]],[[[10,[9]]],[[10,[4,9]]]],[11,[[11,[4]]]],[11,[[11,[4]]]],[12,[[12,[4]]]],[12,[[12,[4]]]],[12,[[12,[4]]]],[[],2],[[13,7,14,15,16,2],[[10,[17]]]],[[13,7,14,15],[[10,[17]]]],[[5,13,7,18,19],[[21,[[7,[20]]]]]],[[8,13,7,18,19],[[21,[[7,[20]]]]]],[[5,13,7],[[21,[[7,[20]]]]]],[[8,13,7],[[21,[[7,[20]]]]]],0,[[2,22],23],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[],25],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[26,27,28,29]],[[26,27,28,29]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[26,6]],[[30,6]],0,0,0,0,0,[[26,13,27]],[[30,13,27]],0,0,[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[[10,[9]]],[[10,[4,9]]]],[[[10,[9]]],[[10,[4,9]]]],[[[10,[9]]],[[10,[4,9]]]],[[[10,[9]]],[[10,[4,9]]]],[[[10,[9]]],[[10,[4,9]]]],[11,[[11,[4]]]],[11,[[11,[4]]]],[11,[[11,[4]]]],[12,[[12,[4]]]],[12,[[12,[4]]]],[12,[[12,[4]]]],[12,[[12,[4]]]],[12,[[12,[4]]]],[26,31],0,[13,26],[13,30],[[32,27],3],[[29,33,34]],0,0,[[30,27,3],32],0,0,0,[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],4],[[],4],0,[[]],[[]],0,[[35,6,7]],0,[[35,13,7],[[21,[[7,[20]]]]]],[13,[[21,[[7,[20]]]]]],[[]],0,[[]],[[[10,[9]]],[[10,[4,9]]]],[12,[[12,[4]]]],0,[[13,7,14],19],[[13,7],19],[[13,7,15],[[10,[17]]]],[[35,7]],[[],24],[[],24],[[],25],0,0,[[]],0,0,0,0,0,0,[16,[[37,[36]]]],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],0,[38,38],[[]],0,[[16,13,7],39],[[]],[[]],[[]],[[]],[[[10,[9]]],[[10,[4,9]]]],[[[10,[9]]],[[10,[4,9]]]],[11,[[11,[4]]]],[12,[[12,[4]]]],[12,[[12,[4]]]],[[13,7,[40,[36]]],16],[[]],0,[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],0,[[]],[[]],0,0,0,[13,[[42,[41]]]],[[],4],[[],4],[[]],[[]],[[43,13,44],42],0,[[]],[[]],[[[10,[9]]],[[10,[4,9]]]],[11,[[11,[4]]]],[12,[[12,[4]]]],[[],43],[[],24],[[],24],[[],25],[[]],0,0,0,0,0,0,0,0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[45,6,7]],0,0,0,0,[[45,13,7],[[21,[[7,[20]]]]]],[[]],[[]],[[]],[[]],0,[46,31],[[47,7],31],0,[[]],[[]],[[]],[[]],[[[10,[9]]],[[10,[4,9]]]],[[[10,[9]]],[[10,[4,9]]]],[[[10,[9]]],[[10,[4,9]]]],[[[10,[9]]],[[10,[4,9]]]],[11,[[11,[4]]]],[12,[[12,[4]]]],[12,[[12,[4]]]],[12,[[12,[4]]]],[12,[[12,[4]]]],0,0,[[47,13,7],48],[46,31],0,[[13,15,49,16],46],[[13,27,[37,[36]]],50],[[13,7,15,49,[40,[36]]],[[10,[17]]]],[[45,13,7]],0,0,[[46,13,7,36],[[42,[14]]]],0,0,0,0,0,0,0,[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[],25],[[],25],[[45,13,7,28]],[[50,13,7,3]],[[45,13,7]],[[45,13,7]],[[45,13,7]],0,[[]],[[]],[[]],[[]],0,0,0,[[],[[37,[15]]]],[[],4],[[],4],[[]],[[]],[15,15],[[]],0,[[],[[24,[15]]]],[[15,15],31],[[]],0,[[]],[[[10,[9]]],[[10,[4,9]]]],[11,[[11,[4]]]],[12,[[12,[4]]]],0,0,0,[[15,15],31],[15,24],0,0,0,[[]],[[],24],[[],24],[[],25],0,0,[[]],[[13,51,33,52],48],[[13,51,14,14],48],0,0,0,0,0,[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[53,18]],[[54,18],55],0,[[],53],[[53,6]],[[],53],[[53,13,31]],[[]],[[]],0,[[]],[[]],[[[10,[9]]],[[10,[4,9]]]],[[[10,[9]]],[[10,[4,9]]]],[12,[[12,[4]]]],[12,[[12,[4]]]],[54],[[13,31,18],[[55,[54]]]],0,0,[[53,56]],[[54,56]],[[13,31,18],53],0,[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[54],0,[[]],[[]],0,0,0,0,0,0,[[57,13,7,33,33,31],[[37,[36]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,[[]],[[]],[[]],[[]],[[]],[[]],[58,58],[[]],0,[[58,58],31],0,[[]],[[]],[[]],[57,41],[[58,7]],[57,3],[[]],[[]],[[]],[[[10,[9]]],[[10,[4,9]]]],[[[10,[9]]],[[10,[4,9]]]],[[[10,[9]]],[[10,[4,9]]]],[11,[[11,[4]]]],[11,[[11,[4]]]],[11,[[11,[4]]]],[12,[[12,[4]]]],[12,[[12,[4]]]],[12,[[12,[4]]]],[[58,58],31],[[13,7,59],57],[7,60],0,[[57,7],31],[[57,3]],0,0,[[57,7,3],[[42,[58]]]],[[60,61,22,22],[[37,[36]]]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[],25],[[57,13,7,44],[[37,[36]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[],4],[[],4],[[],4],[[],4],0,[[]],[[]],[[]],[[]],0,0,[[],[[24,[20]]]],[[],[[24,[62]]]],0,0,[[]],[[]],0,0,[[]],[[]],[[[10,[9]]],[[10,[4,9]]]],[[[10,[9]]],[[10,[4,9]]]],[11,[[11,[4]]]],[12,[[12,[4]]]],[12,[[12,[4]]]],0,0,[[],20],0,0,[[20,63,14],[[42,[[37,[63]]]]]],[20],0,[20,24],[62,24],0,[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[20],[[20,13]],0,0,0,0,0,[[]],[[]],0,0,[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[64,6,7]],[[65,6,7]],[[]],[[]],[[]],[[]],[[[10,[9]]],[[10,[4,9]]]],[[[10,[9]]],[[10,[4,9]]]],[11,[[11,[4]]]],[11,[[11,[4]]]],[12,[[12,[4]]]],[12,[[12,[4]]]],[[13,7,15,14],34],[[13,18,18],48],[[13,7,15,14],48],[[13,7],[[10,[17]]]],[13,[[10,[17]]]],[[64,13,7,18,19],[[21,[[7,[20]]]]]],[[65,13,7,18,19],[[21,[[7,[20]]]]]],[[64,13,7],[[21,[[7,[20]]]]]],[[65,13,7],[[21,[[7,[20]]]]]],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[13,7,15,14],48],[[]],[[]],0,[[49,66,27],34],[[],4],[[],4],[[]],[[]],0,[[]],[18,49],[[]],[[[10,[9]]],[[10,[4,9]]]],[11,[[11,[4]]]],[12,[[12,[4]]]],0,[[]],0,0,0,[[],24],[[],24],[[],25],[[]]],"p":[[3,"Settings"],[3,"RecordPath"],[3,"Pt2D"],[8,"Any"],[3,"Strategize"],[3,"GfxCtx"],[3,"SimpleApp"],[3,"Results"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"EventCtx"],[15,"usize"],[3,"Level"],[3,"Buildings"],[8,"State"],[15,"str"],[3,"Panel"],[3,"Session"],[4,"Transition"],[3,"Distance"],[3,"Tessellation"],[4,"Result"],[3,"TypeId"],[3,"Animator"],[3,"Time"],[3,"Duration"],[4,"Effect"],[3,"SnowEffect"],[15,"bool"],[3,"Snowflake"],[15,"f64"],[3,"GeomBatch"],[3,"Picker"],[3,"BuildingID"],[3,"Vec"],[4,"BldgState"],[3,"Drawable"],[3,"HashSet"],[3,"Angle"],[4,"Option"],[3,"InstantController"],[3,"Speed"],[3,"Game"],[3,"GameState"],[3,"MinimapController"],[3,"Widget"],[3,"Vehicle"],[3,"EnergylessArrow"],[3,"Color"],[3,"Text"],[3,"Music"],[3,"Inner"],[6,"Result"],[15,"f32"],[3,"Player"],[4,"On"],[3,"IntersectionID"],[3,"BuildingsAlongRoad"],[3,"RoadID"],[3,"ColorScheme"],[3,"String"],[3,"TitleScreen"],[3,"Credits"],[3,"Prerender"],[3,"Animation"],[13,"Flash"],[13,"Scale"],[13,"FollowPath"],[13,"Undelivered"],[13,"Intersection"],[13,"Road"]]},\
"sim":{"doc":"The sim crate runs a traffic simulation on top of the …","t":[12,12,12,13,4,3,4,4,4,3,13,13,17,17,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,3,4,3,13,13,3,3,13,4,13,3,3,3,3,13,4,17,13,13,4,13,13,13,13,17,13,13,17,17,13,13,13,13,13,13,13,13,13,13,13,3,13,13,4,13,4,13,13,3,13,13,3,13,3,4,2,13,4,4,13,17,3,13,4,3,13,3,8,3,3,3,3,13,13,3,13,13,13,13,13,13,13,13,3,3,13,3,4,4,3,3,3,4,13,13,12,12,12,11,12,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,12,12,12,12,0,11,11,12,12,12,12,12,0,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,12,12,12,12,0,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,5,11,12,11,12,12,12,12,12,12,12,12,11,12,12,0,12,12,11,12,5,12,0,12,0,12,12,0,12,10,12,12,12,12,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,12,11,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,0,12,12,12,12,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,13,13,13,13,13,13,13,13,13,13,4,4,3,3,3,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,12,12,12,12,11,11,11,12,12,11,11,12,11,12,11,11,11,12,12,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,4,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,2,0,0,6,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,5,12,12,11,11,11,11,11,13,13,3,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,5,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,3,4,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,11,11,11,12,12,11,11,11,11,11,11,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,17,17,3,17,17,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,3,3,3,3,17,17,12,12,11,5,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,12,11,11,11,11,12,11,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,12,11,11,11,11,11,12,11,13,3,13,3,3,8,4,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,10,11,11,11,10,11,11,11,10,11,11,11,10,11,11,11,10,11,11,11,10,11,11,11,10,11,11,11,11,10,11,11,11,10,11,11,11,10,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,10,11,11,11,10,11,11,11,10,11,11,11,12,12,11,11,11,11,12,12,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,12,12,13,3,3,4,13,13,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,12,12,12,12,12,12,13,13,13,13,13,13,4,3,13,17,17,13,13,3,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,11,11,11,11,11,12,12,12,12,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,2,13,13,18,3,13,13,13,13,18,13,13,2,18,13,13,13,4,4,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,12,12,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,13,13,4,3,3,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,12,12,11,11,11,11,11,11,12,11,5,12,11,12,11,11,11,11,3,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,13,4,3,3,3,4,13,13,13,13,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,4,13,13,13,13,13,4,13,13,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,4,4,13,13,3,13,13,13,13,13,3,4,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,2,4,17,13,3,2,13,13,3,8,3,11,11,11,11,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,5,5,11,0,2,11,12,10,12,12,11,11,11,11,0,12,12,11,11,11,11,11,11,12,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,13,3,4,13,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,12,12,12,5,5,5,5,5,5,5,5,5,13,3,4,13,13,13,3,6,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,13,13,13,13,13,3,4,13,3,13,13,13,13,3,4,3,13,4,13,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,12,12,12,11,11,12,11,11,11,11,11,11,12,11,12,11,11,12,12,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12],"n":["0","0","0","Agent","AgentID","AgentProperties","AgentType","AlertHandler","AlertLocation","Analytics","ArterialIntersectionCrossing","ArterialIntersectionCrossing","BIKE_LENGTH","BUS_LENGTH","Bike","Bike","BikeRack","Biking","BldgDriveway","Block","Border","Border","BorderSpawnOverTime","Building","Building","Bus","Bus","BusPassenger","Cancelled","Car","Car","Car","CarID","CarStatus","CommutersVehiclesCounts","ComplexIntersectionCrossing","ComplexIntersectionCrossing","CreateCar","CreatePedestrian","DeferredParkingSpot","DelayCause","DelayedStart","DistanceInterval","DrawCarInput","DrawPedCrowdInput","DrawPedestrianInput","Driving","DrivingGoal","FOLLOWING_DISTANCE","Finished","Inside","Intent","Intersection","Intersection","IntersectionDelay","IntersectionDelay","LIGHT_RAIL_LENGTH","Lot","LotDriveway","MAX_CAR_LENGTH","MIN_CAR_LENGTH","ModeChange","Moving","Nil","OffMap","Offstreet","Ok","Onstreet","OvertakeDesired","OvertakeDesired","ParkNear","Parked","ParkedCar","Parking","Parking","ParkingSpot","ParkingSpot","PedCrowdLocation","Pedestrian","Pedestrian","PedestrianID","PedestrianOvercrowding","PedestrianOvercrowding","Person","Person","PersonID","PersonState","PrebakeSummary","Print","Problem","ProblemType","RidingBus","SPAWN_DIST","ScenarioGenerator","Sidewalk","SidewalkPOI","SidewalkSpot","Silence","Sim","SimCallback","SimFlags","SimOptions","SlidingWindow","SpawnOverTime","SteepUphill","SuddenlyAppear","TimeInterval","Train","Train","TransitRider","TransitStop","Trip","TripCancelled","TripDoesntExist","TripDone","TripID","TripInfo","TripNotStarted","TripPhase","TripPhaseType","TripResult","UnzoomedAgent","Vehicle","VehicleSpec","VehicleType","WaitingForBus","Walking","alerts","alerts","alerts","all","allow_block_the_box","analytics","analytics","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_car","bike_rack","body","border_spawn_over_time","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","building","bus_arrivals","bus_riders","bus_stop","buses","cancellation_reason","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_box","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","connection","count_parked_cars_per_bldg","cyclists","deferred_parking_spot","delayed_trips","demand","departure","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","disable_turn_conflicts","dist_crossed","dont_break_turn_conflict_cycles","dont_handle_uber_turns","dont_recalc_lanechanging","driving","edits_name","empty","enable_pandemic_model","end","end","end","end_at_border","end_time","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","events","facing","finished_trips","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_appearing","for_parked_car","fork_rng","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","generate","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","goal","goal","goal","goal_pos","has_path_req","hash","hash","hash","hash","hash","hash","hash","high","highlighted_people","id","id","id","id","id","id","id","index","index","infinite_parking","intent","intent","intersection_delays","intersection_thruput","intersections","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_car","is_pedestrian","is_transit","label","length","length","length","lerp","load","load_path","location","low","make","make","make_router","map_name","max_speed","max_speed","maybe_parked_car","maybe_route","mechanics","members","mode","modified","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new_driving","new_walking","noun","num_agents","num_bikes","num_cars","num_peds","on","on","on_bus","ongoing_verb","only_seed_buses","opts","orig_id","owner","pandemic","pandemic","parked_since","parking","parking","parking_lane_changes","parking_lot_changes","parking_spot","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partly_on","passengers_alighting","passengers_boarding","path","path","ped","ped_speed","pedestrian_body_radius","percent","percent_biking","percent_clamp_end","percent_driving","percent_use_transit","percent_use_transit","person","person","person","person","phase_type","plural_noun","pos","pos","prebake","preparing_bike","problems_per_trip","proletariat_robot","purpose","rand_dist","record_anything","recorder","recorder","render","rng_seed","road_thruput","router","router","run","run_name","run_name","scenario_modifiers","scenario_name","scheduler","scheduler","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sidewalk_pos","sim","skip_analytics","small_run","sov_drivers","spawn_over_time","speed","spot","start","start","start","start","start_at_border","start_from_border","start_time","start_time","start_time","started_trips","state","status","step_count","stop_time","stop_time","suddenly_appear","time","times","to_constraints","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_type","to_vehicle_type","total_dist","total_time","total_waiting","traffic_signal_thruput","train_riders","trains","transit","transit","trip","trip_and_person","trip_log","trips","trips","trips","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","use_freeform_policy_everywhere","vehicle","vehicle","vehicle_type","vehicle_type","vehicle_type","vehicles","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","waiting_for_bus","waiting_for_turn","waiting_for_turn","waiting_here","walking","walking_commuters","walking_to_from_bike","walking_to_from_car","walking_to_from_transit","window_size","0","0","0","1","0","0","0","0","0","0","0","1","0","0","0","1","1","1","0","0","0","1","0","0","0","0","0","0","0","1","0","0","0","0","0","0","0","1","1","2","0","Analytics","ArterialIntersectionCrossing","ArterialIntersectionCrossing","ComplexIntersectionCrossing","ComplexIntersectionCrossing","IntersectionDelay","IntersectionDelay","OvertakeDesired","OvertakeDesired","PedestrianOvercrowding","PedestrianOvercrowding","Problem","ProblemType","SlidingWindow","TimeSeriesCount","TripPhase","active_agents","add","alerts","all","all_total_counts","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","both_finished_trips","bus_arrivals","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","close_off_pts","cmp","count","count","count_per_hour","counts","default","demand","deserialize","deserialize","deserialize","end_time","eq","eq","equivalent","event","export_csv","finished_trip_time","finished_trips","fmt","fmt","fmt","from","from","from","from","from","from","from","get_all_trip_phases","get_hash","get_trip_phases","has_path_req","hash","intersection_delays","intersection_thruput","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","name","ne","new","new","new","parking_lane_availability","parking_lane_changes","parking_lot_availability","parking_lot_changes","parking_spot_availability","partial_cmp","passengers_alighting","passengers_boarding","path","phase_type","point","problems_per_intersection","problems_per_lane","problems_per_trip","raw","raw_throughput","record","record_anything","record_demand","road_thruput","serialize","serialize","serialize","start_time","started_trips","times","to_owned","to_owned","to_owned","to_owned","total_for","total_for_by_time","total_for_with_agent_types","traffic_signal_thruput","trip_log","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","window_size","0","0","0","0","0","1","AgentEntersTraversable","Alert","AlertLocation","BikeStoppedAtSidewalk","Biking","Building","BusArrivedAtStop","BusDepartedFromStop","Cancelled","CarLeftParkingSpot","CarReachedParkingSpot","DelayedStart","Driving","Event","Finished","Intersection","IntersectionDelayMeasured","Nil","Parking","PassengerAlightsTransit","PassengerBoardsTransit","PathAmended","PedReachedParkingSpot","Person","PersonEntersBuilding","PersonEntersMap","PersonLeavesBuilding","PersonLeavesMap","ProblemEncountered","RidingBus","TripCancelled","TripFinished","TripPhaseStarting","TripPhaseType","WaitingForBus","Walking","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","describe","deserialize","deserialize","deserialize","eq","eq","eq","fmt","fmt","fmt","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","ne","ne","ne","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","2","2","2","2","2","2","2","2","2","3","3","3","3","3","4","blocked_time","mode","total_time","trip","0","0","1","1","2","SimFlags","load","spawner","ModifierList","RNG_SEED","SimFlags","as_any","as_any_mut","borrow","borrow_mut","clap","clone","clone_into","for_test","from","from_clap","initialize","into","into_any","into_any_arc","into_any_rc","load","load_path","load_synchronously","make_rng","opts","parse_modifiers","rng_seed","scenario_modifiers","to_owned","try_from","try_into","type_id","vzip","JustWalking","SpawningFailure","StartTripArgs","TripSpec","UsingBike","UsingParkedCar","UsingTransit","VehicleAppearing","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","driving_goal","end_sidewalk_spot","eq","eq","fmt","fmt","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_plan","maybe_new","ne","ne","retry_if_no_room","serialize","serialize","start_sidewalk_spot","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","use_vehicle","vzip","vzip","bike","car","error","goal","goal","goal","goal","goal","maybe_stop2","retry_if_no_room","route","start","start","start","start_bldg","start_pos","stop1","use_vehicle","use_vehicle","car","driving","intersection","parking","queue","walking","Car","CarState","ChangingLanes","Crossing","IdlingAtStop","Parking","Queued","Unparking","WaitingToAdvance","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","crossing_state","crossing_state_with_end_dist","deserialize","deserialize","fmt","fmt","from","from","get_draw_car","get_end_time","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_parking","last_steps","router","serialize","serialize","started_at","state","time_spent_waiting","to_owned","to_owned","total_blocked_time","trip_and_person","try_from","try_from","try_into","try_into","type_id","type_id","vehicle","vzip","vzip","wants_to_overtake","0","0","1","1","2","blocked_since","blocked_since","blocked_starts","dist_int","from","front","lc_time","new_dist","new_time","spot","steep_uphill","time_int","time_int","to","want_to_change_lanes","BLIND_RETRY_TO_CREEP_FORWARDS","BLIND_RETRY_TO_REACH_END_DIST","DrivingSimState","TIME_TO_CHANGE_LANES","TIME_TO_WAIT_AT_BUS_STOP","agent_properties","all_waiting_people","as_any","as_any_mut","borrow","borrow_mut","cars","clone","clone_into","collect_events","debug_car_json","debug_car_ui","debug_lane","debug_queue_lengths","delete_car","delete_car_internal","deserialize","does_car_exist","events","find_trips_to_edited_parking","find_vehicles_affected_by_live_edits","from","get_all_draw_cars","get_all_driving_paths","get_blocked_by_graph","get_car_front","get_draw_cars_on","get_owner_of_car","get_path","get_single_draw_car","get_unzoomed_agents","handle_live_edits","handle_uber_turns","into","into_any","into_any_arc","into_any_rc","new","new_crossing_state","percent_along_route","pick_overtaking_lane","queues","recalc_lanechanging","serialize","start_car_on_lane","target_lane_penalty","time_to_park_offstreet","time_to_park_onstreet","time_to_unpark_offstreet","time_to_unpark_onstreet","to_owned","trace_route","trim_last_steps","try_from","try_into","try_start_lc","type_id","update_car","update_car_with_distances","update_car_without_distances","update_follower","update_laggy_head","vehicle_waiting_to_spawn","vzip","waiting_to_spawn","wants_to_overtake","IntersectionSimState","Request","SignalState","State","WAIT_AT_STOP_SIGN","WAIT_BEFORE_YIELD_AT_TRAFFIC_SIGNAL","accepted","agent","agent_deleted_mid_turn","allow_block_the_box","approaching_leader","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blocked_by","blocked_by_someone_requests","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","break_turn_conflict_cycles","cancel_request","check_for_conflicts_before_uber_turn","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","collect_events","current_stage","current_stage_and_remaining_time","debug_json","delayed_intersections","describe_stats","deserialize","deserialize","deserialize","deserialize","detect_conflict_cycle","disable_turn_conflicts","dont_block_the_box","eq","equivalent","events","extensions_count","fmt","fmt","fmt","from","from","from","from","get_accepted_agents","get_waiting_agents","handle_accepted_conflicts","handle_live_edited_traffic_signals","handle_live_edits","handle_uber_turns","id","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","leader_eta","maybe_start_turn","ne","new","new","nobody_headed_towards","not_allowed_requests","partial_cmp","populate_blocked_by","reserved","serialize","serialize","serialize","serialize","signal","space_freed","stage_ends_at","state","stop_sign_policy","to_owned","to_owned","to_owned","to_owned","total_repeat_requests","traffic_signal_policy","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","turn","turn_finished","type_id","type_id","type_id","type_id","uber_turn_neighbors","update_intersection","use_freeform_policy_everywhere","vehicle_gone","vzip","vzip","vzip","vzip","waiting","wakeup_waiting","Infinite","InfiniteParkingSimState","Normal","NormalParkingSimState","ParkingLane","ParkingSim","ParkingSimState","add_parked_car","add_parked_car","add_parked_car","add_parked_car","all_parked_car_positions","all_parked_car_positions","all_parked_car_positions","all_parked_car_positions","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blackholed_building_redirects","bldg_to_parked_cars","bldg_to_parked_cars","bldg_to_parked_cars","bldg_to_parked_cars","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonical_pt","canonical_pt","canonical_pt","canonical_pt","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","collect_events","collect_events","collect_events","collect_events","deserialize","deserialize","deserialize","deserialize","dist_along_for_car","driving_lane","driving_to_lots","driving_to_offstreet","driving_to_offstreet","driving_to_parking_lanes","events","events","from","from","from","from","from","from","get_all_draw_cars","get_all_draw_cars","get_all_draw_cars","get_all_draw_cars","get_all_free_spots","get_all_free_spots","get_all_free_spots","get_all_free_spots","get_all_parking_spots","get_all_parking_spots","get_all_parking_spots","get_all_parking_spots","get_car_at_spot","get_car_at_spot","get_car_at_spot","get_car_at_spot","get_draw_car","get_draw_car","get_draw_car","get_draw_car","get_draw_cars","get_draw_cars","get_draw_cars","get_draw_cars","get_draw_cars_in_lots","get_draw_cars_in_lots","get_draw_cars_in_lots","get_draw_cars_in_lots","get_free_bldg_spot","get_free_lot_spots","get_free_lot_spots","get_free_lot_spots","get_free_lot_spots","get_free_offstreet_spots","get_free_offstreet_spots","get_free_offstreet_spots","get_free_offstreet_spots","get_free_onstreet_spots","get_free_onstreet_spots","get_free_onstreet_spots","get_free_onstreet_spots","get_owner_of_car","get_owner_of_car","get_owner_of_car","get_owner_of_car","handle_live_edits","handle_live_edits","handle_live_edits","handle_live_edits","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_free","is_free","is_free","is_free","is_infinite","lookup_parked_car","lookup_parked_car","lookup_parked_car","lookup_parked_car","new","new","new","new","num_occupants_per_offstreet","num_spots_per_lot","num_spots_per_offstreet","occupants","occupants","onstreet_lanes","parked_cars","parked_cars","parking_lane","path_to_free_parking_spot","path_to_free_parking_spot","path_to_free_parking_spot","path_to_free_parking_spot","remove_parked_car","remove_parked_car","remove_parked_car","remove_parked_car","reserve_spot","reserve_spot","reserve_spot","reserve_spot","reserved_spots","reserved_spots","serialize","serialize","serialize","serialize","sidewalk","spot_dist_along","spot_to_driving_pos","spot_to_driving_pos","spot_to_driving_pos","spot_to_driving_pos","spot_to_sidewalk_pos","spot_to_sidewalk_pos","spot_to_sidewalk_pos","spot_to_sidewalk_pos","spots","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unreserve_spot","unreserve_spot","unreserve_spot","unreserve_spot","vzip","vzip","vzip","vzip","0","0","DynamicBlockage","Queue","QueueEntry","Queued","StaticBlockage","Vehicle","add_static_blockage","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","back","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","can_block_from_driveway","clear_dynamic_blockage","clear_static_blockage","clone","clone","clone","clone_into","clone_into","clone_into","deserialize","deserialize","dump_cars","eq","fmt","fmt","fmt","free_reserved_space","from","from","from","front","geom_len","get_active_cars","get_car_positions","get_idx_to_insert_car","get_last_car_position","get_leader","id","inner_get_last_car_position","insert_car_at_idx","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_car_at_front","is_overflowing","laggy_head","member","members","move_first_car_to_laggy_head","ne","new","push_car_onto_end","remove_car_from_idx","replace_car_with_dynamic_blockage","reserved_length","room_for_car","serialize","serialize","target_lane_penalty","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_to_reserve_entry","type_id","type_id","type_id","validate_positions","vzip","vzip","vzip","0","back","cause","cause","front","vehicle_len","Crossing","EnteringBuilding","EnteringParkingLot","FinishingBiking","LeavingBuilding","LeavingParkingLot","PedState","Pedestrian","StartingToBike","TIME_TO_FINISH_BIKING","TIME_TO_START_BIKING","WaitingForBus","WaitingToTurn","WalkingSimState","agent_properties","all_waiting_people","area","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","collect_events","crossing_state","crowdedness_penalty","debug_ped_json","delete_ped","deserialize","deserialize","deserialize","events","find_crowds","find_trips_to_parking","fmt","from","from","from","get_all_draw_peds","get_dist_along","get_draw_ped","get_draw_ped","get_draw_peds_on","get_end_time","get_path","get_pedestrian_density","get_unzoomed_agents","goal","id","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","maybe_transition","new","path","ped_boarded_bus","peds","peds_per_traversable","person","populate_commuter_counts","serialize","serialize","serialize","spawn_ped","speed","start","started_at","state","time_spent_waiting","to_owned","to_owned","to_owned","total_blocked_time","trace_route","trip","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_ped","vzip","vzip","vzip","0","0","0","0","0","0","0","0","1","1","1","1","1","1","1","1","2","2","dist_int","steep_uphill","time_int","0","AnyTime","Cmd","Dead","Death","E_RATIO","Event","Exposed","Exposition","Hospitalization","Hospitalized","I_RATIO","Incubation","Infectious","PandemicModel","R_0","Recovered","Recovery","Sane","State","StateEvent","T_INC","T_INF","add","add_assign","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_event_time","get_time","get_time_exp","get_time_normal","ini_exposed_ratio","ini_infectious_ratio","inner_seconds","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_dead","is_exposed","is_finite","is_infectious","is_recovered","is_sane","model","ne","new","next","next","next_default","p_death","p_hosp","partial_cmp","s","start","sub","sub","t","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","0","0","0","0","0","0","BecomeHospitalized","BecomeQuarantined","Cmd","PandemicModel","SharedSpace","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","become_exposed","bldgs","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bus_stops","buses","clone","clone","clone","clone_into","clone_into","clone_into","cmp","count_dead","count_exposed","count_infected","count_recovered","count_sane","count_total","deserialize","eq","equivalent","fmt","from","from","from","get_hash","get_time","handle_cmd","handle_event","hash","infectious_contact","initialize","initialized","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_dead","is_exposed","is_infectious","is_recovered","is_sane","ne","new","new","occupants","partial_cmp","person_enters_space","person_leaves_space","person_to_bus","pop","rng","serialize","to_owned","to_owned","to_owned","transition","transmission","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","PrebakeSummary","as_any","as_any_mut","borrow","borrow_mut","cancelled_trips","finished_trips","fmt","from","into","into_any","into_any_arc","into_any_rc","map","new","prebake","scenario","serialize","total_trip_duration_seconds","try_from","try_into","type_id","vzip","TrafficRecorder","as_any","as_any_mut","borrow","borrow_mut","capture_points","clone","clone_into","from","handle_event","into","into_any","into_any_arc","into_any_rc","new","num_recorded_trips","on_car_enters_lane","on_car_enters_traversable","save","seen_trips","to_owned","trips","try_from","try_into","type_id","vzip","BldgDriveway","CarStatus","DrawCarInput","DrawPedCrowdInput","DrawPedestrianInput","Intent","LotDriveway","Moving","Parked","Parking","PedCrowdLocation","Sidewalk","SteepUphill","UnzoomedAgent","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","equivalent","facing","from","from","from","from","from","from","from","high","id","id","id","intent","intent","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","label","location","low","members","on","on","parking","partly_on","person","person","person","pos","pos","preparing_bike","status","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","waiting_for_bus","waiting_for_turn","waiting_for_turn","0","0","0","1","ActionAtEnd","BikeThenStop","BusAtStop","EndAtBorder","FollowTransitRoute","GiveUpOnParking","Goal","GotoLaneEnd","ParkNearBuilding","Router","StartParking","StopBiking","VanishAtBorder","advance","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","bike_then_stop","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","can_lanechange","clone","clone","clone_into","clone_into","confirm_lanechange","deserialize","deserialize","end_at_border","eq","eq","fmt","fmt","fmt","follow_bus_route","from","from","from","get_end_dist","get_parking_spot_goal","get_path","goal","head","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_parking","last_step","maybe_handle_end","maybe_next","ne","ne","next","opportunistically_lanechange","owner","park_near","path","serialize","serialize","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","0","end_dist","end_dist","goal","i","spot","started_looking","stuck_end_dist","target","Callback","Callback","Callback","Car","Car","CarLaggyHead","CarLaggyHead","Command","CommandType","Intersection","Intersection","Item","Pandemic","Pandemic","Pandemic","Ped","Ped","Scheduler","SimpleCommandType","SpawnCar","SpawnPed","StartBus","StartBus","StartBus","StartTrip","StartTrip","StartTrip","UpdateCar","UpdateIntersection","UpdateLaggyHead","UpdatePed","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmd_type","cmd_type_counts","cmp","cmp","cmp","delta_times","describe_stats","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","get_hash","get_last_time","get_next","hash","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","items","last_time","latest_time","ne","ne","ne","new","partial_cmp","partial_cmp","partial_cmp","peek_next_time","push","queued_commands","serialize","serialize","serialize","serialize","time","to_owned","to_owned","to_owned","to_owned","to_owned","to_simple_type","to_type","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update","update_agent","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","1","1","1","0","0","0","0","0","0","0","1","AgentProperties","AlertHandler","BLIND_RETRY_TO_SPAWN","Block","Ctx","DelayCause","Print","Silence","Sim","SimCallback","SimOptions","active_agents","agent_properties","agent_to_person","agent_to_trip","alerts","alerts","all_arrivals_at_border","all_parked_car_positions","all_trip_info","all_waiting_people","allow_block_the_box","analytics","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bldg_to_parked_cars","bldg_to_people","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bus_route_id","canonical_pt_for_agent","clap","clear_alerts","clone","clone","clone","clone_into","clone_into","clone_into","count_parked_cars_per_bldg","current_stage_and_remaining_time","debug_agent_json","debug_car","debug_car_ui","debug_intersection_json","debug_lane","debug_ped","debug_queue_lengths","default","default","delayed_intersections","delete_car","describe_internal_stats","deserialize","disable_turn_conflicts","dispatch_events","do_step","dont_break_turn_conflict_cycles","dont_handle_uber_turns","dont_recalc_lanechanging","downcast","downcast_mut","downcast_rc","downcast_ref","driving","dump_before_abort","edits_name","enable_pandemic_model","find_next_savestate","find_person_by_orig_id","find_previous_savestate","find_trips_affected_by_live_edits","finished_trip_details","from","from","from","from","from_clap","generate_scenario","get_accepted_agents","get_all_draw_cars","get_all_draw_peds","get_all_driving_paths","get_all_parking_spots","get_all_people","get_analytics","get_blocked_by_graph","get_canonical_pt_per_person","get_canonical_pt_per_trip","get_draw_car","get_draw_cars","get_draw_ped","get_draw_peds","get_end_of_day","get_free_lot_spots","get_free_offstreet_spots","get_free_onstreet_spots","get_highlighted_people","get_owner_of_car","get_pandemic_model","get_path","get_pedestrian_density","get_people_waiting_at_stop","get_person","get_run_name","get_trip_time_lower_bound","get_unzoomed_agents","get_unzoomed_transit_riders","get_waiting_agents","handle_live_edited_traffic_signals","handle_live_edits","handling_live_edits","highlighted_people","infinite_parking","infinite_parking","instantiate","instantiate_without_retries","intersections","intersections","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is","is_done","is_empty","load_savestate","lookup_car_id","lookup_parked_car","lookup_person","map","map_name","minimal_step","new","new","new_person","num_active_agents","num_agents","num_commuters_vehicles","num_ppl","num_recorded_trips","num_transit_passengers","num_trips","pandemic","parking","parking","parse_alert_handler","parse_rng","person_to_agent","queries","rand_dist","record_traffic_for","recorder","run","run_name","run_name","save","save_dir","save_path","save_recorded_traffic","scenario","scheduler","scheduler","seed_bus_route","seed_parked_car","serialize","set_highlighted_people","set_periodic_callback","set_run_name","skip_analytics","spawn_trips","start_bus","status_of_buses","step_count","step_count","target_lane_penalty","time","time","time_limited_step","timed_step","tiny_step","to_owned","to_owned","to_owned","trace_route","transit","trip_blocked_time","trip_info","trip_to_agent","trip_to_person","trips","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unset_periodic_callback","use_freeform_policy_everywhere","vzip","vzip","vzip","vzip","walking","walking_path_to_nearest_parking_spot","Agent","AgentProperties","DelayCause","Intersection","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","dist_crossed","eq","equivalent","fmt","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","ne","partial_cmp","serialize","to_owned","total_dist","total_time","total_waiting","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","waiting_here","0","0","count_parked_cars_per_bldg","find_spot_near_building","get_vehicles","rand_bike","rand_car","rand_dist","rand_ped_speed","rand_speed","seed_parked_cars","AtStop","Bus","BusState","DrivingOffMap","DrivingToStop","Finished","Route","StopIdx","TransitSimState","active_vehicles","active_vehicles","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bus_arrived_at_stop","bus_created","bus_departed_from_stop","bus_route","buses","buses_for_route","car","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","collect_events","create_empty_route","deserialize","deserialize","deserialize","deserialize","events","from","from","from","from","get_passengers","get_people_waiting_at_stop","get_unzoomed_transit_riders","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","new","passengers","paths","ped_waiting_for_bus","peds_waiting","route","routes","serialize","serialize","serialize","serialize","state","stops","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","0","0","CommutersVehiclesCounts","Drive","Inside","ModeChange","OffMap","Ok","Person","PersonState","RideBus","Trip","Trip","TripCancelled","TripDoesntExist","TripDone","TripInfo","TripLeg","TripManager","TripNotStarted","TripResult","Walk","active_agents","active_agents_and_trips","active_trip_mode","agent_starting_trip_leg","agent_to_trip","all_arrivals_at_border","all_trip_info","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","assert_walking_leg","bike_reached_end","bldg_to_people","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bus_riders","buses","cancel_trip","cancel_unstarted_trip","cancellation_reason","car_id_counter","car_or_bike_reached_border","car_reached_parking_spot","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","collect_events","cyclists","debug_trip","delayed_trips","departure","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","end","eq","eq","events","finished_at","finished_trip_details","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","generate_scenario","get_all_people","get_person","get_vehicle","id","id","info","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_done","legs","mode","modified","ne","ne","new","new_car_id","new_person","new_trip","num_active_agents","num_agents","num_commuters_vehicles","num_ppl","num_trips","ok","on_bus","orig_id","ped","ped_boarded_bus","ped_reached_border","ped_reached_building","ped_reached_bus_stop","ped_reached_parking_spot","ped_ready_to_bike","ped_speed","people","person","person_left_bus","propagate_error","purpose","serialize","serialize","serialize","serialize","serialize","serialize","sov_drivers","spawn_ped","start","start_delayed_trip","start_trip","started","state","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_blocked_time","total_distance","train_riders","trains","transit_rider_reached_border","trip_abruptly_cancelled","trip_blocked_time","trip_finished","trip_info","trip_to_agent","trip_to_person","trips","trips","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unfinished_trips","vehicles","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walking_commuters","walking_to_from_bike","walking_to_from_car","walking_to_from_transit","0","0","0","0","0","1","1","0"],"q":["sim","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::AgentID","","","","sim::AlertLocation","","","sim::DelayCause","","sim::DrivingGoal","","","sim::ParkingSpot","","","","","","sim::PedCrowdLocation","","","","sim::PersonState","","sim::Problem","","","","","","sim::SidewalkPOI","","","","","sim::TripPhaseType","","","","","sim::TripResult","sim::analyticssim::analytics::Problem","","","","","","sim::events","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::events::AlertLocation","","","sim::events::Event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::events::TripPhaseType","","","","","sim::make","","","sim::make::load","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::make::spawner","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::make::spawner::TripSpec","","","","","","","","","","","","","","","","","","","sim::mechanics","","","","","","sim::mechanics::car","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::mechanics::car::CarState","","","","","","","","","","","","","","","","","","","","sim::mechanics::driving","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::mechanics::intersection","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::mechanics::parkingsim::mechanics::parking::ParkingSimState","","sim::mechanics::queue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::mechanics::queue::Queued","","","","","","sim::mechanics::walking","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::mechanics::walking::PedState","","","","","","","","","","","","","","","","","","","","","sim::pandemic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::pandemic::State","","","","","","sim::pandemic::model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::pandemic::model::Cmd","","sim::prebake","","","","","","","","","","","","","","","","","","","","","","","sim::recorder","","","","","","","","","","","","","","","","","","","","","","","","","","sim::render","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::render::PedCrowdLocation","","","","sim::router","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::router::ActionAtEnd","","","sim::router::Goal","","","","","","","","sim::scheduler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::scheduler::Command","","","","","","","","","","","","","sim::scheduler::CommandType","","","","","","","","sim::simsim::sim::queries","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::sim::queries::DelayCause","","sim::sim::scenario","","","","","","","","","sim::transit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::transit::BusState","","sim::tripssim::trips::PersonState","","sim::trips::TripLeg","","","","","sim::trips::TripResult"],"d":["","","","Queued behind someone, or someone’s doing a conflicting …","","","","","","As a simulation runs, different pieces emit Events. The …","A pedestrian crossed an intersection with an Arterial …","","","","","","The bikeable position","","","Print the alert to STDOUT and don’t proceed until the UI …","","","","","","","","","","","","","","","The number of active vehicles and commuters, broken into …","A cyclist crossed an intersection with &gt;4 connecting roads.","","","","Don’t actually know where this goes yet!","Why is an agent delayed? If there are multiple reasons, …","","","","","","","","At all speeds (including at rest), cars must be at least …","","","Shows an agent’s current inner intention or thoughts.","","Waiting on a traffic signal to change, or pausing at a …","A vehicle waited &gt;30s, or a pedestrian waited &gt;15s.","","","","","","","","","","","Building and idx (pretty meaningless)","","Lane and idx","Another vehicle wanted to over-take this cyclist somewhere …","","","","","","","","Note that for offstreet parking, the path will be the same …","","","","","Too many people are crossing the same sidewalk or …","","","","","","","Just print the alert to STDOUT","","","What stop did they board at?","When spawning at borders, start the front of the vehicle …","","bool is contraflow","Point of interest, that is","","Don’t do anything","The Sim ties together all the pieces of the simulation. …","","SimFlags specifies a simulation to setup. After parsing …","Options controlling the traffic simulation.","A sliding window, used to count something over time","","","","","","","","","","","","","","","","","","","","","","","","","","","When a warning is encountered during simulation, specifies …","","Allow a vehicle to start a turn, even if their target lane …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pretty hacky case","","Most fields in Analytics are cumulative over time, but …","Scheduled departure; the start may be delayed if the …","","","","","","","","","","","","","","","","","","","","","","Allow all agents to immediately proceed into an …","","Normally if a cycle of vehicles depending on each other to …","Disable experimental handling for “uber-turns”, …","Normally as a vehicle follows a route, it …","","","","Enable an experimental SEIR pandemic model. This requires …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Finish time, ID, mode, trip duration if successful (or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Need to explain this trick – basically keeps consistency …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","The numeric ID must be globally unique, without …","","","","","Ignore parking data in the map and instead treat every …","","","Only for traffic signals. The u8 is the movement index …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The same as <code>load_path</code>, but with a default value filled …","A path to some file:","","","Everything needed to setup a simulation.","","","","","","","","","","","Did a ScenarioModifier apply to this?","","","","","","","","","","","","","","","","","","","","","","","","","","Front of the car","","","","","","","An experimental SEIR model by …","","","True only for cars currently looking for parking. I don’…","","Per parking lane or lot, when does a spot become filled …","","","","","","","","","","","","Possibly the rest","","For each passenger boarding, how long did they wait at the …","","","","","","","","","","","","None means a bus.","","None means a bus or parked car. Note parked cars do NOT …","","","","","","","","Record different problems that each trip encounters.","Designed in …","","","For benchmarking, we may want to disable collecting data.","","","Intermediate structures so that sim and game crates don’…","An arbitrary number to seed the random number generator. …","","For vehicles only, not pedestrians. Follows a Path from …","","","","Used to distinguish savestates for running the same …","A JSON list of modifiers to transform the scenario. These …","","","","","","","","","","","","","","","","","","","","","","","","","","","Don’t collect any analytics. Only useful for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","None for buses","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ignore all stop signs and traffic signals, instead using a …","","","VehicleType is bundled for convenience; many places need …","","","Both cars and bikes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","As a simulation runs, different pieces emit Events. The …","A pedestrian crossed an intersection with an Arterial …","","A cyclist crossed an intersection with &gt;4 connecting roads.","","A vehicle waited &gt;30s, or a pedestrian waited &gt;15s.","","Another vehicle wanted to over-take this cyclist somewhere …","","Too many people are crossing the same sidewalk or …","","","","A sliding window, used to count something over time","See https://github.com/a-b-street/abstreet/issues/85","","","Returns the count at time","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns pairs of trip times for finished trips in both …","","","","","","","","","","Ensure the points cover up to <code>end_time</code>. The last event may …","","Grab the count at this time, but don’t add a new time","","","(Road or intersection, type, hour block) -&gt; count for that …","","Most fields in Analytics are cumulative over time, but …","","","","","","","","","Returns the contents of a CSV file","Ignores the current time. Returns None for cancelled trips.","Finish time, ID, mode, trip duration if successful (or …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","If calling on prebaked Analytics, be careful to pass in an …","","","Only for traffic signals. The u8 is the movement index …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the free spots over time","Per parking lane or lot, when does a spot become filled …","","","","","","For each passenger boarding, how long did they wait at the …","","","Returns the rough location where the problem occurred – …","","","Record different problems that each trip encounters.","Very expensive to store, so it’s optional. But useful to …","","","For benchmarking, we may want to disable collecting data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If the agent is a transit vehicle, then include a count of …","","","","","","","","","","","","","As a simulation runs, different systems emit Events. This …","","","TripID, TurnID (Where the delay was encountered), Time …","","","","How long waiting at the stop?","Just use for parking replanning. Not happy about copying …","","","","","","None if cancelled","","What stop did they board at?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Intermediate structures used to instantiate a Scenario. …","","","SimFlags specifies a simulation to setup. After parsing …","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","The same as <code>load_path</code>, but with a default value filled …","A path to some file:","Loads a map and simulation. Not appropriate for use in the …","","","","An arbitrary number to seed the random number generator. …","A JSON list of modifiers to transform the scenario. These …","","","","","","","Something went wrong spawning the trip.","We need to remember a few things from scenario …","","","","","Can be used to spawn from a border or anywhere for …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Turn an origin/destination pair and mode into a specific …","","","","","","","","","","","","","","","","","","","This must be a currently parked vehicle owned by the …","","","","","","","","","","","","","","","","This must be a currently off-map vehicle owned by the …","","","","","","","","Represents a single vehicle. Note “car” is a misnomer; …","See …","","","","","","Where’s the front of the car while this is happening?","","","","","","","","","","","","","","Assumes the current head of the path is the thing to cross.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","In reverse order – most recently left is first. The sum …","","","","","","","","","","None for buses","","","","","","","","","","Since lane over-taking isn’t implemented yet, a vehicle …","","","","","","","","","","","","","","","","","","","","","","","Simulates vehicles!","","","","","","","","","","","","","","","","","Abruptly remove a vehicle from the simulation. They may be …","","","","","","Finds vehicles that’re laggy heads on affected parts of …","Returns the argument unchanged.","Note the ordering of results is non-deterministic!","","","","","","","This is about as expensive as get_draw_cars_on.","Note the ordering of results is non-deterministic!","","","Calls <code>U::from(self)</code>.","","","","","","","If the car wants to over-take somebody, what adjacent lane …","","","","None if it worked, otherwise returns the CreateCar …","","","","","","","","","","","","","State transitions for this car:","","","After a leader (maybe an active vehicle, maybe a static …","","If start_car_on_lane fails and a retry is scheduled, this …","","","Does the given car want to over-take the vehicle in front …","Manages conflicts at intersections. When an agent has …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","For deleting cars","See if any agent is currently performing a turn that …","","","","","","","","","","","","","","Returns intersections with travelers waiting for at least …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","For cars: The head car calls this when they’re at the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is only triggered for traffic signals.","","Vanished at border, stopped biking, etc – a vehicle …","","","","","","","","This assigns infinite private parking to all buildings and …","","","","Manages the state of parked cars. There are two …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","There’s no DrawCarInput for cars parked offstreet, so we …","There’s no DrawCarInput for cars parked offstreet, so we …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","The vehicle’s front is currently at the given …","The vehicle’s front is currently at the given …","","","(Filled, available)","(Filled, available)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns any cars that got very abruptly evicted from …","Returns any cars that got very abruptly evicted from …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Counterintuitive: any spots located in blackholes are just …","","","","","","","","","","","","","Unrealistically assumes the driver has knowledge of …","Unrealistically assumes the driver has knowledge of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Needed when abruptly deleting a car, in case they’re …","Needed when abruptly deleting a car, in case they’re …","","","","","","","","","This follows whatever’s in front of it","A Queue of vehicles on a single lane or turn. This is where","The exact position of something in a <code>Queue</code> at some time","A member of a <code>Queue</code>.","Something occupying a fixed interval of distance on the …","A regular vehicle trying to move forwards","Record that a car is blocking a static portion of the …","","","","","","","Not including FOLLOWING_DISTANCE","","","","","","","True if a static blockage can be inserted into the queue …","Record that a car is no longer blocking a dynamic portion …","Record that a car is no longer blocking a static portion …","","","","","","","","","","","","","","Once a car has fully exited a queue, free up the space it …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","How long the lane or turn physically is.","Get all cars in the queue, not including the laggy head or …","Return the exact position of each member of the queue. The …","If the specified car can appear in the queue, return the …","Get the front of the last car in the queue.","Find the vehicle in front of the specified input. None if …","","Returns the front of the last car in the queue, only if …","Record that a car has entered a queue at a position. This …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","If a car thinks it’s reached the end of the queue, …","True if the reserved length exceeds the physical length. …","This car’s back is still partly in this queue.","","","Change the first car in the queue to the laggy head, …","","","Record that a car has entered a queue at the end. It’s …","Remove a car from a position. Need to separately do …","Record that a car is starting to change lanes away from …","When a car’s turn is accepted, reserve the vehicle …","Can a car start a turn for this queue?","","","Return a penalty for entering this queue, as opposed to …","","","","","","","","","","If true, there’s room and the car must actually start …","","","","","","","","","","This vehicle is exiting a driveway and cutting across a …","This vehicle is in the middle of changing lanes","","","","","","","","","","","","","","","The Distance is either 0 or the current traversable’s …","Simulates pedestrians. Unlike vehicles, pedestrians can …","","","","","","","","","","","","","","","","","","","","","","","","Returns a number in (0, 1] to multiply speed by to account …","","Abruptly remove a pedestrian from the simulation. They may …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Simulate a curated list of scenarios to completion, and …","","","","","","","","Records trips beginning and ending at a specified set of …","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Shows an agent’s current inner intention or thoughts.","","","","","","bool is contraflow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Front of the car","True only for cars currently looking for parking. I don’…","Possibly the rest","None means a bus.","","None means a bus or parked car. Note parked cars do NOT …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Spot and cached distance along the last driving lane","","","","","Returns the step just finished","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Called when the car is Queued at the last step, or when …","","","","","","","","Front is always the current step","","","","","","","","","","","","","","","","","","","","","","","","","","No parking available at all!","","","","","","","","","","A smaller version of Command that satisfies many more …","","","","","","","","","The priority queue driving the discrete event simulation. …","A more compressed form of CommandType, just used for …","If true, retry when there’s no room to spawn somewhere","","The Time is redundant, just used to dedupe commands","","","","","","","","Distinguish this from UpdateCar to avoid confusing things","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","This API is safer than handing out a batch of items at a …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","This next command might’ve actually been rescheduled to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Print the alert to STDOUT and don’t proceed until the UI …","","","Just print the alert to STDOUT","Don’t do anything","The Sim ties together all the pieces of the simulation. …","","Options controlling the traffic simulation.","","Only call for active agents, will panic otherwise","","","","When a warning is encountered during simulation, specifies …","","For every parked car, (position of parking spot, position …","","","Allow a vehicle to start a turn, even if their target lane …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return a short string to debug a car in the UI.","","","","","","","For intersections with an agent waiting beyond some …","","","","Allow all agents to immediately proceed into an …","","","Normally if a cycle of vehicles depending on each other to …","Disable experimental handling for “uber-turns”, …","Normally as a vehicle follows a route, it …","Returns a boxed object from a boxed trait object if the …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","","","","Enable an experimental SEIR pandemic model. This requires …","","","","Returns (trips affected, number of parked cars displaced)","If trip is finished, returns (total time, total waiting …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","(Filled, available)","","","For every agent that’s currently not moving, figure out …","","","","","","","","","","","","","","","Returns people / m^2. Roads have up to two sidewalks and …","","","","Returns the best-case time for a trip in a world with no …","This does not include transit riders. Some callers need …","","","","Respond to arbitrary map edits without resetting the …","If present, live map edits are being processed, and the …","","","Ignore parking data in the map and instead treat every …","","If retry_if_no_room is false, any vehicles that fail to …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns true if the trait object wraps an object of type …","","","","","","","","","","","","","","","","(total number of people, just in buildings, just off map)","","","(number of finished trips, number of unfinished trips)","","","","","","","All sorts of read-only queries about a simulation","","","","","","Used to distinguish savestates for running the same …","","","","","","","","","","","","Only one at a time supported.","","Don’t collect any analytics. Only useful for …","","","(bus, stop index it’s coming from, percent to next stop, …","","","(number of vehicles in the lane, penalty if a bike or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ignore all stop signs and traffic signals, instead using a …","","","","","","","Queued behind someone, or someone’s doing a conflicting …","","Why is an agent delayed? If there are multiple reasons, …","Waiting on a traffic signal to change, or pausing at a …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Manages public transit vehicles (buses and trains) that …","(buses, trains)","","","","","","","","","","","","","","","","","","If true, the bus is idling. If false, the bus actually …","","","","","also stop idx that the bus is coming from","","","","","","","","","","","Returns the path for the first leg.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Where does each passenger want to deboard?","","Returns the bus if the pedestrian boarded immediately.","waiting at =&gt; (ped, route, bound for, started waiting)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The number of active vehicles and commuters, broken into …","A person may own many vehicles, so specify which they use","","","","","","","Maybe get off at a stop, maybe ride off-map","","","","","","","These don’t specify where the leg starts, since it might …","Manages people, each of which executes some trips through …","","","","","","","This is idempotent to handle the case of cars retrying …","This will be None for parked cars and buses. Should always …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cancel a trip after it’s started. The person will be …","Cancel a trip before it’s started. The person will stay …","","","","","","","","","","","","","","","","","","","","","Scheduled departure; the start may be delayed if the …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Recreate the Scenario from an instantiated simulation. The …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Did a ScenarioModifier apply to this?","","","","","","","","","","","","","","","","","","","If no route is returned, the pedestrian boarded a bus …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Both cars and bikes","","","","","","","","","","","","","","","","","","","",""],"i":[14,15,16,150,0,0,0,0,0,0,65,60,0,0,1,17,23,75,122,143,22,23,0,74,23,1,17,4,75,4,1,17,0,0,0,65,60,0,0,23,0,75,0,0,0,0,75,0,0,75,157,0,74,150,65,60,0,20,122,0,0,146,134,74,157,20,146,20,65,60,22,134,0,75,135,0,23,0,4,1,0,65,60,0,74,0,0,0,143,0,0,75,0,0,122,0,0,143,0,0,0,0,0,0,135,23,0,1,17,1,23,157,146,146,146,0,0,146,0,0,0,0,0,0,0,75,75,58,55,97,1,97,0,55,11,12,13,5,14,4,1,15,15,16,17,18,19,20,21,22,8,23,24,25,26,27,11,12,13,5,14,4,1,15,16,17,18,19,20,21,22,8,23,24,25,26,27,4,8,88,11,11,12,13,5,14,4,1,15,16,17,18,19,20,21,22,8,23,24,25,26,27,11,12,13,5,14,4,1,15,16,17,18,19,20,21,22,8,23,24,25,26,27,8,58,124,8,124,149,11,12,13,5,14,4,1,15,16,17,18,19,20,21,22,8,23,24,25,26,27,15,11,12,13,5,14,4,1,15,16,17,18,19,20,21,22,8,23,24,25,26,27,5,14,4,1,15,16,17,20,23,8,0,124,8,147,58,149,11,12,13,5,14,4,1,15,16,17,18,19,20,21,22,8,23,24,25,26,27,97,90,97,97,97,55,55,11,97,149,24,25,8,69,5,14,4,1,15,16,17,18,19,20,21,22,8,23,24,25,26,27,5,14,4,1,15,16,17,20,22,23,0,123,58,11,12,13,5,5,14,14,4,4,1,15,15,16,16,17,17,18,19,20,21,22,8,23,24,25,26,27,27,27,0,11,12,13,5,14,4,1,15,16,17,18,19,20,21,22,8,23,24,25,26,27,11,5,14,4,1,15,16,17,12,13,26,22,69,5,14,4,1,15,16,17,158,55,96,123,88,147,5,18,26,5,14,97,123,88,58,58,55,11,12,13,5,14,4,1,15,16,17,18,19,20,21,22,8,23,24,25,26,27,11,12,13,5,14,4,1,15,16,17,18,19,20,21,22,8,23,24,25,26,27,11,12,13,5,14,4,1,15,16,17,18,19,20,21,22,8,23,24,25,26,27,11,12,13,5,14,4,1,15,16,17,18,19,20,21,22,8,23,24,25,26,27,4,4,17,88,25,18,19,25,77,77,158,158,0,19,22,55,18,19,27,27,0,158,149,149,5,14,4,15,16,18,19,20,21,22,8,23,24,25,26,27,24,25,25,1,12,13,13,13,123,88,147,1,11,77,147,18,0,55,21,96,55,58,58,8,5,14,4,1,15,16,17,20,23,88,58,58,69,26,147,147,0,24,12,24,12,12,13,96,123,88,26,69,1,96,123,0,123,58,11,149,0,58,0,55,0,77,58,0,27,144,55,97,77,11,0,55,11,12,13,5,14,4,1,15,16,17,18,19,20,21,22,8,23,24,25,26,27,8,0,97,11,124,11,26,21,149,24,25,26,8,13,12,13,69,58,147,88,55,12,13,8,55,59,17,11,12,13,5,14,4,1,15,16,17,18,19,20,21,22,8,23,24,25,26,27,5,14,4,15,16,17,4,4,90,90,90,58,124,124,0,55,26,27,58,0,55,147,11,12,13,5,14,4,1,15,16,17,18,19,20,21,22,8,23,24,25,26,27,11,12,13,5,14,4,1,15,16,17,18,19,20,21,22,8,23,24,25,26,27,11,12,13,5,14,4,1,15,16,17,18,19,20,21,22,8,23,24,25,26,27,97,21,27,5,18,19,147,11,12,13,5,14,4,1,15,16,17,18,19,20,21,22,8,23,24,25,26,27,123,123,88,90,55,124,124,124,124,59,159,160,161,161,162,163,164,165,166,167,168,168,169,170,171,169,170,171,172,173,174,172,175,176,177,178,179,180,181,177,182,183,184,185,186,187,188,187,188,188,189,0,65,60,65,60,65,60,65,60,65,60,0,0,0,0,0,58,59,58,60,63,59,58,65,60,69,63,59,58,65,60,69,63,59,58,65,60,69,63,59,58,65,60,69,63,58,58,58,65,60,63,58,65,60,63,59,60,59,60,63,63,58,58,58,65,63,69,65,60,60,58,63,58,58,65,60,69,59,58,65,60,60,69,63,58,60,58,69,60,58,58,59,58,65,60,69,63,59,58,65,60,69,63,59,58,65,60,69,63,59,58,65,60,69,63,60,65,59,58,63,58,58,58,58,58,60,58,58,69,69,65,58,58,58,63,63,63,58,58,58,58,65,63,69,58,59,58,65,60,63,63,63,63,58,58,59,58,65,60,69,63,59,58,65,60,69,63,59,58,65,60,69,63,59,58,65,60,69,63,59,177,178,179,180,181,177,66,66,0,66,75,74,66,66,75,66,66,75,75,0,75,74,66,74,75,66,66,66,66,74,66,66,66,66,66,75,66,66,66,0,75,75,66,74,75,66,74,75,66,74,75,66,74,75,66,74,75,66,74,75,75,66,74,75,66,74,75,66,74,75,66,74,75,66,74,75,66,74,75,66,74,75,66,74,75,66,74,75,66,74,75,66,74,75,66,74,75,66,74,75,66,74,75,66,74,75,162,163,164,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,208,192,193,194,195,198,199,203,204,206,194,195,203,204,206,194,209,209,209,209,187,188,187,188,188,0,0,0,0,77,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,0,77,77,77,77,77,77,77,82,82,0,0,82,82,82,82,81,82,81,82,81,82,81,82,81,82,81,82,81,82,0,0,81,82,81,82,81,82,81,82,81,82,81,82,81,82,82,82,81,82,81,81,82,0,81,82,81,82,81,82,81,82,81,81,82,210,211,212,213,211,214,210,215,215,213,215,214,210,215,211,213,215,213,212,0,0,0,0,0,0,0,0,86,86,86,86,86,86,86,85,86,85,86,85,86,85,86,85,86,85,86,85,85,85,86,85,86,85,86,85,86,85,86,85,86,85,86,85,86,85,85,85,85,86,85,85,86,85,86,85,85,85,86,85,86,85,86,85,85,86,85,216,217,216,217,216,218,219,220,221,222,220,222,222,222,220,221,221,220,222,218,0,0,0,0,0,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,0,0,0,0,0,0,104,106,94,0,94,94,104,105,106,94,104,105,106,94,94,94,104,105,106,94,104,105,106,94,94,94,94,104,105,106,94,104,105,106,106,94,105,94,94,94,94,94,104,105,106,94,94,94,106,106,94,105,104,105,106,94,104,105,106,94,94,94,94,94,94,104,94,104,105,106,94,104,105,106,94,104,105,106,94,104,105,106,104,94,106,94,105,94,94,106,94,104,94,104,105,106,104,94,105,94,94,94,104,105,106,94,94,94,104,105,106,94,104,105,106,106,94,94,104,105,106,104,94,94,94,94,104,105,106,104,94,54,0,54,0,0,0,0,223,54,113,114,223,54,113,114,54,113,115,114,54,113,115,114,114,223,54,113,114,54,113,115,114,54,113,115,114,223,54,113,114,54,113,115,114,54,113,115,114,223,54,113,114,54,113,115,114,115,115,113,113,114,113,113,114,54,54,54,113,115,114,223,54,113,114,223,54,113,114,223,54,113,114,223,54,113,114,223,54,113,114,223,54,113,114,223,54,113,114,114,223,54,113,114,223,54,113,114,223,54,113,114,223,54,113,114,223,54,113,114,54,113,115,114,54,113,115,114,54,113,115,114,54,113,115,114,223,54,113,114,54,223,54,113,114,54,113,115,114,114,113,113,113,114,113,113,114,115,223,54,113,114,223,54,113,114,223,54,113,114,113,114,54,113,115,114,115,115,223,54,113,114,223,54,113,114,115,54,113,115,114,54,113,115,114,54,54,54,113,115,114,54,113,115,114,223,54,113,114,54,113,115,114,224,225,118,0,0,0,118,118,117,117,118,92,117,118,92,92,117,118,92,117,118,92,117,117,117,117,118,92,117,118,92,117,118,0,118,117,118,92,117,117,118,92,92,117,117,117,117,117,117,117,117,117,117,118,92,117,118,92,117,118,92,117,118,92,117,117,117,92,117,117,118,117,117,117,117,117,117,117,118,117,117,118,92,117,118,92,117,118,92,117,117,118,92,0,117,118,92,226,227,227,228,227,228,120,120,120,120,120,120,0,0,120,0,0,120,120,0,100,100,0,100,119,120,100,119,120,100,119,120,100,119,120,100,119,120,100,119,120,100,119,0,100,100,100,119,120,100,0,100,120,100,119,120,100,119,100,119,100,120,100,100,100,119,119,100,119,120,100,119,120,100,119,120,100,119,120,119,100,119,100,100,100,119,100,100,119,120,100,119,119,119,119,120,100,119,120,119,100,119,100,119,120,100,119,120,100,119,120,100,100,119,120,229,230,231,232,233,234,235,236,229,230,231,232,233,234,235,236,234,235,237,237,237,125,0,0,128,126,128,0,128,126,126,128,128,126,128,0,128,128,126,128,0,0,128,128,125,125,125,126,127,128,125,126,127,128,125,126,127,128,125,126,127,128,125,126,127,128,125,126,127,128,125,125,126,127,128,125,125,125,126,127,128,128,128,128,128,128,128,125,125,126,127,128,125,126,127,128,125,126,127,128,125,126,127,128,128,128,125,128,128,128,0,125,128,127,128,128,127,127,125,127,128,125,125,127,125,126,127,128,125,126,127,128,125,126,127,128,125,126,127,128,125,126,127,128,238,239,240,241,242,243,130,130,0,0,0,129,130,131,129,130,131,129,129,129,130,131,129,130,131,129,129,129,130,131,129,130,131,130,129,129,129,129,129,129,130,130,130,130,129,130,131,130,129,129,129,130,129,129,129,129,130,131,129,130,131,129,130,131,129,130,131,129,129,129,129,129,130,129,131,131,130,131,131,129,129,129,130,129,130,131,129,129,129,130,131,129,130,131,129,130,131,129,130,131,244,245,0,132,132,132,132,132,132,132,132,132,132,132,132,132,132,0,132,132,132,132,132,132,132,0,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,122,0,0,0,0,0,122,134,134,135,0,122,135,0,158,96,123,122,88,134,135,158,96,123,122,88,134,135,88,158,96,123,122,88,134,135,158,96,123,122,88,134,135,123,122,88,134,135,123,122,88,134,135,134,135,134,123,158,96,123,122,88,134,135,158,96,123,88,123,88,158,96,123,122,88,134,135,158,96,123,122,88,134,135,158,96,123,122,88,134,135,158,96,123,122,88,134,135,88,158,158,158,123,88,96,88,96,123,88,96,123,123,88,123,122,88,134,135,158,96,123,122,88,134,135,158,96,123,122,88,134,135,158,96,123,122,88,134,135,158,96,123,122,88,134,135,123,123,88,172,173,174,172,0,136,137,136,136,137,0,137,136,0,137,137,137,41,41,137,136,41,137,136,41,41,137,136,41,137,136,41,41,136,41,136,41,41,136,41,41,136,41,137,136,41,41,137,136,41,41,41,41,41,41,137,136,41,137,136,41,137,136,41,137,136,41,41,41,41,41,136,41,41,41,41,41,41,136,41,136,41,137,136,41,137,136,41,137,136,41,137,136,246,247,248,249,250,251,249,252,252,252,252,138,139,140,139,140,139,140,0,0,139,140,0,138,139,140,139,140,0,0,138,138,138,139,140,138,139,140,138,138,138,138,138,139,140,141,107,138,139,140,141,107,138,139,140,141,107,138,139,140,141,107,107,138,139,140,141,107,138,139,140,141,107,141,107,139,140,141,107,107,138,139,141,107,138,139,140,141,139,140,141,138,139,140,138,139,140,141,107,139,107,107,139,138,139,140,141,107,138,139,140,141,107,138,139,140,141,107,138,139,140,141,107,107,107,107,138,139,141,107,139,140,141,107,107,107,138,139,141,107,141,138,139,140,141,107,138,138,138,139,140,141,107,138,139,140,141,107,138,139,140,141,107,107,138,138,139,140,141,107,253,254,255,256,257,258,259,260,261,262,253,255,262,263,264,265,266,267,268,269,269,0,0,0,143,0,0,143,143,0,0,0,55,55,55,55,55,97,55,55,55,55,97,55,91,55,97,143,91,55,97,143,55,55,91,55,97,143,91,55,97,143,55,55,97,55,55,97,143,55,97,143,0,55,55,55,55,55,55,55,55,97,143,55,55,55,55,97,55,55,97,97,97,144,144,144,144,55,55,55,97,55,55,55,55,55,91,55,97,143,97,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,91,55,55,97,55,55,91,55,91,55,97,143,91,55,97,143,91,55,97,143,91,55,97,143,144,55,55,55,55,55,55,91,55,55,55,97,55,55,55,55,55,55,55,55,55,91,55,0,0,55,0,0,55,55,144,55,97,55,55,55,55,0,91,55,55,55,55,55,55,55,97,55,55,55,55,55,55,55,55,55,55,55,55,97,143,55,55,55,55,55,55,55,91,55,97,143,91,55,97,143,91,55,97,143,55,97,91,55,97,143,55,55,150,0,0,150,90,150,90,150,90,150,90,150,150,150,150,90,150,150,150,90,150,90,150,90,150,90,150,90,150,150,150,150,150,90,90,90,90,150,90,150,90,150,90,150,90,165,166,0,0,0,0,0,0,0,0,0,154,0,0,154,154,154,0,0,0,87,152,152,153,154,87,152,153,154,87,152,153,154,87,152,153,154,87,87,87,87,87,87,87,153,152,153,154,87,152,153,154,87,87,87,152,153,154,87,87,152,153,154,87,87,87,87,152,153,154,87,152,153,154,87,152,153,154,87,152,153,154,87,87,153,152,87,87,153,87,152,153,154,87,153,152,152,153,154,87,152,153,154,87,152,153,154,87,152,153,154,87,152,153,154,87,270,271,0,156,157,146,157,146,0,0,156,0,157,146,146,146,0,0,0,146,0,156,99,99,99,99,99,99,99,146,124,99,155,149,156,147,157,146,124,99,155,149,156,147,157,155,99,99,146,124,99,155,149,156,147,157,146,124,99,155,149,156,147,157,124,124,99,99,149,99,99,99,99,155,149,156,147,157,99,155,149,156,147,157,99,124,99,147,149,99,155,149,156,147,157,149,156,157,99,155,99,99,155,149,156,147,157,146,124,99,155,149,156,147,157,99,99,99,147,155,147,155,146,124,99,155,149,156,147,157,146,124,99,155,149,156,147,157,146,124,99,155,149,156,147,157,146,124,99,155,149,156,147,157,99,155,149,149,156,157,99,99,99,99,99,99,99,99,99,146,147,147,147,99,99,99,99,99,99,147,99,155,99,146,149,99,155,149,156,147,157,124,99,149,99,99,155,147,99,155,149,156,147,157,155,155,124,124,99,99,99,99,99,99,99,99,147,146,124,99,155,149,156,147,157,146,124,99,155,149,156,147,157,146,124,99,155,149,156,147,157,99,147,146,124,99,155,149,156,147,157,124,124,124,124,175,176,272,273,274,273,274,189],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[2,[1]]]],0,0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[4,5],[[6,7],[[9,[8]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,7],8],0,0,[[10,7],8],0,0,[11,11],[12,12],[13,13],[5,5],[14,14],[4,4],[1,1],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[8,8],[23,23],[24,24],[25,25],[26,26],[27,27],[[],[[30,[28,29]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[5,5],31],[[14,14],31],[[4,4],31],[[1,1],31],[[15,15],31],[[16,16],31],[[17,17],31],[[20,20],31],[[23,23],31],0,[32,[[33,[6]]]],0,[[],8],0,0,0,[[],[[34,[11]]]],[[],[[34,[12]]]],[[],[[34,[13]]]],[[],[[34,[5]]]],[[],[[34,[14]]]],[[],[[34,[4]]]],[[],[[34,[1]]]],[[],[[34,[15]]]],[[],[[34,[16]]]],[[],[[34,[17]]]],[[],[[34,[18]]]],[[],[[34,[19]]]],[[],[[34,[20]]]],[[],[[34,[21]]]],[[],[[34,[22]]]],[[],[[34,[8]]]],[[],[[34,[23]]]],[[],[[34,[24]]]],[[],[[34,[25]]]],[[],[[34,[26]]]],[[],[[34,[27]]]],0,0,0,0,0,0,0,[35,11],0,0,0,0,[[36,7],[[9,[8]]]],0,[[5,5],37],[[14,14],37],[[4,4],37],[[1,1],37],[[15,15],37],[[16,16],37],[[17,17],37],[[18,18],37],[[19,19],37],[[20,20],37],[[21,21],37],[[22,22],37],[[8,8],37],[[23,23],37],[[24,24],37],[[25,25],37],[[26,26],37],[[27,27],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],0,0,0,[[11,38],[[34,[39]]]],[[12,38],[[34,[39]]]],[[13,38],[[34,[39]]]],[[5,38],40],[[5,38],40],[[14,38],40],[[14,38],40],[[4,38],40],[[4,38],40],[[1,38],40],[[15,38],40],[[15,38],40],[[16,38],40],[[16,38],40],[[17,38],40],[[17,38],40],[[18,38],40],[[19,38],40],[[20,38],40],[[21,38],40],[[22,38],40],[[8,38],40],[[23,38],40],[[24,38],40],[[25,38],40],[[26,38],40],[[27,38],40],[[18,41,15,16],27],[[21,41,15,16],27],[42,42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[11,7,42,43],32],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],0,0,0,[[22,45,7],[[9,[46]]]],0,[5],[14],[4],[1],[15],[16],[17],0,0,0,0,0,0,0,0,0,[5,47],[14,47],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[[4,47],37],[4,37],[17,37],0,[25,50],0,0,[[25,51],50],0,0,0,0,0,[[19,5,[9,[16]]],18],[[22,5,52,7],41],0,0,0,0,0,0,0,0,0,[[5,5],37],[[14,14],37],[[4,4],37],[[15,15],37],[[16,16],37],[[18,18],37],[[19,19],37],[[20,20],37],[[21,21],37],[[22,22],37],[[8,8],37],[[23,23],37],[[24,24],37],[[25,25],37],[[26,26],37],[[27,27],37],[[53,53],24],[[50,50],25],[[50,50],25],[1,35],0,0,0,0,0,0,0,[1,35],0,0,0,0,0,0,0,0,0,0,0,[[20,7,54],8],[[5,5],[[9,[31]]]],[[14,14],[[9,[31]]]],[[4,4],[[9,[31]]]],[[1,1],[[9,[31]]]],[[15,15],[[9,[31]]]],[[16,16],[[9,[31]]]],[[17,17],[[9,[31]]]],[[20,20],[[9,[31]]]],[[23,23],[[9,[31]]]],0,0,0,0,0,0,0,[[],50],[[24,53],51],0,[[24,53],51],0,0,0,0,0,0,0,0,[1,35],0,0,0,0,0,[[7,42,43],32],0,[[42,50,50],50],0,0,0,0,0,0,0,0,[[55,7],37],0,0,0,0,0,0,[11,34],[12,34],[13,34],[5,34],[14,34],[4,34],[1,34],[15,34],[16,34],[17,34],[18,34],[19,34],[20,34],[21,34],[22,34],[8,34],[23,34],[24,34],[25,34],[26,34],[27,34],0,0,0,[7,11],0,0,0,0,0,0,0,0,[[36,7],[[9,[8]]]],0,0,0,0,0,0,0,0,0,0,[[46,7],8],0,0,[17,45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[4,1],[4,[[9,[17]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[58,53],2],[[59,53],47],0,[[],[[2,[60]]]],[[[63,[[0,[61,62]]]],64],[[33,[[0,[61,62]]]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[58,53,58],2],0,[58,58],[65,65],[60,60],[[[63,[[0,[62,61,62]]]]],[[63,[[0,[62,61,62]]]]]],[[]],[[]],[[]],[[]],[[59,2,53]],[[60,60],31],[[59,53],47],[60,47],[[[63,[[0,[61,62]]]],[0,[61,62]],53],2],0,[[],58],0,[[],[[34,[58]]]],[[],[[34,[65]]]],[[],[[34,[[63,[[0,[61,62]]]]]]]],0,[[65,65],37],[[60,60],37],[[],37],[[58,66,53,7]],[[[63,[[0,[61,62]]]],67],56],[[58,15],[[9,[68]]]],0,[[65,38],40],[[60,38],40],[[69,38],40],[[]],[[]],[[]],[65,60],[[]],[[]],[[]],[58,[[70,[15,[2,[69]]]]]],[[],44],[[58,15,7],[[2,[69]]]],0,[60],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[60,35],[[65,65],37],[68,59],[37,58],[[],[[63,[[0,[61,62]]]]]],[[58,53,71,47],2],0,[[58,53,72,47],2],0,[[53,47],2],[[60,60],[[9,[31]]]],0,0,0,0,[[65,7],73],[[58,53,36],2],[[58,53,71],2],0,0,[[[63,[[0,[61,62]]]],53,[0,[61,62]]],2],[[[63,[[0,[61,62]]]],53,[0,[61,62]],1,47]],0,[[58,52,7]],0,[58,34],[65,34],[[[63,[[0,[61,62]]]]],34],0,0,0,[[]],[[]],[[]],[[]],[[[63,[[0,[61,62]]]],[0,[61,62]]],47],[[[63,[[0,[61,62]]]],[0,[61,62]],53],47],[[[63,[[0,[61,62]]]],[0,[61,62]],[64,[1]]],47],0,0,[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[66,66],[74,74],[75,75],[[]],[[]],[[]],[[75,7],56],[[],[[34,[66]]]],[[],[[34,[74]]]],[[],[[34,[75]]]],[[66,66],37],[[74,74],37],[[75,75],37],[[66,38],40],[[74,38],40],[[75,38],40],[[]],[[]],[[]],[[]],[[]],[[]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[[66,66],37],[[74,74],37],[[75,75],37],[66,34],[74,34],[75,34],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],57],[[],57],[[],57],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],3],[[],3],[[]],[[]],[[],76],[77,77],[[]],[35,77],[[]],[78,77],[77],[[]],[[[30,[29]]],[[30,[3,29]]]],[48,[[48,[3]]]],[49,[[49,[3]]]],0,0,[[77,43]],[77,42],0,[35,[[80,[[2,[79]]]]]],0,0,[[]],[[],34],[[],34],[[],57],[[]],0,0,0,0,0,0,0,0,[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[81,81],[82,82],[[]],[[]],[[],[[34,[81]]]],[[],[[34,[82]]]],[[83,45,7],[[80,[22]]]],[[83,7],[[80,[8]]]],[[81,81],37],[[82,82],37],[[81,38],40],[[82,38],40],[[]],[[]],[[]],[[]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[[82,7]],[[83,83,84,[9,[5]],37,7],[[80,[82]]]],[[81,81],37],[[82,82],37],0,[81,34],[82,34],[[83,7],[[80,[8]]]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],57],[[],57],0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[85,85],[86,86],[[]],[[]],[[85,50,53,7],86],[[85,25,53,7],86],[[],[[34,[85]]]],[[],[[34,[86]]]],[[85,38],40],[[86,38],40],[[]],[[]],[[85,50,53,7,87],88],[86,53],[[]],[[]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[85,37],0,0,[85,34],[86,34],0,0,[[86,53],68],[[]],[[]],0,0,[[],34],[[],34],[[],34],[[],34],[[],57],[[],57],0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[89,5,53],90],[[89,53,70]],[[],3],[[],3],[[]],[[]],0,[89,89],[[]],[89,[[2,[66]]]],[[89,5],56],[[89,5],56],[[89,71]],[[89,71],9],[[89,5,53,91],18],[[89,85,[2,[92]],47,53,91]],[[],[[34,[89]]]],[[89,5],37],0,[[89,[64,[20]]],2],[[89,93,64],2],[[]],[[89,53,7,87],[[2,[88]]]],[89,[[2,[52]]]],[[89,53,7,94],[[70,[4]]]],[[89,53,85],50],[[89,53,95,7,87],[[2,[88]]]],[[89,5],[[9,[16]]]],[[89,5],[[9,[52]]]],[[89,5,53,7,87],[[9,[88]]]],[[89,53,7],[[2,[96]]]],[[89,7]],0,[[]],[[[30,[29]]],[[30,[3,29]]]],[48,[[48,[3]]]],[49,[[49,[3]]]],[[7,97],89],[[89,91,85]],[[89,5],51],[[89,85,7],[[9,[71]]]],0,0,[89,34],[[89,53,27,91],[[9,[27]]]],[[89,71]],0,0,0,0,[[]],[[89,53,5,7],[[9,[98]]]],[[89,85,53,47,91]],[[],34],[[],34],[[89,85,50,47,71,53,91]],[[],57],[[89,5,53,91,99,87,100]],[[89,85,47,53,91,99,87,100],37],[[89,85,53,91,87],37],[[89,47,53,91]],[[89,5,53,91]],[[89,5,46,[9,[16]]]],[[]],0,[[89,85],[[9,[5]]]],0,0,0,0,0,0,0,0,[[94,4,101]],[102,37],[[94,4,101,53]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[94,4,101]],[[94,103,7],[[9,[4]]]],[94,94],[104,104],[105,105],[106,106],[[]],[[]],[[]],[[]],[[106,106],31],[94,[[2,[66]]]],0,[[94,53,36]],[[94,36,7],56],[[94,53,68],2],[94,[[2,[56]]]],[[],[[34,[94]]]],[[],[[34,[104]]]],[[],[[34,[105]]]],[[],[[34,[106]]]],[[94,5],[[9,[[93,[5]]]]]],0,0,[[106,106],37],[[],37],0,0,[[104,38],40],[[105,38],40],[[106,38],40],[[]],[[]],[[]],[[]],[[94,36],2],[[94,36],2],[[94,106,7,9,9],37],[[94,53,7,107]],[[94,7]],0,0,[[]],[[]],[[]],[[]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],0,[[94,4,101,108,53,7,107,9],37],[[106,106],37],[[7,107,97],94],[[36,53,7,107],105],[[94,71,36],37],0,[[106,106],[[9,[31]]]],[[94,53,70,7,109,110]],0,[94,34],[104,34],[105,34],[106,34],0,[[94,53,36,107,7]],0,0,[[94,106,7,111,108,53,107],37],[[]],[[]],[[]],[[]],0,[[94,106,7,112,108,53,[9,[107]]],37],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],0,[[94,53,4,101,107,7,37]],[[],57],[[],57],[[],57],[[],57],0,[[94,53,36,7,107]],0,[[94,5]],[[]],[[]],[[]],[[]],0,[[94,53,36,107,7]],0,0,0,0,0,0,0,[21],[[54,21]],[[113,21]],[[114,21]],[7,2],[[54,7],2],[[113,7],2],[[114,7],2],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[6,[[2,[5]]]],[[54,6],[[2,[5]]]],[[113,6],[[2,[5]]]],[[114,6],[[2,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[5,7],[[9,[73]]]],[[54,5,7],[[9,[73]]]],[[113,5,7],[[9,[73]]]],[[114,5,7],[[9,[73]]]],[54,54],[113,113],[115,115],[114,114],[[]],[[]],[[]],[[]],[[],[[2,[66]]]],[54,[[2,[66]]]],[113,[[2,[66]]]],[114,[[2,[66]]]],[[],[[34,[54]]]],[[],[[34,[113]]]],[[],[[34,[115]]]],[[],[[34,[114]]]],[[115,47,18,7],50],0,0,0,0,0,0,0,[113,54],[114,54],[[]],[[]],[[]],[[]],[7,[[2,[88]]]],[[54,7],[[2,[88]]]],[[113,7],[[2,[88]]]],[[114,7],[[2,[88]]]],[[46,18,6,7],2],[[54,46,18,6,7],2],[[113,46,18,6,7],2],[[114,46,18,6,7],2],[[]],[54],[113],[114],[20,[[9,[21]]]],[[54,20],[[9,[21]]]],[[113,20],[[9,[21]]]],[[114,20],[[9,[21]]]],[[5,7],[[9,[88]]]],[[54,5,7],[[9,[88]]]],[[113,5,7],[[9,[88]]]],[[114,5,7],[[9,[88]]]],[[71,7],[[2,[88]]]],[[54,71,7],[[2,[88]]]],[[113,71,7],[[2,[88]]]],[[114,71,7],[[2,[88]]]],[[71,7],[[2,[88]]]],[[54,71,7],[[2,[88]]]],[[113,71,7],[[2,[88]]]],[[114,71,7],[[2,[88]]]],[[114,6],20],[72,[[2,[20]]]],[[54,72],[[2,[20]]]],[[113,72],[[2,[20]]]],[[114,72],[[2,[20]]]],[6,[[2,[20]]]],[[54,6],[[2,[20]]]],[[113,6],[[2,[20]]]],[[114,6],[[2,[20]]]],[71,[[2,[20]]]],[[54,71],[[2,[20]]]],[[113,71],[[2,[20]]]],[[114,71],[[2,[20]]]],[5,[[9,[16]]]],[[54,5],[[9,[16]]]],[[113,5],[[9,[16]]]],[[114,5],[[9,[16]]]],[[7,43]],[[54,7,43]],[[113,7,43]],[[114,7,43]],[[]],[[]],[[]],[[]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[20,37],[[54,20],37],[[113,20],37],[[114,20],37],[54,37],[5,[[9,[21]]]],[[54,5],[[9,[21]]]],[[113,5],[[9,[21]]]],[[114,5],[[9,[21]]]],[[7,37,43],54],[[7,43],113],[[116,7],[[9,[115]]]],[7,114],0,0,0,0,0,0,0,0,0,[[71,18,6,7],9],[[54,71,18,6,7],9],[[113,71,18,6,7],9],[[114,71,18,6,7],9],[21],[[54,21]],[[113,21]],[[114,21]],[[20,5]],[[54,20,5]],[[113,20,5]],[[114,20,5]],0,0,[54,34],[113,34],[115,34],[114,34],0,0,[[20,18,7],46],[[54,20,18,7],46],[[113,20,18,7],46],[[114,20,18,7],46],[[20,7],46],[[54,20,7],46],[[113,20,7],46],[[114,20,7],46],[115,[[2,[20]]]],[[]],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[54,[[34,[113]]]],[54,[[34,[114]]]],[[],34],[[],34],[[],34],[[],57],[[],57],[[],57],[[],57],[5],[[54,5]],[[113,5]],[[114,5]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[117,5,50,50,47]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[[]],[[]],[[]],[[]],[[]],[[]],[[117,46,50,53,109,110],[[9,[47]]]],[[117,5,47]],[[117,5,47]],[117,117],[118,118],[92,92],[[]],[[]],[[]],[[],[[34,[117]]]],[[],[[34,[118]]]],[[109,95,53]],[[118,118],37],[[117,38],40],[[118,38],40],[[92,38],40],[[117,85]],[[]],[[]],[[]],0,0,[117,[[2,[5]]]],[[117,53,109,110],[[2,[92]]]],[[117,50,50,53,109,110],[[9,[47]]]],[[117,53,109,110],9],[[117,5],[[9,[5]]]],0,[[117,53,109,110,64,[9,[2]]],9],[[117,47,85]],[[]],[[]],[[]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[[117,5],37],[117,37],0,0,0,[117,5],[[118,118],37],[[95,7],117],[[117,5]],[[117,5,47]],[[117,85,47]],0,[[117,85],37],[117,34],[118,34],[117],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[117,85,37],37],[[],57],[[],57],[[],57],[[109,53,95]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[100,7,14,53],90],[[100,53,70]],[[7,95],51],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[100,100],[119,119],[120,120],[[]],[[]],[[]],[100,[[2,[66]]]],[[119,121,50,53,7,2],120],[[7,95,121],51],[[100,14],56],[[100,14,91]],[[],[[34,[100]]]],[[],[[34,[119]]]],[[],[[34,[120]]]],0,[[2,122]],[[100,[2,[21]]],2],[[120,38],40],[[]],[[]],[[]],[[100,53,7],[[2,[123]]]],[[119,53,7],50],[[100,14,53,7],[[9,[123]]]],[[119,53,7],123],[[100,53,95,7]],[120,53],[[100,14],[[9,[52]]]],[[100,7]],[[100,53,7],[[2,[96]]]],0,0,[[]],[[]],[[]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[[119,53,7,94,121,2,107],37],[[],100],0,[[100,53,14]],0,0,0,[[100,124]],[100,34],[119,34],[120,34],[[100,53,26,7,107]],0,0,0,0,[[120,53],68],[[]],[[]],[[]],0,[[100,53,14,7],[[9,[98]]]],0,[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],57],[[],57],[[],57],[[100,14,53,91,99,87]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[125,68],125],[[125,68]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[125,125],[126,126],[127,127],[128,128],[[]],[[]],[[]],[[]],[[125,125],37],[[125,38],40],[[126,38],40],[[127,38],40],[[128,38],40],[[]],[53,125],[51,125],[[]],[[]],[[]],[128,[[9,[125]]]],[128,[[9,[53]]]],[[51,42],68],[[51,51,42],68],[[],51],[[],51],[125,51],[[]],[[]],[[]],[[]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[128,37],[128,37],[125,37],[128,37],[128,37],[128,37],0,[[125,125],37],[[51,51],128],[[127,125,42],128],[[128,125,42],[[9,[128]]]],[[128,125,42],[[9,[128]]]],0,0,[[125,125],[[9,[31]]]],0,[[128,125,68,42],[[80,[128]]]],[[125,125],68],[[125,68],125],0,[[]],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],57],[[],57],[[],57],[[],57],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[129,53,68,16,107]],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[129,129],[130,130],[[[131,[[0,[62,61]]]]],[[131,[[0,[62,61]]]]]],[[]],[[]],[[]],[[130,130],31],[129,47],[129,47],[129,47],[129,47],[129,47],[129,47],[[],[[34,[130]]]],[[130,130],37],[[],37],[[130,38],40],[[]],[[]],[[]],[[],44],[[129,16],[[9,[53]]]],[[129,53,130,107]],[[129,53,66,107]],[130],[[129,16,16],[[9,[16]]]],[[129,107]],0,[[]],[[]],[[]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[[129,16],37],[[129,16],37],[[129,16],37],[[129,16],37],[[129,16],37],[[130,130],37],[42,129],[[],[[131,[61]]]],0,[[130,130],[[9,[31]]]],[[[131,[61]],53,16,61]],[[[131,[61]],53,16,61],[[9,[2]]]],0,0,0,[130,34],[[]],[[]],[[]],[[129,53,16,107]],[[129,53,16,2,107]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],57],[[],57],[[],57],[[]],[[]],[[]],0,0,0,[[],3],[[],3],[[]],[[]],0,0,[[132,38],40],[[]],[[]],[[[30,[29]]],[[30,[3,29]]]],[48,[[48,[3]]]],[49,[[49,[3]]]],0,[[55,32],132],[[7,32,43],132],0,[132,34],0,[[],34],[[],34],[[],57],[[]],0,[[],3],[[],3],[[]],[[]],0,[133,133],[[]],[[]],[[133,53,66,7,89]],[[]],[[[30,[29]]],[[30,[3,29]]]],[48,[[48,[3]]]],[49,[[49,[3]]]],[[[64,[36]]],133],[133,47],[[133,53,5,15,71,7,89]],[[133,53,5,15,95,7,89]],[[133,7]],0,[[]],0,[[],34],[[],34],[[],57],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[123,123],[122,122],[88,88],[134,134],[135,135],[[]],[[]],[[]],[[]],[[]],[[134,134],37],[[135,135],37],[[],37],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[41,18,54,7,9,2],95],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[5,52,8],41],[[]],[[]],[[]],[[]],[[]],[[]],[[41,71,71,7],37],[41,41],[136,136],[[]],[[]],[[41,71,7]],[[],[[34,[41]]]],[[],[[34,[136]]]],[[5,52,50,36],41],[[41,41],37],[[136,136],37],[[41,38],40],[[137,38],40],[[136,38],40],[[5,52],41],[[]],[[]],[[]],[41,50],[41,[[9,[20]]]],[41,52],0,[41,95],[[]],[[]],[[]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[41,37],[41,37],[[41,50,18,54,7,9,2],[[9,[137]]]],[41,[[9,[95]]]],[[41,41],37],[[136,136],37],[41,95],[[41,110,7,37]],0,[[5,52,6],41],0,[41,34],[136,34],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],57],[[],57],[[],57],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[107,138]],[138,138],[139,139],[140,140],[141,141],[107,107],[[]],[[]],[[]],[[]],[[]],0,0,[[139,139],31],[[140,140],31],[[141,141],31],0,[107,[[2,[56]]]],[[],[[34,[138]]]],[[],[[34,[139]]]],[[],[[34,[141]]]],[[],[[34,[107]]]],[[138,138],37],[[139,139],37],[[140,140],37],[[141,141],37],[[],37],[[],37],[[],37],[[138,38],40],[[139,38],40],[[140,38],40],[[]],[[]],[[]],[[]],[[]],[[],44],[107,53],[107,[[9,[138]]]],[139],[[]],[[]],[[]],[[]],[[]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],0,0,0,[[138,138],37],[[139,139],37],[[141,141],37],[[],107],[[139,139],[[9,[31]]]],[[140,140],[[9,[31]]]],[[141,141],[[9,[31]]]],[107,[[9,[53]]]],[[107,53,138]],0,[138,34],[139,34],[141,34],[107,34],0,[[]],[[]],[[]],[[]],[[]],[138,140],[138,139],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],57],[[],57],[[],57],[[],57],[[],57],[[107,53,138]],[4,138],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[55,[[2,[4]]]],[[55,7,4],90],[[55,4],[[9,[16]]]],[[55,4],[[9,[15]]]],0,0,[[55,36],2],[[55,7],2],[55,2],[55,[[70,[16,68]]]],0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[55,6],[[2,[5]]]],[[55,6],[[2,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[55,5],[[9,[142]]]],[[55,4,7],[[9,[73]]]],[[],76],[55,2],[55,55],[97,97],[143,143],[[]],[[]],[[]],0,[[55,36]],[[55,4],56],[[55,5]],[[55,5],56],[[55,36,7],56],[[55,71]],[[55,14]],[[55,71],9],[[],97],[[],143],[[55,68],2],[[55,5,7]],[55,[[2,[56]]]],[[],[[34,[55]]]],0,[[55,[2,[66]],7]],[[55,7,53,138,9],37],0,0,0,[[[30,[144]]],[[34,[[30,[144]],[30,[144]]]]]],[144,9],[[[49,[144]]],[[34,[[49,[144]],[49,[144]]]]]],[144,9],0,[55],0,0,[[55,53],[[9,[56]]]],[[55,145],[[9,[16]]]],[[55,53],[[9,[56]]]],[[55,7,43]],[[55,15],9],[[]],[[]],[[]],[[]],[78,97],[[55,7,56],32],[[55,36],2],[[55,7],[[2,[88]]]],[[55,7],[[2,[123]]]],[55,[[2,[52]]]],[55],[55,2],[55,58],[[55,7],[[70,[4]]]],[[55,16,7],[[9,[73]]]],[[55,15,7],[[146,[73]]]],[[55,5,7],[[9,[88]]]],[[55,95,7],[[2,[88]]]],[[55,14,7],[[9,[123]]]],[[55,95,7]],[55,53],[[55,72],[[2,[20]]]],[[55,6],[[2,[20]]]],[[55,71],[[2,[20]]]],[55,9],[[55,5],[[9,[16]]]],[55,[[9,[129]]]],[[55,4],[[9,[52]]]],[[55,7]],[[55,10],2],[[55,16],147],[55,56],[[55,7,15],[[80,[68]]]],[[55,7],[[2,[96]]]],[[55,7],[[2,[96]]]],[[55,36],2],[[55,7]],[[55,7,43]],0,0,[55,37],0,[[55,32,7,42,43]],[[55,32,7,42,37,43]],0,0,[[]],[[]],[[]],[[]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[144,37],[55,37],[55,37],[[56,43],[[80,[55]]]],[[55,47],[[9,[5]]]],[[55,5],[[9,[21]]]],[[55,16],[[9,[147]]]],0,0,[[55,7,68,9],37],[[7,97],55],[35,97],[[55,[9,[145]],108,[2,[19]]],147],[55,47],[55,[[33,[1]]]],[55,124],[55],[55,[[9,[47]]]],[[55,5],47],[55],0,0,0,[35,[[80,[143]]]],[35,[[80,[42]]]],[[55,16],[[9,[4]]]],0,0,[[55,[64,[36]]]],0,[[55,7],37],0,0,[55,56],[55,56],[[55,53],56],[[55,7]],0,0,0,[[55,148]],[[55,18,20]],[55,34],[[55,[64,[16]]]],[[55,68]],[[55,56]],0,[[55,2,7,43]],[[55,148,7]],[[55,142,7],2],[55,47],0,[[55,116]],[55,53],0,[[55,7,68,68,9]],[[55,7,68,9,43]],[[55,7,9]],[[]],[[]],[[]],[[55,4,7],[[9,[98]]]],0,[[55,15],68],[[55,15],149],[[55,15],[[146,[4]]]],[[55,15],[[9,[16]]]],0,[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],57],[[],57],[[],57],[[],57],[55],0,[[]],[[]],[[]],[[]],0,[[55,7,6],[[9,[52]]]],0,0,0,0,[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[150,150],[[]],[[150,150],31],0,[[150,150],37],[[],37],[[150,38],40],[[]],[[]],[[]],[[]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[[150,150],37],[[150,150],[[9,[31]]]],[150,34],[[]],0,0,0,[[],34],[[],34],[[],34],[[],34],[[],57],[[],57],[[]],[[]],0,0,0,[32,[[33,[6]]]],[[6,70,7],[[9,[20]]]],[[151,42]],[42,19],[42,19],[[42,50,50],50],[42,108],[[42,108,108],108],[[2,55,7,42,43]],0,0,0,0,0,0,0,0,0,[87],0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[87,53,5,99,100,91],37],[[87,5,142]],[[87,5,7],41],[[87,5],142],0,[[87,142],2],0,[152,152],[153,153],[154,154],[87,87],[[]],[[]],[[]],[[]],[87,[[2,[66]]]],[[87,148,7],52],[[],[[34,[152]]]],[[],[[34,[153]]]],[[],[[34,[154]]]],[[],[[34,[87]]]],0,[[]],[[]],[[]],[[]],[[87,5],2],[[87,10],2],[[87,53,89,7],[[2,[96]]]],[[]],[[]],[[]],[[]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[7,87],0,0,[[87,53,14,15,16,10,142,[9,[10]],7],[[9,[5]]]],0,0,0,[152,34],[153,34],[154,34],[87,34],0,0,[[]],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],57],[[],57],[[],57],[[],57],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[99,[[2,[4]]]],[99,70],0,[[99,4,15]],[[99,4],[[9,[15]]]],[[99,36],2],[99,2],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[155,8]],[[99,53,5,8,68,50,91]],[[99,6],[[2,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[99,53,15,56,[9,[18]],91]],[[99,15,56]],0,0,[[99,53,5,36,68,50,91]],[[99,53,5,20,68,50,91]],[99,99],[155,155],[149,149],[156,156],[147,147],[157,157],[[]],[[]],[[]],[[]],[[]],[[]],[99,[[2,[66]]]],0,[[99,4]],0,0,[[],[[34,[99]]]],[[],[[34,[155]]]],[[],[[34,[149]]]],[[],[[34,[156]]]],[[],[[34,[147]]]],[[],[[34,[157]]]],0,[[156,156],37],[[157,157],37],0,0,[[99,15],9],[[99,38],40],[[155,38],40],[[149,38],40],[[156,38],40],[[147,38],40],[[157,38],40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[99,7,56],32],[99,2],[[99,16],[[9,[147]]]],[[147,5],18],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[[[30,[29]]],[[30,[3,29]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[48,[[48,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[49,[[49,[3]]]],[99,37],0,0,0,[[156,156],37],[[157,157],37],[[],99],[99,47],[[99,[9,[145]],108,[2,[19]]],147],[[99,16,149],15],[99,47],[[99,87],[[33,[1]]]],[[99,87,100],124],[99],[99],[146,9],0,0,0,[[99,53,14,5,68,100]],[[99,53,14,36,68,50,91]],[[99,53,14,6,68,50,91]],[[99,53,14,10,68,50,91,87],[[9,[142]]]],[[99,53,14,20,68,50,91]],[[99,53,14,8,68,50,91]],0,0,0,[[99,53,16,5,91]],[146,146],0,[99,34],[155,34],[149,34],[156,34],[147,34],[157,34],0,[[99,53,15,8,91]],0,[[99,53,16,91]],[[99,53,15,81,91]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[99,53,16,5,91]],[[99,15,4]],[[99,15],68],[[99,53,15,91]],[[99,15],149],[[99,15],[[146,[4]]]],[[99,15],[[9,[16]]]],0,0,[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0],"p":[[4,"AgentType"],[3,"Vec"],[8,"Any"],[4,"AgentID"],[3,"CarID"],[3,"BuildingID"],[3,"Map"],[3,"SidewalkSpot"],[4,"Option"],[3,"TransitStopID"],[3,"ScenarioGenerator"],[3,"SpawnOverTime"],[3,"BorderSpawnOverTime"],[3,"PedestrianID"],[3,"TripID"],[3,"PersonID"],[4,"VehicleType"],[3,"Vehicle"],[3,"VehicleSpec"],[4,"ParkingSpot"],[3,"ParkedCar"],[4,"DrivingGoal"],[4,"SidewalkPOI"],[3,"TimeInterval"],[3,"DistanceInterval"],[3,"CreatePedestrian"],[3,"CreateCar"],[8,"CloneableAny"],[3,"Global"],[3,"Box"],[4,"Ordering"],[3,"Scenario"],[3,"Counter"],[4,"Result"],[15,"str"],[3,"IntersectionID"],[15,"bool"],[3,"Formatter"],[3,"Error"],[6,"Result"],[3,"Router"],[3,"XorShiftRng"],[3,"Timer"],[15,"u64"],[4,"PathConstraints"],[3,"Position"],[15,"usize"],[3,"Arc"],[3,"Rc"],[3,"Distance"],[15,"f64"],[3,"Path"],[3,"Time"],[4,"ParkingSimState"],[3,"Sim"],[3,"String"],[3,"TypeId"],[3,"Analytics"],[3,"SlidingWindow"],[4,"ProblemType"],[8,"Ord"],[8,"Clone"],[3,"TimeSeriesCount"],[3,"BTreeSet"],[4,"Problem"],[4,"Event"],[8,"Fn"],[3,"Duration"],[3,"TripPhase"],[3,"BTreeMap"],[3,"LaneID"],[3,"ParkingLotID"],[3,"Pt2D"],[4,"AlertLocation"],[4,"TripPhaseType"],[3,"App"],[3,"SimFlags"],[3,"ArgMatches"],[4,"ScenarioModifier"],[6,"Result"],[3,"StartTripArgs"],[4,"TripSpec"],[4,"TripEndpoint"],[4,"TripMode"],[3,"Car"],[4,"CarState"],[3,"TransitSimState"],[3,"DrawCarInput"],[3,"DrivingSimState"],[3,"AgentProperties"],[3,"Ctx"],[3,"QueueEntry"],[3,"HashSet"],[3,"IntersectionSimState"],[4,"Traversable"],[3,"UnzoomedAgent"],[3,"SimOptions"],[3,"PolyLine"],[3,"TripManager"],[3,"WalkingSimState"],[3,"TurnID"],[3,"Intersection"],[3,"UberTurn"],[3,"State"],[3,"SignalState"],[3,"Request"],[3,"Scheduler"],[3,"Speed"],[3,"FixedMap"],[3,"HashMap"],[3,"ControlStopSign"],[3,"ControlTrafficSignal"],[3,"NormalParkingSimState"],[3,"InfiniteParkingSimState"],[3,"ParkingLane"],[3,"Lane"],[3,"Queue"],[4,"Queued"],[3,"Pedestrian"],[4,"PedState"],[3,"MultiMap"],[4,"PedCrowdLocation"],[3,"DrawPedestrianInput"],[3,"CommutersVehiclesCounts"],[3,"AnyTime"],[4,"StateEvent"],[3,"Event"],[4,"State"],[3,"PandemicModel"],[4,"Cmd"],[3,"SharedSpace"],[3,"PrebakeSummary"],[3,"TrafficRecorder"],[4,"CarStatus"],[4,"Intent"],[4,"Goal"],[4,"ActionAtEnd"],[4,"Command"],[4,"CommandType"],[4,"SimpleCommandType"],[3,"Item"],[3,"TransitRouteID"],[4,"AlertHandler"],[8,"SimCallback"],[3,"OrigPersonID"],[4,"TripResult"],[3,"Person"],[3,"TransitRoute"],[3,"TripInfo"],[4,"DelayCause"],[3,"PersonSpec"],[3,"Route"],[3,"Bus"],[4,"BusState"],[3,"Trip"],[4,"TripLeg"],[4,"PersonState"],[3,"DrawPedCrowdInput"],[13,"Car"],[13,"Pedestrian"],[13,"BusPassenger"],[13,"Intersection"],[13,"Person"],[13,"Building"],[13,"Agent"],[13,"Intersection"],[13,"ParkNear"],[13,"Border"],[13,"Onstreet"],[13,"Offstreet"],[13,"Lot"],[13,"Sidewalk"],[13,"BldgDriveway"],[13,"LotDriveway"],[13,"Trip"],[13,"Inside"],[13,"IntersectionDelay"],[13,"ComplexIntersectionCrossing"],[13,"ArterialIntersectionCrossing"],[13,"OvertakeDesired"],[13,"PedestrianOvercrowding"],[13,"ParkingSpot"],[13,"Building"],[13,"TransitStop"],[13,"Border"],[13,"BikeRack"],[13,"WaitingForBus"],[13,"RidingBus"],[13,"Ok"],[13,"CarReachedParkingSpot"],[13,"CarLeftParkingSpot"],[13,"BusArrivedAtStop"],[13,"BusDepartedFromStop"],[13,"PassengerBoardsTransit"],[13,"PassengerAlightsTransit"],[13,"PersonEntersBuilding"],[13,"PersonLeavesBuilding"],[13,"PersonLeavesMap"],[13,"PersonEntersMap"],[13,"PedReachedParkingSpot"],[13,"BikeStoppedAtSidewalk"],[13,"ProblemEncountered"],[13,"AgentEntersTraversable"],[13,"IntersectionDelayMeasured"],[13,"TripCancelled"],[13,"TripPhaseStarting"],[13,"PathAmended"],[13,"Alert"],[13,"TripFinished"],[13,"UsingBike"],[13,"UsingParkedCar"],[13,"SpawningFailure"],[13,"VehicleAppearing"],[13,"JustWalking"],[13,"UsingTransit"],[13,"Parking"],[13,"IdlingAtStop"],[13,"Queued"],[13,"WaitingToAdvance"],[13,"Unparking"],[13,"Crossing"],[13,"ChangingLanes"],[8,"ParkingSim"],[13,"Normal"],[13,"Infinite"],[13,"Vehicle"],[13,"StaticBlockage"],[13,"DynamicBlockage"],[13,"WaitingToTurn"],[13,"LeavingBuilding"],[13,"EnteringBuilding"],[13,"LeavingParkingLot"],[13,"EnteringParkingLot"],[13,"StartingToBike"],[13,"FinishingBiking"],[13,"WaitingForBus"],[13,"Crossing"],[13,"Sane"],[13,"Exposed"],[13,"Infectious"],[13,"Hospitalized"],[13,"Recovered"],[13,"Dead"],[13,"BecomeHospitalized"],[13,"BecomeQuarantined"],[13,"VanishAtBorder"],[13,"StartParking"],[13,"StopBiking"],[13,"EndAtBorder"],[13,"FollowTransitRoute"],[13,"BikeThenStop"],[13,"ParkNearBuilding"],[13,"SpawnCar"],[13,"SpawnPed"],[13,"StartTrip"],[13,"UpdateCar"],[13,"UpdateLaggyHead"],[13,"UpdatePed"],[13,"UpdateIntersection"],[13,"Callback"],[13,"Pandemic"],[13,"StartBus"],[13,"StartTrip"],[13,"Car"],[13,"CarLaggyHead"],[13,"Ped"],[13,"Intersection"],[13,"Pandemic"],[13,"StartBus"],[13,"DrivingToStop"],[13,"AtStop"],[13,"Walk"],[13,"Drive"],[13,"RideBus"]]},\
"synthpop":{"doc":"This crate describes a synthetic population that exist in …","t":[12,12,13,13,13,13,13,13,13,3,3,4,13,3,3,3,13,13,3,13,3,13,13,13,13,13,3,4,13,13,13,13,3,13,4,13,4,4,13,13,11,0,11,11,11,11,12,11,11,11,11,11,11,0,12,12,12,11,11,12,12,0,11,11,11,11,0,11,11,11,11,11,11,12,11,12,12,12,12,11,11,0,12,12,12,12,12,0,11,11,11,12,12,12,12,12,12,12,11,11,12,12,12,12,12,12,0,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,12,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,3,4,13,13,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,3,0,12,5,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,5,5,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,12,12,12,12,12,12,12,11,5,12,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,12,12,12,12,12,12,12,12,13,13,3,13,13,13,3,13,13,3,13,13,13,4,13,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,12,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["0","1","AddExtraTrips","Bike","Border","Building","ChangeMode","Drive","Escort","ExternalPerson","ExternalTrip","ExternalTripEndpoint","Home","IndividTrip","MapBorder","MapBorders","Meal","Medical","OrigPersonID","ParkAndRideTransfer","PersonSpec","PersonalBusiness","Position","Recreation","RepeatDays","RepeatDaysNoise","Scenario","ScenarioModifier","School","Shopping","Social","SuddenlyAppear","TrafficCounts","Transit","TripEndpoint","TripEndpoint","TripMode","TripPurpose","Walk","Work","all","borders","borrow","borrow","borrow_mut","borrow_mut","cancelled","clone","clone","clone_into","clone_into","cmp","cmp","counts","depart","departure","description","deserialize","deserialize","destination","destination","endpoint","eq","eq","equivalent","equivalent","external","fmt","fmt","from","from","from_constraints","get_hash","gps_pos","hash","i","incoming_biking","incoming_driving","incoming_walking","into","into","make","map","map_name","mode","mode","modified","modifier","ne","noun","ongoing_verb","only_seed_buses","orig_id","origin","origin","outgoing_biking","outgoing_driving","outgoing_walking","partial_cmp","partial_cmp","people","per_intersection","per_road","pos","purpose","purpose","scenario","scenario_name","serialize","serialize","to_constraints","to_owned","to_owned","trips","trips","try_from","try_from","try_into","try_into","type_id","type_id","verb","vzip","vzip","weight","0","0","0","0","days","departure_filter","departure_time_noise","from_modes","pct_ppl","to_mode","0","0","0","MapBorder","MapBorders","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","for_mode","from","from","gps_pos","i","incoming_biking","incoming_driving","incoming_walking","into","into","new","new","outgoing_biking","outgoing_driving","outgoing_walking","pos","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","weight","TrafficCounts","borrow","borrow_mut","clone","clone_into","default","description","deserialize","from","from_path_requests","into","map","per_intersection","per_road","quickly_compare","serialize","to_owned","try_from","try_into","type_id","update_with_path","vzip","Border","Building","SuddenlyAppear","TripEndpoint","borrow","borrow_mut","clone","clone_into","cmp","deserialize","end_walking_at_border","eq","equivalent","fmt","from","into","ne","partial_cmp","path_req","pos","pt","serialize","sidewalk_pos","start_walking_at_border","to_owned","try_from","try_into","type_id","vzip","0","0","0","ExternalPerson","ExternalTrip","ExternalTripEndpoint","Position","TripEndpoint","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","departure","deserialize","deserialize","deserialize","destination","from","from","from","import","into","into","into","mode","origin","purpose","trips","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","BorderSpawnOverTime","ScenarioGenerator","SpawnOverTime","activity_model","border_spawn_over_time","fork_rng","generator","goal","goal","num_agents","num_bikes","num_cars","num_peds","only_seed_buses","percent_biking","percent_driving","percent_use_transit","percent_use_transit","scenario_name","spawn_over_time","start_from_border","start_time","start_time","stop_time","stop_time","create_prole","rand_time","select_trip_mode","BorderSpawnOverTime","ScenarioGenerator","SpawnOverTime","border_spawn_over_time","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","empty","fmt","fmt","fmt","from","from","from","generate","goal","goal","into","into","into","num_agents","num_bikes","num_cars","num_peds","only_seed_buses","percent_biking","percent_driving","percent_use_transit","percent_use_transit","proletariat_robot","rand_time","scenario_name","serialize","serialize","serialize","small_run","spawn","spawn_agent","spawn_over_time","start_from_border","start_time","start_time","stop_time","stop_time","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","AddExtraTrips","ChangeMode","RepeatDays","RepeatDaysNoise","ScenarioModifier","apply","borrow","borrow_mut","clone","clone_into","cmp","describe","deserialize","eq","equivalent","from","into","ne","partial_cmp","repeat_days","serialize","to_owned","try_from","try_into","type_id","vzip","0","0","days","departure_filter","departure_time_noise","from_modes","pct_ppl","to_mode","Escort","Home","IndividTrip","Meal","Medical","ParkAndRideTransfer","PersonSpec","PersonalBusiness","Recreation","Scenario","School","Shopping","Social","TripPurpose","Work","all_trips","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancelled","check_schedule","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default_scenario_for_map","depart","deserialize","deserialize","deserialize","deserialize","destination","empty","fmt","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","map_name","mode","modified","new","only_seed_buses","orig_id","origin","people","purpose","remove_weird_schedules","save","scenario_name","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_string","trips","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip"],"q":["synthpop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","synthpop::ExternalTripEndpoint","","synthpop::ScenarioModifier","","","","","","","","synthpop::TripEndpoint","","","synthpop::borders","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","synthpop::counts","","","","","","","","","","","","","","","","","","","","","","synthpop::endpoint","","","","","","","","","","","","","","","","","","","","","","","","","","","","","synthpop::endpoint::TripEndpoint","","","synthpop::external","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","synthpop::external::ExternalTripEndpoint","","synthpop::make","","","","","","","","","","","","","","","","","","","","","","","","","synthpop::make::activity_model","","","synthpop::make::generator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","synthpop::modifier","","","","","","","","","","","","","","","","","","","","","","","","","","synthpop::modifier::ScenarioModifier","","","","","","","","synthpop::scenario","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Scenario name","","","","","","","","","","","","","Lists all border intersections of the map, broken down by …","","","This is an ID used by Seattle soundcast. Originally it was …","","","","","","","","A Scenario describes all the input to a simulation. …","Transforms an existing Scenario before instantiating it.","","","","Used for interactive spawning, tests, etc. For now, only …","This represents the number of vehicles (or trips, or …","","Specifies where a trip begins or ends.","","How does a trip primarily happen?","Lifted from Seattle’s Soundcast model, but seems general …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Some users of the API …","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","…","","","","","Did a ScenarioModifier affect this?","","","","","None means seed all buses. Otherwise the route name must …","Just used for debugging","","","","","","","","","","","","","","","","","","","","","","There must be continuity between trips: each trip starts …","","","","","","","","","","Based on the classification of the connecting road, a …","","","","","","","","","","If <code>None</code>, then just cancel the trip.","","","","","Lists all border intersections of the map, broken down by …","","","","","","","","","Returns the (incoming, outgoing) borders for the …","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Based on the classification of the connecting road, a …","This represents the number of vehicles (or trips, or …","","","","","","","","Returns the argument unchanged.","Run pathfinding on all of the requests, then count the …","Calls <code>U::from(self)</code>.","","","","Print a comparison of counts. Only look at …","","","","","","","","","","Used for interactive spawning, tests, etc. For now, only …","Specifies where a trip begins or ends.","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","Figure out a single PathRequest that goes between two …","","Returns a point representing where this endpoint is.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Import external scenario data. The main difference between …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","An activity model creates “people” that follow a set …","","Need to explain this trick – basically keeps consistency …","This is a much more primitive way to randomly generate …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Designed in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Scenario name","","","","Transforms an existing Scenario before instantiating it.","If this modifies scenario_name, then that means prebaked …","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","If <code>None</code>, then just cancel the trip.","","","","","","","","","","A Scenario describes all the input to a simulation. …","","","","Lifted from Seattle’s Soundcast model, but seems general …","","","","","","","","","","","","Verify that a person’s trips make sense","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Did a ScenarioModifier affect this?","","None means seed all buses. Otherwise the route name must …","Just used for debugging","","","","","","","","","","","","","","","","There must be continuity between trips: each trip starts …","","","","","","","","","","","","","","","",""],"i":[3,3,41,1,24,24,41,1,45,0,0,0,45,0,0,0,45,45,0,45,0,45,31,45,41,41,0,0,45,45,45,24,0,1,0,31,0,0,1,45,1,0,1,3,1,3,44,1,3,1,3,1,3,0,44,30,18,1,3,30,44,0,1,3,1,3,0,1,3,1,3,1,3,15,3,15,14,14,14,1,3,0,18,40,30,44,44,0,3,1,1,40,32,30,44,14,14,14,1,3,40,18,18,15,30,44,0,40,1,3,1,1,3,29,32,1,3,1,3,1,3,1,1,3,15,47,48,49,50,51,52,51,52,52,52,53,54,55,0,0,14,15,14,15,14,15,14,15,14,14,15,15,15,14,14,14,14,15,14,15,14,14,14,15,14,15,14,15,14,15,14,15,14,15,15,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,24,24,24,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,53,54,55,0,0,0,31,31,29,30,31,29,30,31,30,29,30,31,30,29,30,31,29,29,30,31,30,30,30,29,29,30,31,29,30,31,29,30,31,29,30,31,47,48,0,0,0,0,37,0,0,38,39,38,39,39,39,37,38,38,38,39,37,37,39,38,39,38,39,0,0,0,0,0,0,37,37,38,39,37,38,39,37,38,39,37,38,39,37,38,39,37,37,38,39,37,38,39,37,38,39,37,38,39,38,39,39,39,37,38,38,38,39,37,0,37,37,38,39,37,39,38,37,39,38,39,38,39,37,38,39,37,38,39,37,38,39,37,38,39,37,38,39,41,41,41,41,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,41,41,41,41,41,41,49,50,51,52,51,52,52,52,45,45,0,45,45,45,0,45,45,0,45,45,45,0,45,40,40,32,44,45,40,32,44,45,44,32,40,32,44,45,40,32,44,45,40,44,40,32,44,45,44,40,40,32,44,45,45,40,32,44,45,40,32,44,45,40,44,44,44,40,32,44,40,44,40,40,40,40,32,44,45,40,32,44,45,45,32,40,32,44,45,40,32,44,45,40,32,44,45,40,32,44,45],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[2,[1]]]],0,[[]],[[]],[[]],[[]],0,[1,1],[3,3],[[]],[[]],[[1,1],4],[[3,3],4],0,0,0,0,[[],[[5,[1]]]],[[],[[5,[3]]]],0,0,0,[[1,1],6],[[3,3],6],[[],6],[[],6],0,[[1,7],8],[[3,7],8],[[]],[[]],[9,1],[[],10],0,[3],0,0,0,0,[[]],[[]],0,0,0,0,0,0,0,[[3,3],6],[1,11],[1,11],0,0,0,0,0,0,0,[[1,1],[[12,[4]]]],[[3,3],[[12,[4]]]],0,0,0,0,0,0,0,0,[1,5],[3,5],[1,9],[[]],[[]],0,0,[[],5],[[],5],[[],5],[[],5],[[],13],[[],13],[1,11],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[14,14],[15,15],[[]],[[]],[[14,1]],[[]],[[]],0,0,0,0,0,[[]],[[]],[16,14],[[16,17],15],0,0,0,0,[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],13],[[],13],[[]],[[]],0,0,[[]],[[]],[18,18],[[]],[[],18],0,[[],[[5,[18]]]],[[]],[[16,19,20,21],18],[[]],0,0,0,[[18,18]],[18,5],[[]],[[],5],[[],5],[[],13],[[18,22,23,16]],[[]],0,0,0,0,[[]],[[]],[24,24],[[]],[[24,24],4],[[],[[5,[24]]]],[[25,16],[[12,[26]]]],[[24,24],6],[[],6],[[24,7],8],[[]],[[]],[[24,24],6],[[24,24],[[12,[4]]]],[[24,24,1,16],[[12,[27]]]],[[24,1,6,16],[[12,[26]]]],[[24,16],28],[24,5],[[24,16,6],[[12,[26]]]],[[25,16],[[12,[26]]]],[[]],[[],5],[[],5],[[],13],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[5,[29]]]],[[],[[5,[30]]]],[[],[[5,[31]]]],0,[[]],[[]],[[]],[[16,[2,[29]],6],[[33,[[2,[32]]]]]],[[]],[[]],[[]],0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],13],[[],13],[[],13],[[]],[[]],[[]],0,0,0,0,0,0,0,[34,34],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[24,24,16,34],[[33,[32]]]],[[34,35,35],35],[[36,34],1],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[37,37],[38,38],[39,39],[[]],[[]],[[]],[[],[[5,[37]]]],[[],[[5,[38]]]],[[],[[5,[39]]]],[11,37],[[37,7],8],[[38,7],8],[[39,7],8],[[]],[[]],[[]],[[37,16,34,21],40],0,0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[16,34,21],40],[[34,35,35],35],0,[37,5],[38,5],[39,5],[16,37],[[39,34,40,1,16]],[[38,34,40,16]],0,0,0,0,0,0,[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],13],[[],13],[[],13],[[]],[[]],[[]],0,0,0,0,0,[[41,16,40,34],40],[[]],[[]],[41,41],[[]],[[41,41],4],[41,19],[[],[[5,[41]]]],[[41,41],6],[[],6],[[]],[[]],[[41,41],6],[[41,41],[[12,[4]]]],[[40,23,[12,[42]],34],40],[41,5],[[]],[[],5],[[],5],[[],13],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[40,43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[32,33],[40,40],[32,32],[44,44],[45,45],[[]],[[]],[[]],[[]],[46,19],0,[[],[[5,[40]]]],[[],[[5,[32]]]],[[],[[5,[44]]]],[[],[[5,[45]]]],0,[[16,11],40],[[40,7],8],[[32,7],8],[[44,7],8],[[45,7],8],[[45,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[35,45,24,24,1],44],0,0,0,0,0,[[40,6],40],[40],0,[40,5],[32,5],[44,5],[45,5],[[]],[[]],[[]],[[]],[[],19],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]]],"p":[[4,"TripMode"],[3,"Vec"],[3,"OrigPersonID"],[4,"Ordering"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"PathConstraints"],[15,"u64"],[15,"str"],[4,"Option"],[3,"TypeId"],[3,"MapBorders"],[3,"MapBorder"],[3,"Map"],[3,"Intersection"],[3,"TrafficCounts"],[3,"String"],[3,"Pathfinder"],[3,"Timer"],[3,"PathV2"],[15,"usize"],[4,"TripEndpoint"],[3,"IntersectionID"],[3,"Position"],[3,"PathRequest"],[3,"Pt2D"],[3,"ExternalPerson"],[3,"ExternalTrip"],[4,"ExternalTripEndpoint"],[3,"PersonSpec"],[6,"Result"],[3,"XorShiftRng"],[3,"Time"],[3,"Distance"],[3,"ScenarioGenerator"],[3,"SpawnOverTime"],[3,"BorderSpawnOverTime"],[3,"Scenario"],[4,"ScenarioModifier"],[3,"Duration"],[8,"Iterator"],[3,"IndividTrip"],[4,"TripPurpose"],[3,"MapName"],[13,"TripEndpoint"],[13,"Position"],[13,"RepeatDays"],[13,"AddExtraTrips"],[13,"RepeatDaysNoise"],[13,"ChangeMode"],[13,"Building"],[13,"Border"],[13,"SuddenlyAppear"]]},\
"tests":{"doc":"Integration tests","t":[5,5,5,5,5,5,5,5,5,5,5,5],"n":["ab_test_spurious_diff","bus_route_test","bus_test","check_proposals","dump_turn_goldenfile","import_map","main","run_sim","smoke_test","test_blockfinding","test_lane_changing","test_map_importer"],"q":["tests","","","","","","","","","","",""],"d":["","Describe all public transit routes and keep under version …","On set maps with bus routes imported, simulate an hour to …","Verify all edits under version control can be correctly …","Verify what turns are generated by writing (from lane, to …","Run the contents of a .osm through the full map importer …","","","Simulate an hour on every map.","Generate single blocks and merged LTN-style blocks for …","Verify lane-changing behavior is overall reasonable, by …","Test the map pipeline by importing simple, handcrafted …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0],"f":[[[],1],[[],1],[[],1],[[],1],[2,1],[3,2],[[],1],[[2,4,5],6],[[],1],[[],1],[2,1],[[],1]],"p":[[6,"Result"],[3,"Map"],[3,"String"],[3,"Scenario"],[3,"Timer"],[3,"PrebakeSummary"]]},\
"traffic_seitan":{"doc":"This is a tool that runs a simulation, constantly …","t":[3,5,11,11,11,11,11,12,11,11,11,11,11,11,5,5,5,11,11,11,11],"n":["Args","alter_turn_destinations","as_any","as_any_mut","borrow","borrow_mut","clap","flags","from","from_clap","into","into_any","into_any_arc","into_any_rc","main","nuke_random_parking","run","try_from","try_into","type_id","vzip"],"q":["traffic_seitan","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,0,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,8,8,8,8],"f":[0,[[1,2,3,4]],[[],5],[[],5],[[]],[[]],[[],6],0,[[]],[7,8],[[]],[[[10,[9]]],[[10,[5,9]]]],[11,[[11,[5]]]],[12,[[12,[5]]]],[[]],[[2,3,4]],[[2,1,3,13]],[[],14],[[],14],[[],15],[[]]],"p":[[3,"Sim"],[3,"Map"],[3,"XorShiftRng"],[3,"MapEdits"],[8,"Any"],[3,"App"],[3,"ArgMatches"],[3,"Args"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"Timer"],[4,"Result"],[3,"TypeId"]]},\
"traffic_signal_data":{"doc":"A representation of traffic signal configuration that …","t":[7,3,13,3,3,4,3,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,12,12,5,11,11,11,11,11,11,12,12,12,12,11,11,12,12,12,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12],"n":["DATA","DirectedRoad","Fixed","Plan","Stage","StageType","TrafficSignal","Turn","Variable","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","intersection_osm_node_id","intersection_osm_node_id","into","into","into","into","into","into","is_crosswalk","is_forwards","load_all_data","ne","ne","ne","ne","ne","ne","offset_seconds","osm_node1","osm_node2","osm_way_id","partial_cmp","partial_cmp","permitted_turns","plans","protected_turns","serialize","serialize","serialize","serialize","serialize","serialize","stage_type","stages","start_time_seconds","to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","0","0","1","2"],"q":["traffic_signal_data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","traffic_signal_data::StageType","","",""],"d":["","A road segment connecting two intersections, and a …","A fixed number of seconds.","A plan describes how a traffic signal is configured during …","A traffic signal is in one stage at any time. The stage …","How long a stage lasts before moving to the next one.","","A movement through an intersection.","Minimum, Delay, Additional Minimum is the minimum cycle …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The movement begins at the end of this road segment.","The ID of the OSM node representing the intersection with …","The ID of the OSM node representing the intersection. This …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","True iff the movement is along a crosswalk. Note that …","The direction along the road segment. See …","Returns all traffic signal data compiled into this build, …","","","","","","","Relative to a central clock, delay the first stage by this …","The ID of the OSM node at the start of this road segment.","The ID of the OSM node at the end of this road segment.","The ID of the OSM way representing the road.","","","During this stage, these turns can be performed after …","The traffic signal uses configuration from one plan at a …","During this stage, these turns can be performed with the …","","","","","","","The stage lasts this long before moving to the next one.","The traffic signal repeatedly cycles through these stages. …","This plan takes effect at this local time, measured in …","The movement ends at the beginning of this road segment.","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,4,0,0,0,0,0,4,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,5,1,5,1,2,3,4,5,6,5,6,0,1,2,3,4,5,6,2,6,6,6,5,6,3,1,3,1,2,3,4,5,6,3,2,2,5,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,17,18,18,18],"f":[0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[[]],[[]],[[]],[[]],[[]],[[]],[[5,5],7],[[6,6],7],[[],[[8,[1]]]],[[],[[8,[2]]]],[[],[[8,[3]]]],[[],[[8,[4]]]],[[],[[8,[5]]]],[[],[[8,[6]]]],[[1,1],9],[[2,2],9],[[3,3],9],[[4,4],9],[[5,5],9],[[6,6],9],[[1,10],11],[[2,10],11],[[3,10],11],[[4,10],11],[[5,10],11],[[6,10],11],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],[[8,[[13,[12,1]],14]]]],[[1,1],9],[[2,2],9],[[3,3],9],[[4,4],9],[[5,5],9],[[6,6],9],0,0,0,0,[[5,5],[[15,[7]]]],[[6,6],[[15,[7]]]],0,0,0,[1,8],[2,8],[3,8],[4,8],[5,8],[6,8],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,0],"p":[[3,"TrafficSignal"],[3,"Plan"],[3,"Stage"],[4,"StageType"],[3,"Turn"],[3,"DirectedRoad"],[4,"Ordering"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"i64"],[3,"BTreeMap"],[3,"Error"],[4,"Option"],[3,"TypeId"],[13,"Fixed"],[13,"Variable"]]},\
"updater":{"doc":"","t":[13,13,13,17,13,4,13,11,11,11,5,5,5,11,11,5,5,11,5,5,5,5,5,11,11,11,5,12,12,12,12,12,12],"n":["Download","DryRun","IncrementalUpload","MD5_BUF_READ_SIZE","OptIntoAll","Task","Upload","borrow","borrow_mut","clap","compress","download_file","download_updates","from","from_clap","generate_manifest","incremental_upload","into","just_compare","main","md5sum","remove_empty_directories","rm","try_from","try_into","type_id","upload","dl_from_local","dont_delete","minimal","single_file","version","version"],"q":["updater","","","","","","","","","","","","","","","","","","","","","","","","","","","updater::Task","","","","",""],"d":["Synchronize the local <code>data</code> directory with the …","Just compare data in the current directory with the …","This uploads to S3 from cloud VMs that import maps. This …","","Print the JSON list of all possible city data packs to …","","Synchronize the source-of-truth in S3 with data in the …","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Only useful for Dustin. “Download” from my local S3 …","Only update files from the manifest. Leave extra files …","The Github Actions build uses this to include only a few …","Just check if one file has changed.","Upload data to a temporary version managed by the cloud …","Download data tied to a named release. See …"],"i":[7,7,7,0,7,0,7,7,7,7,0,0,0,7,7,0,0,7,0,0,0,0,0,7,7,7,0,11,11,11,12,13,11],"f":[0,0,0,0,0,0,0,[[]],[[]],[[],1],[[2,2]],[[2,2,3],4],[[5,3,3,3],4],[[]],[6,7],[8,8],[5],[[]],[[]],[[]],[2,5],[2],[2],[[],9],[[],9],[[],10],[2],0,0,0,0,0,0],"p":[[3,"App"],[15,"str"],[15,"bool"],[8,"Future"],[3,"String"],[3,"ArgMatches"],[4,"Task"],[3,"Manifest"],[4,"Result"],[3,"TypeId"],[13,"Download"],[13,"DryRun"],[13,"IncrementalUpload"]]},\
"widgetry":{"doc":"Widgets","t":[12,12,13,13,13,3,13,13,13,13,13,13,13,13,3,3,13,13,2,3,3,13,13,13,13,13,13,13,13,3,13,13,4,13,13,3,13,13,13,3,13,4,4,13,4,13,13,13,17,13,13,13,13,13,3,13,4,3,3,13,3,13,13,13,4,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,4,3,13,4,13,13,13,3,13,3,3,13,13,4,13,13,3,4,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,5,3,3,13,13,13,13,3,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,6,13,13,13,13,13,13,3,3,4,13,13,13,3,3,13,3,13,13,13,13,13,13,4,13,13,13,13,13,13,13,3,13,13,13,13,3,13,3,3,3,13,3,3,8,8,13,13,3,13,3,4,4,3,8,3,13,13,3,3,3,8,3,3,13,3,13,13,13,4,13,13,13,4,3,13,13,4,13,3,3,8,3,13,13,13,13,13,13,12,11,12,12,12,0,11,11,11,11,11,11,0,12,12,12,12,12,12,12,12,0,0,0,10,12,12,12,12,12,12,12,12,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,12,12,12,12,12,12,12,12,12,12,11,11,11,11,12,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,10,10,12,12,12,12,12,12,12,12,0,12,12,12,12,12,12,0,10,10,12,12,0,12,11,12,12,12,12,12,12,11,11,12,12,11,11,11,11,12,0,10,12,12,12,12,12,12,12,12,12,5,12,12,12,12,12,12,12,12,14,12,12,0,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,5,12,12,12,12,12,12,12,12,12,12,12,0,12,12,12,12,12,12,12,12,11,12,11,12,12,12,12,12,12,10,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,0,12,12,0,12,12,12,12,12,10,12,12,12,12,12,12,12,12,12,12,12,11,11,0,12,12,12,0,0,12,12,0,12,12,12,12,12,12,10,11,11,0,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,0,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,13,13,13,13,4,13,13,13,13,13,13,13,13,13,8,8,3,8,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,11,12,11,11,11,11,12,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,12,11,11,11,3,3,3,3,3,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,2,12,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,12,11,11,12,3,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,13,13,13,13,13,3,3,13,13,13,17,4,17,13,13,17,17,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,12,12,12,12,12,18,18,18,18,18,18,18,3,13,13,18,4,18,18,3,13,18,18,18,18,18,18,18,18,18,18,18,18,18,3,13,18,18,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,3,17,17,3,17,17,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,11,11,11,12,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,17,13,13,13,4,13,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,3,13,13,3,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,12,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,13,13,13,3,13,13,4,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,4,4,13,3,13,13,13,13,12,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,13,3,3,3,13,13,13,8,3,3,3,3,4,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,12,11,11,11,11,11,11,11,12,11,12,12,12,11,12,12,12,12,11,11,11,11,11,11,11,0,12,12,0,12,12,12,12,12,12,12,12,12,12,12,12,13,3,3,3,3,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,13,3,13,13,13,3,3,8,3,4,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,12,12,11,11,11,11,12,12,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,12,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,17,3,3,17,12,11,11,11,11,11,12,11,12,11,11,11,11,12,11,12,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,12,5,11,12,12,11,11,11,11,11,11,11,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,17,2,7,6,3,11,11,11,11,11,11,11,12,11,12,12,12,12,11,11,12,12,12,12,0,11,11,11,12,12,11,5,12,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,11,11,11,11,3,11,11,11,12,12,12,11,11,11,11,11,11,12,12,11,11,5,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,5,5,5,5,5,5,5,4,3,13,13,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,5,11,12,12,12,11,12,11,11,11,11,11,11,11,11,11,12,13,13,17,17,4,5,13,13,13,13,17,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,5,11,11,11,12,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,3,3,3,3,3,3,3,3,3,3,3,3,3,11,11,12,11,11,12,12,0,11,0,12,11,11,5,5,12,12,12,11,11,11,11,11,0,12,12,0,12,12,12,12,12,11,12,12,5,12,12,12,12,12,12,12,12,12,0,0,12,12,0,11,5,12,11,11,11,11,11,0,11,11,0,3,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,12,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,12,2,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,12,0,11,12,12,12,11,12,12,12,11,11,11,11,11,11,3,8,11,11,11,11,11,11,11,11,11,11,11,12,12,10,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,3,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,5,3,11,11,11,11,11,5,5,11,11,11,11,11,11,5,11,11,11,11,5,11,11,11,3,11,11,11,11,12,11,11,11,11,11,11,12,11,12,11,11,11,13,13,4,13,13,4,13,17,13,3,13,13,13,3,13,4,2,2,2,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,0,11,11,0,11,12,11,11,11,11,11,11,11,11,11,11,0,10,11,0,11,11,11,11,11,10,0,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,0,11,11,11,11,11,11,11,0,11,11,11,11,11,12,11,12,11,11,11,11,11,0,0,11,0,12,12,11,11,11,12,11,0,11,10,0,0,0,12,11,0,0,11,11,0,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,12,12,12,12,12,3,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,12,11,12,11,11,11,12,11,11,11,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,11,11,11,12,12,12,11,11,12,12,11,12,12,12,11,11,11,11,11,12,11,12,11,11,11,11,11,11,12,11,11,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,12,11,12,11,11,12,12,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,12,11,12,11,11,11,11,11,11,12,11,11,12,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,3,3,13,13,13,17,4,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,12,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,3,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,12,12,5,12,11,11,11,11,11,11,11,3,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,5,12,11,11,11,3,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,13,13,3,4,13,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,12,12,12,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,12,12,11,12,12,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,11,11,11,12,12,11,11,11,11,11,11,12,3,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,13,13,13,3,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,12,12,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,3,11,11,11,11,12,5,11,12,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,8,3,3,11,11,11,11,11,11,11,11,12,11,12,12,11,12,11,11,11,10,10,11,11,11,11,11,11,11,11,12,5,12,12,10,12,5,10,10,11,11,11,11,11,11,10,3,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,12,11,11,11,17,13,13,17,3,4,13,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,12,12,12,12,12,3,3,8,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,11,11,11,12,11,12,11,11,12,11,11,11,11,12,11,11,11,11,11,11,12,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,4,3,3,17,13,13,3,12,11,11,11,11,12,12,12,12,12,11,12,12,11,11,11,12,5,12,12,5,12,12,12,12,11,11,11,12,3,3,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,3,11,11,12,11,11,11,12,11,12,11,11,11,11,11,12,11,11,11,11,12,12,11,12,11,12,11,11,11,11,3,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11],"n":["0","0","A","Above","Any","Autocomplete","B","Backspace","Below","Bottom","BottomAboveOSD","BottomInset","BungeeInlineRegular","BungeeRegular","ButtonBuilder","ButtonStyle","Bytes","C","Cached","Canvas","CanvasSettings","Center","Center","Center","Centered","Change","ChangeAll","ChangeAlpha","Changed","Choice","Clear","ClickCustom","ClickOutcome","Clicked","Colon","Color","Color","ColoredTexture","Comma","CompareTimes","ConsumeState","ContentMode","ControlState","CornerRadii","CornerRounding","Custom","Custom","D","DEFAULT_CORNER_RADIUS","Default","DefaultDraw","Disabled","Dot","DownArrow","DragDrop","DragDropReleased","DrawBaselayer","DrawWithTooltips","Drawable","E","EdgeInsets","Enter","Equals","Escape","Event","EventCtx","ExactPercent","ExactPixels","F","F1","F10","F11","F12","F2","F3","F4","F5","F6","F7","F8","F9","FanChart","Fill","Filler","Focused","Font","FullyRounded","G","Game","GeomBatch","GeomBatch","GeomBatchStack","GfxCtx","H","Horizontal","HorizontalAlignment","Hovered","I","Image","ImageSource","InputOnly","J","K","Keep","KeepWithMouseover","Key","KeyPress","KeyRelease","L","LCtrl","Label","Left","Left","LeftAlt","LeftArrow","LeftBracket","LeftControl","LeftInset","LeftMouseButtonDown","LeftMouseButtonUp","LeftShift","Line","LinePlot","LinearGradient","LinearGradient","M","MakeGrayscale","MaxPercent","Menu","Minus","ModifyState","MouseMovedTo","MouseWheelScroll","Multi","MultiKey","N","NoOp","NoOp","Normal","Nothing","Num0","Num1","Num2","Num3","Num4","Num5","Num6","Num7","Num8","Num9","O","Outcome","OutlineStyle","OverpassBold","OverpassMonoBold","OverpassRegular","OverpassSemiBold","P","Pan","Panel","PanelBuilder","PanelDims","Path","Percent","Percent","PersistentSplit","PlotOptions","Pop","Prerender","PreviousState","Push","Q","R","Recreate","Replace","RewriteColor","Right","RightAlt","RightArrow","RightBracket","RightInset","RightMouseButtonDown","RightMouseButtonUp","RoundedF64","S","ScaleAspectFill","ScaleAspectFit","ScaleToFill","ScatterPlot","ScreenCaptureEverything","ScreenDims","ScreenPt","ScreenRectangle","Semicolon","Series","Settings","SharedAppState","SimpleState","SingleQuote","Slash","Slider","Space","Spinner","StackAlignment","StackAxis","Stash","State","Style","T","Tab","TabController","Text","TextBox","TextExt","TextSpan","Texture","Texture","Toggle","Top","Top","TopInset","Transition","U","UpArrow","Update","UpdateType","UserInput","V","Vertical","VerticalAlignment","W","Warper","Widget","WidgetImpl","WidgetOutput","WindowGainedCursor","WindowLostCursor","WindowResized","X","Y","Z","a","active","active","active_tab_idx","alignment","app_state","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","assets","assets","assets_are_gzipped","assets_base_url","autocrop_dims","autofocus","axis","axis","b","backend","backend_glow","backend_glow_native","batch_text","batches","bg","bg","bg_batch","bg_color","bg_color","bg_disabled","bg_hover","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bottom","btn","btn","btn_floating","btn_outline","btn_plain","btn_plain_destructive","btn_plain_primary","btn_solid","btn_solid_destructive","btn_solid_primary","btn_tab","cached_flexbox","cam_x","cam_y","cam_zoom","cam_zoom","canvas","canvas","canvas","canvas_movement_called","canvas_scroll_speed","canvas_settings","cards","choices","choices","chosen_values","clip_rect","clone","clone","clone_into","clone_into","closest","color","color","color","container_dims","content_mode","contents_dims","corner_rounding","corner_rounding","covered_areas","current","current_idx","current_line","current_percent","current_value","cursor","cursor_x","data","default","default_style","dims","dims","dims","dims","dims","dims","dims","dims","dims","dims","dims","dims","dims_x","dims_x","dims_y","dims_y","disable_style","disabled","disabled_tooltip","down","drag_canvas_from","drag_just_ended","dragging","draw","draw","draw","draw","draw","draw","draw","draw","draw","drawable","drawing","dropdown","dropdown_border","dump_raw_events","edge_auto_panning","elem_buffer","enabled","event","event","event","event","event_consumed","event_ctx","fake_mouseover","fg","fg","fg","fg_color","fg_disabled","field_bg","filterable","fmt","fmt","focus_owned_by","font","from","from","from","from","g","geom","get_dims","gl","gui_scroll_speed","has_focus","height","high","horiz","horiz","hotkey","hotkey","hotkeys","hover","hover_style","hovering","hovering_on_idx","icon_fg","id","id","ignore_initial_events","include_labeled_bytes","inner","inner","input","input","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","invert_scroll","is_disabled","is_label_before_image","key","keys_held","keys_to_pan","label","label","label","label","label","label","layout","lctrl","lctrl_held","left","line","line","line","lines","list","loading_tips","loading_tips","low","map_dims","mapspace","max","max_x","max_x","max_y","max_y","menu","min_zoom_for_detail","mouse_on_slider","multikey","naming_hint","new","next_focus_owned_by","num_draw_calls","num_forks","num_indices","num_search_results","num_uploads","on_click","other_btn","outcome","outline","outline","outline_color","padding","padding","padding","panel_bg","prerender","prerender","primary_fg","pts","r","read_svg","rect","redo_layout","render_value","require_minimum_width","resize","right","run","runner","scale_factor","scale_factor","screen_geom","screencap_mode","scrollable_x","scrollable_y","section_bg","section_outline","set_pos","settings","size","source","spacer","spacing","stack_axis","stack_spacing","started","state","step_size","stops","string","strings","style","style","style","style","svg","table","tabs","tb","text","text","text_destructive_color","text_hotkey_color","text_primary_color","text_secondary_color","text_tooltip_color","text_widget","to_owned","to_owned","tools","tooltip","tooltip","tooltip","tooltip","tooltips","top","top_left","top_left","top_left","top_left","top_left","top_left","top_left","top_left","top_left","top_left","top_level","top_level","touchpad_to_move","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","underlined","uniforms","unit_fmt","up","updates_requested","value","vert","vert","vert_array","vert_buffer","widget","widgets","width","window_has_cursor","window_height","window_icon","window_title","window_width","with_value","x","x1","x2","y","y1","y2","0","0","0","0","0","0","0","0","0","1","is_double_click","0","0","0","0","1","0","0","0","0","1","bytes","cache_key","0","0","0","0","0","0","0","0","1","2","0","0","0","0","0","0","1","0","0","0","0","0","0","dims","dir","zoom","0","0","0","App","Clear","ConsumeState","Custom","DefaultDraw","DrawBaselayer","Keep","KeepWithMouseover","ModifyState","Multi","Pop","PreviousState","Push","Recreate","Replace","SharedAppState","SimpleState","SimpleStateWrapper","State","Transition","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","before_event","before_event","before_quit","before_quit","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","downcast","downcast_mut","downcast_rc","downcast_ref","draw","draw","draw","draw","draw","draw_baselayer","draw_baselayer","draw_baselayer","draw_baselayer","draw_baselayer","draw_default","draw_default","dump_before_abort","dump_before_abort","event","event","event","execute_transition","free_memory","free_memory","from","from","from","from","inner","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is","new_state","on_click","on_click_custom","on_click_custom","on_destroy","on_destroy","on_mouseover","on_mouseover","other_event","other_event","panel","panel_changed","panel_changed","recreate","recreate","shared_app_state","states","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","0","0","0","0","0","0","Assets","are_gzipped","are_gzipped","as_any","as_any_mut","as_ref","base_url","base_url","borrow","borrow_mut","cache_svg","cache_text","clear_text_cache","default_line_height","extra_fonts","font_to_id","from","get_cached_svg","get_cached_text","into","into_any","into_any_rc","is_font_loaded","line_height","line_height_cache","load_font","new","read_svg","style","svg_cache","text_cache","text_opts","try_from","try_into","type_id","Buffer","Drawable","GfxCtxInnards","PrerenderInnards","SpriteTexture","VertexArray","WindowAdapter","actually_upload","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_program","clear","compile_shader","current_clip","destroy","destroy","disable_clipping","draw","draw_finished","draw_new_frame","drop","drop","drop","elem_buffer","empty","enable_clipping","from","from","from","from","from","from","gl","gl","gl","id","id","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","monitor_scale_factor","new","new","new","new","new","num_indices","program","redraw","request_redraw","restore_clip","screencap","set_cursor_icon","set_cursor_visible","set_window_icon","setup","sprite_count","sprite_height","sprite_width","take_clip","texture_bytes","total_bytes_uploaded","transform_location","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upload_gl2","upload_webgl1","use_program_for_renderonly","vert_array","vert_buffer","was_destroyed","was_destroyed","window","window_adapter","window_location","window_resized","window_size","0","WindowAdapter","as_any","as_any_mut","borrow","borrow_mut","draw_finished","from","into","into_any","into_any_rc","setup","try_from","try_into","type_id","window","window_resized","Above","Below","Bottom","BottomAboveOSD","BottomInset","Canvas","CanvasSettings","Center","Center","Centered","DRAG_THRESHOLD","HorizontalAlignment","INSET","Left","LeftInset","PANNING_THRESHOLD","PAN_SPEED","Percent","Percent","Right","RightInset","Top","TopInset","VerticalAlignment","align_window","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cam_x","cam_y","cam_zoom","canvas_scroll_speed","center_on_map_pt","center_to_map_pt","center_to_screen_pt","center_zoom","clone","clone","clone","clone_into","clone_into","clone_into","covered_areas","cursor","deserialize","drag_canvas_from","drag_just_ended","edge_auto_panning","eq","eq","fmt","fmt","from","from","from","from","get_cursor","get_cursor_in_map_space","get_cursor_in_screen_space","get_inner_bounds","get_map_bounds","get_screen_bounds","get_window_dims","gui_scroll_speed","handle_event","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","invert_scroll","is_dragging","is_max_zoom","is_min_zoom","is_unzoomed","is_zoomed","keys_held","keys_to_pan","map_dims","map_to_screen","mark_covered_area","max_zoom","min_zoom","min_zoom_for_detail","ne","ne","new","new","screen_to_map","serialize","settings","start_drawing","to_owned","to_owned","to_owned","touchpad_to_move","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","window_has_cursor","window_height","window_width","zoom","0","0","0","0","0","0","BLACK","BLUE","CACTUS","CLEAR","CONCRETE","CROSS_HATCH","CYAN","Color","Color","ColoredTexture","DIRT","Fill","GRASS","GREEN","LinearGradient","LinearGradient","NOOP","ORANGE","PINE_TREE","PINK","PURPLE","RED","RUNNING_WATER","SAND","SHRUB","SNOW","SNOW_PERSON","STILL_WATER","TREE","Texture","Texture","WHITE","YELLOW","a","alpha","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_hex","b","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deserialize","dull","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","g","grey","hex","interp","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","invert","lerp","lerp","line","multiply_alpha","ne","ne","ne","ne","new_fill","r","rgb","rgb_f","rgba","rgba_f","serialize","shade","shader_style","stops","tint","to_owned","to_owned","to_owned","to_owned","to_pct","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","0","0","0","0","1","GfxCtx","MAPSPACE_Z","MENU_Z","Prerender","SCREENSPACE_Z","TOOLTIP_Z","Uniforms","actually_upload","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_ref","as_ref","as_ref","as_ref","assets","assets_are_gzipped","assets_base_url","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","canvas","clear","default_line_height","disable_clipping","draw_mouse_tooltip","draw_polygon","draw_tooltip_at","enable_clipping","fmt","fork","fork_screenspace","from","from","from","get_cursor_in_map_space","get_num_uploads","get_scale_factor","get_screen_bounds","get_total_bytes_uploaded","inner","inner","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_key_down","is_screencap","naming_hint","new","new","num_draw_calls","num_forks","num_uploads","prerender","redraw","redraw_at","request_redraw","scale_factor","screen_to_map","screencap_mode","set_screencap_naming_hint","style","style","transform","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unfork","uniforms","upload","upload","upload_temporary","window","window_resized","window_size","A","Any","B","Backspace","C","Colon","Comma","D","Dot","DownArrow","E","Enter","Equals","Escape","Event","F","F1","F10","F11","F12","F2","F3","F4","F5","F6","F7","F8","F9","G","H","I","J","K","Key","KeyPress","KeyRelease","L","LCtrl","LeftAlt","LeftArrow","LeftBracket","LeftControl","LeftMouseButtonDown","LeftMouseButtonUp","LeftShift","M","MAX_DOUBLE_CLICK_DURATION","Minus","MouseMovedTo","MouseWheelScroll","MultiKey","N","NUM_KEYS","NoOp","Normal","Num0","Num1","Num2","Num3","Num4","Num5","Num6","Num7","Num8","Num9","O","P","Q","R","RightAlt","RightArrow","RightBracket","RightMouseButtonDown","RightMouseButtonUp","S","Semicolon","SingleQuote","Slash","Space","T","Tab","U","UpArrow","Update","V","W","WindowGainedCursor","WindowLostCursor","WindowResized","X","Y","Z","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","describe","describe","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from_winit_event","from_winit_key","get_hash","get_hash","hash","hash","hotkeys","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","lctrl","ne","ne","partial_cmp","partial_cmp","to_char","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","txt","txt","type_id","type_id","type_id","0","0","0","0","0","0","1","is_double_click","0","0","0","EventCtx","Game","InputOnly","LoadingScreen","Pan","ScreenCaptureEverything","UpdateType","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_ref","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","canvas","canvas","canvas_movement","canvas_movement_called","clone","clone_into","cursor_clickable","cursor_grabbable","cursor_grabbing","default_line_height","eq","fake_mouseover","fmt","focus_owned_by","from","from","from","hide_cursor","input","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_font_loaded","is_key_down","last_drawn","lines","load_font","loading_screen","make_loading_screen","max_capacity","ne","new","next_focus_owned_by","no_op_event","normal_left_click","prerender","prerender","println","redo_mouseover","redraw","reprintln","request_update","set_style","show_cursor","style","style","style","title","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","updates_requested","upload","dims","dir","zoom","Change","ChangeAll","ChangeAlpha","GeomBatch","MakeGrayscale","NoOp","RewriteColor","append","apply","as_any","as_any","as_any_mut","as_any_mut","autocrop","autocrop_dims","batch","borrow","borrow","borrow_mut","borrow_mut","build","centered_on","clone","clone","clone_into","clone_into","color","consume","default","deserialize","draw","eq","extend","fmt","fmt","from","from","from","from","geom_batch_stack","get_bounds","get_dims","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_geojson","into_widget","is_empty","list","load_svg","load_svg_bytes","load_svg_bytes_uncached","multi_transform","ne","new","push","push_with_z","rotate","rotate_around_batch_center","scale","scale_to_fit_width","scale_xy","serialize","set_z_offset","shift","to_owned","to_owned","translate","try_from","try_from","try_into","try_into","type_id","type_id","unshift","upload","0","0","0","1","Alignment","Axis","Center","GeomBatchStack","Horizontal","Left","Top","Vertical","alignment","append","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","axis","batch","batches","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","eq","eq","fmt","fmt","fmt","from","from","from","from_axis","get","get_mut","horizontal","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","push","set_alignment","set_axis","set_spacing","spacing","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vertical","UserInput","any_pressed","as_any","as_any_mut","borrow","borrow_mut","consume_event","event","event_consumed","from","get_mouse_scroll","get_moved_mouse","has_been_consumed","into","into_any","into_any_arc","into_any_rc","is_window_resized","key_released","lctrl_held","left_mouse_button_pressed","left_mouse_button_released","left_mouse_double_clicked","new","nonblocking_is_update_event","pressed","try_from","try_into","type_id","unconsume_event","use_update_event","window_lost_cursor","0","ClickedFreeSpace","ClickedObject","Dragging","DrawCustomUnzoomedShapes","DrawUnzoomedShapes","DummyID","HoverChanged","Keypress","Nothing","ObjectID","PerZoom","ToggleZoomed","ToggleZoomedBuilder","World","WorldOutcome","always_draw_unzoomed","always_draw_unzoomed","append","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","build","builder","clone","clone_into","color","dragging_from","draw","draw_differently_zoomed","draw_master_batches","draw_per_zoom","empty","from","from","from","hovering","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","min_zoom_for_detail","new","objects","per_zoom","per_zoom","push","quadtree","shapes","shapes","step_size","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unzoomed","unzoomed","unzoomed","world","zoomed","zoomed","0","0","0","0","1","1","cursor","dx","dy","obj","Circle","DrawCustomUnzoomedShapes","DrawCustomUnzoomedShapesBuilder","DrawUnzoomedShapes","DrawUnzoomedShapesBuilder","Line","PerZoom","Shape","add_circle","add_custom","add_line","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","builder","builder","discretize_zoom","discretize_zoom","draw","draw_per_zoom","empty","empty","from","from","from","from","from","from","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","maybe_draw","min_zoom_for_detail","new","per_zoom","per_zoom","render","shapes","shapes","shapes","shapes","step_size","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","center","color","color","polyline","radius","width","0","ClickedFreeSpace","ClickedObject","Dragging","DummyID","HoverChanged","Keypress","Nothing","Object","ObjectBuilder","ObjectID","World","WorldOutcome","_id","add","add_unnamed","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounded","build","calculate_hover","calculate_hovering","clickable","clickable","clickable","clone","clone","clone_into","clone_into","delete","delete_before_replacement","draggable","draggable","draggable","dragging_from","draw","draw","draw_color","draw_color_unzoomed","draw_hover","draw_hover","draw_hover_rewrite","draw_hovered","draw_master_batch","draw_master_batch_built","draw_master_batches","draw_normal","draw_normal","drawn_in_master_batch","eq","equivalent","event","fmt","from","from","from","from","from","get_hash","get_hovered_keybindings","get_hovering","hack_unset_hovering","hash","hitbox","hitboxes","hitboxes","hitboxes","hotkey","hover_alpha","hover_color","hover_outline","hovering","id","initialize_hover","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","invisibly_hoverable","keybindings","keybindings","maybe_delete","maybe_map_id","ne","objects","override_tooltip","quadtree","quadtree_id","rebuilt_during_drag","set_clickable","to_owned","to_owned","tooltip","tooltip","tooltip","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unbounded","world","zorder","zorder","zorder","0","0","0","0","1","1","cursor","dx","dy","obj","DEBUG_PERFORMANCE","Settings","State","UPDATE_FREQUENCY","app","as_any","as_any","as_any_mut","as_any_mut","assets_are_gzipped","assets_are_gzipped","assets_base_url","assets_base_url","borrow","borrow","borrow_mut","borrow_mut","canvas","canvas_settings","canvas_settings","draw","dump_raw_events","dump_raw_events","event","focus_owned_by","free_memory","from","from","into","into","into_any","into_any","into_any_rc","into_any_rc","loading_tips","loading_tips","new","read_svg","read_svg","require_minimum_width","require_minimum_width","run","scale_factor","scale_factor","style","try_from","try_from","try_into","try_into","type_id","type_id","window_icon","window_icon","window_title","ScreenDims","ScreenPt","ScreenRectangle","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","center","clone","clone","clone","clone_into","clone_into","clone_into","contains","deserialize","dims","eq","eq","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","height","height","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","ne","ne","new","new","pad","percent_to_pt","placeholder","pt_to_percent","serialize","square","to_owned","to_owned","to_owned","to_polygon","to_pt","top_left","top_left_for_corner","translated","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","width","width","x","x1","x2","y","y1","y2","zero","zero","AB_ORANGE_1","ButtonStyle","DEFAULT_OUTLINE_THICKNESS","OutlineStyle","Style","as_any","as_any_mut","borrow","borrow_mut","btn_back","btn_close","btn_close_widget","btn_floating","btn_next","btn_outline","btn_plain","btn_plain_destructive","btn_plain_primary","btn_popup_icon_text","btn_prev","btn_solid","btn_solid_destructive","btn_solid_primary","btn_tab","button_style","clone","clone_into","dark_bg","dropdown_border","field_bg","from","hex","icon_fg","into","into_any","into_any_arc","into_any_rc","light_bg","loading_tips","panel_bg","primary_fg","section_bg","section_outline","text_destructive_color","text_hotkey_color","text_primary_color","text_secondary_color","text_tooltip_color","to_owned","try_from","try_into","type_id","ButtonStyle","apply","as_any","as_any_mut","bg","bg_disabled","bg_hover","borrow","borrow_mut","btn","clone","clone_into","dropdown","fg","fg_disabled","from","icon","icon_button","icon_bytes","icon_text","into","into_any","into_any_arc","into_any_rc","outline","outline_dark_fg","outline_light_fg","plain_dark_fg","plain_destructive","plain_light_fg","plain_primary","popup","solid_dark_fg","solid_destructive","solid_light_fg","solid_primary","text","to_owned","try_from","try_into","type_id","HIGH_QUALITY","LOW_QUALITY","add_svg_inner","convert_color","convert_path","convert_stroke","load_svg","load_svg_bytes","load_svg_from_bytes_uncached","Col","Filter","Sortable","Static","Table","apply","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clicked","column","columns","data","descending","empty","filter","from","from","from","from_controls","get_filtered_data","id","into","into","into","into_any","into_any","into_any","into_any_rc","into_any_rc","into_any_rc","label_per_row","new","panel_changed","render","render_table","replace_render","skip","sort_by","state","static_col","to_controls","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","BungeeInlineRegular","BungeeRegular","DEFAULT_FONT","DEFAULT_FONT_SIZE","Font","Line","OverpassBold","OverpassMonoBold","OverpassRegular","OverpassSemiBold","SCALE_LINE_HEIGHT","Text","TextExt","TextSpan","add_appended","add_line","append","append_all","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","batch","batch","batch_text","bg","bg_color","big_heading_plain","big_heading_styled","big_monospaced","body","bold_body","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","change_fg","clone","clone","clone","clone_into","clone_into","clone_into","default_fg","dims","display_title","eq","equivalent","extend","family","fg","fg_color","fg_color_for_style","fmt","fmt","fmt","font","font","from","from","from","from","from","from","from_all","from_multiline","get_hash","hash","hash_key","highlight_last_line","inner_render","inner_wrap_to_pct","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_widget","into_widget","is_empty","lines","maybe_fg","new","outline_color","outlined","remove_colors_from_last_line","render","render_autocropped","render_curvey","render_line","rendered_width","secondary","size","size","small","small_heading","small_monospaced","text","text_widget","to_owned","to_owned","to_owned","tooltip","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","underlined","underlined","wrap_to_pct","0","0","Cached","ChooseSomething","ColorLegend","ColorScale","DivergingScale","FileLoader","FutureLoader","Lasso","PolyLineLasso","PopupMsg","PromptInput","RawBytes","URLManager","as_any","as_any_mut","avg","borrow","borrow_mut","cb","cb","choose_something","clear","colors","contents","default","from","get_clipboard","grey_out_map","high_color","ignore","inner_progress_receiver","into","into_any","into_any_arc","into_any_rc","key","lasso","last_inner_progress","last_outer_progress","load","loading_title","low_color","max","mid_color","min","new","on_load","on_load","open_browser","outer_progress_receiver","panel","panel","panel","panel","path","pl","points","polygon","popup","prompt_input","receiver","runtime","screenshot","set","set_clipboard","started","take","try_from","try_into","type_id","update","url","value","value_mut","warper","ChooseSomething","as_any","as_any_mut","borrow","borrow_mut","cb","draw","draw_baselayer","event","from","into","into_any","into_any_rc","new_state","panel","try_from","try_into","type_id","0","ColorLegend","ColorScale","DivergingScale","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","avg","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","categories","eval","eval","from","from","from","from_colorous","gradient","gradient_with_width","high_color","ignore","ignore","inner_eval","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","low_color","make_legend","max","mid_color","min","new","range","row","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Lasso","PolyLineLasso","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","draw","draw","event","event","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","new","new","pl","points","polygon","try_from","try_from","try_into","try_into","type_id","type_id","0","FileLoader","FutureLoader","RawBytes","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","draw","event","from","from","inner_progress_receiver","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","last_inner_progress","last_outer_progress","loading_title","native_loader","new_state","on_load","outer_progress_receiver","panel","read_file","receiver","runtime","started","try_from","try_from","try_into","try_into","type_id","type_id","FileLoader","Readable","as_any","as_any_mut","borrow","borrow_mut","draw","event","from","into","into_any","into_any_rc","new_state","on_load","path","read_file","try_from","try_into","type_id","PopupMsg","as_any","as_any_mut","borrow","borrow_mut","draw","draw_baselayer","event","from","into","into_any","into_any_rc","new_state","new_state_for_txt","panel","try_from","try_into","type_id","PromptInput","as_any","as_any_mut","borrow","borrow_mut","cb","draw","draw_baselayer","event","from","into","into_any","into_any_rc","new_state","panel","try_from","try_into","type_id","screenshot_everything","URLManager","as_any","as_any_mut","borrow","borrow_mut","change_camera","change_url_free_param","change_url_param","from","get_cam_param","into","into_any","into_any_arc","into_any_rc","must_update_url","parse_center_camera","try_from","try_into","type_id","update_url","update_url_cam","update_url_free_param","update_url_param","Warper","as_any","as_any_mut","borrow","borrow_mut","cam_zoom","event","from","into","into_any","into_any_arc","into_any_rc","line","new","started","try_from","try_into","type_id","Changed","ClickCustom","ClickOutcome","Clicked","CornerRadii","CornerRounding","Custom","DEFAULT_CORNER_RADIUS","DragDropReleased","EdgeInsets","Focused","FullyRounded","Label","LayoutStyle","Nothing","Outcome","Panel","PanelBuilder","PanelDims","Widget","WidgetImpl","WidgetOutput","abs","align_bottom","align_left","align_right","align_vert_center","apply_flexbox","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","autocomplete","bg","bg","bg_batch","bg_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","button","can_restore","can_restore","centered","centered_cross","centered_horiz","centered_vert","clone","clone","clone_into","clone_into","col","compare_times","consume_geometry","container","containers","corner_rounding","corner_rounding","currently_hovering","custom_col","custom_row","default","default","describe","downcast","downcast_mut","downcast_rc","downcast_ref","drag_drop","draw","draw","dropdown","dropdown","eq","evenly_spaced","evenly_spaced_col","evenly_spaced_row","event","fan_chart","fill_height","fill_width","filler","find","find_mut","flex_wrap","flex_wrap_no_inner_spacing","fmt","fmt","force_width","force_width_parent_pct","force_width_window_pct","from","from","from","from","from","from","from","from","from","from","from","get_all_click_actions","get_dims","get_flexbox","get_width_for_forcing","hide","horiz_separator","id","image","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_geom","is","is_default","just_draw","layout","left","line_plot","margin","margin_above","margin_below","margin_horiz","margin_left","margin_right","margin_vert","menu","named","ne","new","new","nothing","outcome","outline","outline","padding","padding_bottom","padding_left","padding_right","padding_top","panel","persistent_split","placeholder","plots","rect","redo_layout","restore","restore","restore","right","row","scatter_plot","section","set_pos","slider","spinner","stash","style","tab_body","table","tabs","take","take_just_draw","text_box","to_owned","to_owned","toggle","top","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uniform","vert_separator","widget","zero","0","0","0","0","0","0","0","0","1","2","Autocomplete","as_any","as_any_mut","borrow","borrow_mut","choices","chosen_values","current_line","draw","event","from","get_dims","into","into_any","into_any_arc","into_any_rc","menu","new_widget","num_search_results","recalc_menu","set_pos","take_final_value","tb","try_from","try_into","type_id","Button","ButtonBuilder","ButtonStateStyle","Label","action","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","batch","bg_color","bg_color","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_def","build_widget","clone","clone","clone","clone_into","clone_into","clone_into","color","corner_rounding","corner_rounding","custom_batch","custom_batch","default","default","default","default_style","dims","disable_style","disabled","disabled_tooltip","disabled_tooltip","disabled_tooltip","draw","draw_disabled","draw_hovered","draw_normal","event","fmt","fmt","fmt","font","font","font_size","font_size","from","from","from","from","get_action","get_dims","hitbox","horizontal","hotkey","hotkey","hotkey","hover_style","hovering","image","image","image_batch","image_bg_color","image_bytes","image_color","image_content_mode","image_corner_rounding","image_dims","image_first","image_padding","image_path","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_disabled","is_disabled","is_enabled","is_label_before_image","label","label_color","label_first","label_styled_text","label_text","label_underlined_text","maybe_disabled_tooltip","new","new","no_tooltip","outline","outline","outline_color","override_style","padding","padding","padding_bottom","padding_left","padding_right","padding_top","set_pos","stack_axis","stack_spacing","stack_spacing","style","style_mut","styled_text","text","to_owned","to_owned","to_owned","tooltip","tooltip","tooltip","top_left","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vertical","CompareTimes","as_any","as_any_mut","borrow","borrow_mut","dims","draw","draw","event","from","get_dims","into","into_any","into_any_rc","max","new_widget","set_pos","top_left","try_from","try_into","type_id","Container","Nothing","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","draw","draw","event","event","from","from","get_dims","get_dims","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","is_row","members","new","set_pos","set_pos","try_from","try_from","try_into","try_into","type_id","type_id","Card","DragDrop","Dragging","Idle","Initial","SPACE_BETWEEN_CARDS","State","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","axis","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cards","default_batch","dims","dims","draw","draw","eq","event","from","from","from","get_dims","get_dragging_state","hovering_batch","hovering_value","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_widget","label","mouseover_card","ne","new","push_card","recalc_draw","selected_batch","selected_value","set_initial_state","set_pos","state","top_left","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","value","cursor_at","drag_from","hovering","hovering","new_idx","orig_idx","selected","selected","Dropdown","as_any","as_any_mut","borrow","borrow_mut","btn","can_restore","choices","current_idx","current_value","current_value_label","draw","event","from","get_dims","into","into_any","into_any_rc","is_persisten_split","label","make_btn","menu","new","open_menu","restore","set_pos","try_from","try_into","type_id","FanChart","as_any","as_any_mut","borrow","borrow_mut","dims","draw","draw","event","from","get_dims","into","into_any","into_any_rc","new_widget","set_pos","slidey_window","top_left","try_from","try_into","type_id","Filler","FixedSize","RatioWidthSquare","ResizeRule","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","dims","draw","event","fixed_dims","from","from","get_dims","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","resize","set_pos","square_width","try_from","try_from","try_into","try_into","type_id","type_id","0","0","1","Bytes","GeomBatch","Image","ImageSource","Path","as_any","as_any","as_any_mut","as_any_mut","bg_color","bg_color","borrow","borrow","borrow_mut","borrow_mut","build_batch","clone","clone","clone_into","clone_into","color","color","content_mode","content_mode","corner_rounding","corner_rounding","default","dims","dims","empty","fmt","fmt","from","from","from_batch","from_bytes","from_path","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_widget","load","merged_image_style","padding","padding","padding_bottom","padding_left","padding_right","padding_top","source","source","source_batch","source_bytes","source_path","to_owned","to_owned","tooltip","tooltip","try_from","try_from","try_into","try_into","type_id","type_id","untinted","0","0","1","bytes","cache_key","DeferDraw","DrawWithTooltips","JustDraw","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","batch","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","dims","dims","dims","draw","draw","draw","draw","draw","event","event","event","from","from","from","get_dims","get_dims","get_dims","hover","hovering_on_idx","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","new_widget","new_widget","set_pos","set_pos","set_pos","tooltips","top_left","top_left","top_left","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wrap","Hovering","LinePlot","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","closest","dims","draw","draw","draw_cursor","event","from","from","get_dims","get_hovering","hits","hovering","into","into","into_any","into_any","into_any_rc","into_any_rc","max_x","max_y","new_widget","set_hovering","set_pos","tooltip","top_left","try_from","try_from","try_into","try_into","type_id","type_id","unit_fmt","Menu","as_any","as_any_mut","borrow","borrow_mut","calculate_txt","choices","current_idx","dims","draw","event","from","get_dims","into","into_any","into_any_arc","into_any_rc","new","set_current","set_pos","take_current_choice","top_left","try_from","try_into","type_id","widget","ExactPercent","ExactPixels","MaxPercent","Panel","PanelBuilder","PanelDims","align","aligned","aligned_pair","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","autocomplete_done","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","build_custom","cached_flexbox","center_of","center_of_panel","clicked_outside","clip_rect","clone","clone_into","clone_stashed","compute_flexbox","container_dims","contents_dims","currently_hovering","dims_height","dims_width","dims_x","dims_x","dims_y","dims_y","draw","dropdown_value","empty","event","exact_size_percent","find","find_mut","from","from","from","get_all_click_actions","has_widget","horiz","horiz","ignore_initial_events","ignore_initial_events","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","invalidate_flexbox","is_button_enabled","is_checked","maybe_dropdown_value","maybe_find","maybe_find_widget","maybe_is_checked","modify_spinner","new_builder","panel_dims","persistent_split_value","recompute_layout","recompute_layout_if_needed","recompute_scrollbar_layout","rect_of","replace","restore","restore_scroll","scroll_offset","scroll_to_member","scrollable_x","scrollable_y","set_checked","set_scroll_offset","slider","slider_mut","spinner","stash","swap_inner_content","take","take_menu_choice","text_box","to_owned","top_level","top_level","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_container_dims_for_canvas_dims","update_scroll_sliders","vert","vert","0","0","0","PersistentSplit","as_any","as_any_mut","borrow","borrow_mut","btn","button_builder","current_value","current_value","draw","dropdown","event","from","get_dims","into","into_any","into_any_rc","new","set_pos","spacer","try_from","try_into","type_id","widget","Axis","PlotOptions","Series","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","color","default","dims","disabled","filterable","filterable","fixed","from","from","from_f64","from_percent","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","label","make_legend","max_x","max_y","prettyprint","pts","thick_lineseries","to_f64","to_percent","try_from","try_from","try_into","try_into","type_id","type_id","zero","ScatterPlot","as_any","as_any_mut","borrow","borrow_mut","dims","draw","draw","event","from","get_dims","into","into_any","into_any_rc","new_widget","set_pos","top_left","try_from","try_into","type_id","AREA_SLIDER_BG_WIDTH","Area","Horizontal","SCROLLBAR_BG_WIDTH","Slider","Style","Vertical","area","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","button_geom","current_percent","dims","dragging","draw","draw","event","from","from","get_dims","get_percent","get_value","horizontal_scrollbar","inner_dims","inner_event","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","label","mouse_on_slider","new_widget","padding","pt_to_percent","recalc","set_percent","set_pos","style","top_left","try_from","try_from","try_into","try_into","type_id","type_id","vertical_scrollbar","dragger_len","dragger_len","main_bg_len","main_bg_len","width","0","RoundedF64","Spinner","SpinnerValue","TEXT_WIDTH","add","add_assign","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","can_restore","clamp","clone","clone_into","current","dims","down","draw","drawable","drawable","eq","event","f64_widget","fmt","from","from","get_dims","high","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","label","low","modify","ne","new","outline","partial_cmp","render_value","restore","set_pos","step_size","sub","sub_assign","to_owned","to_string","top_left","try_from","try_from","try_into","try_into","type_id","type_id","up","widget","widget_with_custom_rendering","Stash","as_any","as_any_mut","borrow","borrow_mut","draw","event","from","get_dims","get_value","into","into_any","into_any_rc","new_widget","set_pos","try_from","try_into","type_id","value","Col","Column","Filter","ROWS","Sortable","Static","Table","apply","as_any","as_any_mut","borrow","borrow_mut","col","columns","data","descending","filter","from","from_controls","id","into","into_any","into_any_rc","label_per_row","make_pagination","name","render","render_table","skip","sort_by","state","to_controls","try_from","try_into","type_id","0","Tab","TabController","activate_tab","active_content_id","active_tab_idx","active_tab_idx","as_any","as_any","as_any_mut","as_any_mut","bar_item","bar_items_id","borrow","borrow","borrow_mut","borrow_mut","build_bar_item_widget","build_bar_items","build_widget","content","from","from","handle_action","id","into","into","into_any","into_any","into_any_rc","into_any_rc","new","new","pop_active_content","push_tab","tab_id","tab_id","tabs","try_from","try_from","try_into","try_into","type_id","type_id","TextBox","as_any","as_any_mut","autofocus","borrow","borrow_mut","calculate_text","cursor_x","default_widget","dims","draw","event","from","get_dims","get_line","has_focus","into","into_any","into_any_arc","into_any_rc","label","line","new","padding","set_pos","top_left","try_from","try_into","type_id","widget","Toggle","as_any","as_any_mut","borrow","borrow_mut","btn","checkbox","choice","colored_checkbox","custom_checkbox","draw","enabled","event","from","get_dims","into","into_any","into_any_rc","new_widget","other_btn","set_pos","switch","try_from","try_into","type_id"],"q":["widgetrywidgetry::ClickOutcome","","widgetry::CornerRounding","widgetry::Event","","","","","","","","widgetry::Fill","","","","","widgetry::HorizontalAlignment","","widgetry::ImageSource","","","","","widgetry::MultiKey","","","widgetry::Outcome","","","","","","","widgetry::PanelDims","","","widgetry::RewriteColor","","","","widgetry::Transition","","","","","","widgetry::UpdateType","","","widgetry::VerticalAlignment","","","widgetry::app_state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::app_state::Transition","","","","","","widgetry::assets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::backend_glow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::backend_glow_native","","","","","","","","","","","","","","","","","widgetry::canvas","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::canvas::HorizontalAlignment","","widgetry::canvas::VerticalAlignment","","","widgetry::color","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::color::Fill","","","","","widgetry::drawing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::event::Event","","","","","","","","widgetry::event::MultiKey","","","widgetry::event_ctx","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::event_ctx::UpdateType","","","widgetry::geom","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::geom::RewriteColor","","","","widgetry::geom::geom_batch_stack","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::input","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::mapspace","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::mapspace::WorldOutcome","","","","","","","","","","widgetry::mapspace::unzoomed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::mapspace::unzoomed::Shape","","","","","","widgetry::mapspace::world","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::mapspace::world::WorldOutcome","","","","","","","","","","widgetry::runner","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::screen_geom","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::style","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::style::button_style","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::svg","","","","","","","","","widgetry::table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::table::Col","widgetry::text","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::tools","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::tools::choose_something","","","","","","","","","","","","","","","","","","widgetry::tools::colors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::tools::lasso","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::tools::load","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::tools::load::native_loader","","","","","","","","","","","","","","","","","","","widgetry::tools::popup","","","","","","","","","","","","","","","","","","widgetry::tools::prompt_input","","","","","","","","","","","","","","","","","","widgetry::tools::screenshot","widgetry::tools::url","","","","","","","","","","","","","","","","","","","","","","","widgetry::tools::warper","","","","","","","","","","","","","","","","","","widgetry::widgetswidgetry::widgets::ClickOutcome","","widgetry::widgets::CornerRounding","widgetry::widgets::Outcome","","","","","","","widgetry::widgets::autocomplete","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::button","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::compare_times","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::containers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::drag_drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::drag_drop::State","","","","","","","","widgetry::widgets::dropdown","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::fan_chart","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::filler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::filler::ResizeRule","","","widgetry::widgets::image","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::image::ImageSource","","","","","widgetry::widgets::just_draw","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::line_plot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::menu","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::panel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::panel::PanelDims","","","widgetry::widgets::persistent_split","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::plots","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::scatter_plot","","","","","","","","","","","","","","","","","","","","widgetry::widgets::slider","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::slider::Style","","","","","widgetry::widgets::spinner","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::stash","","","","","","","","","","","","","","","","","","","widgetry::widgets::table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::table::Col","widgetry::widgets::tabs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::text_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::toggle","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","UTF-8 encoded bytes of an SVG","","","","","","","","","Change every instance of the first color to the second","Change all colors to the specified value. For this to be …","Change the alpha value of all colors to this value.","A dropdown, checkbox, spinner, etc changed values. The …","","Replace the entire stack of states with this stack.","An action was done, with custom data. The caller must cast …","When an action happens through a button-like widget, what …","An action was done","","","","The <code>color</code> parameter is multiplied by any color baked into …","","","This destroys the current state, running the callback on …","Rules for how content should stretch to fill its bounds","","","","Don’t draw anything.","","","","","Call <code>SharedAppState::draw_default</code>.","","","","","On a DragDrop widget, a member was clicked on and …","Before <code>State::draw</code> is called, draw something else.","","Geometry that’s been uploaded to the GPU once and can be …","","","","","","","","","","","","","","","","","","","","","","","","","Doesn’t do anything by itself, just used for widgetsing. …","Some named widget currently holds focus","","","","","A mutable builder for a group of colored tessellated …","Previously rendered graphics, in the form of a <code>GeomBatch</code>, …","Similar to [<code>Widget::row</code>]/[<code>Widget::column</code>], but for …","","","","","","","A stylable UI component builder which presents vector …","The visual","","","","Don’t do anything, keep the current state as the active …","Keep the current state as the active one, but immediately …","","","","","","","","","","","","","","","Note: When double clicking, there will be two …","","","","","","","Convert all colors to greyscale.","","","","If a state needs to pass data back to its parent, use …","","","Execute a sequence of transitions in order.","","","","Don’t do anything","","Nothing happened","","","","","","","","","","","","The result of a Panel handling an event","","","","","","","","","","","Path to an SVG file","","","","","Destroy the current state, and resume from the previous one","","Call the previous state’s <code>draw</code>. This won’t recurse, …","Push a new active state on the top of the stack.","","","Call <code>State::recreate</code> on the current top of the stack","Replace the current state with a new one. Equivalent to …","A way to transform all colors in a GeomBatch.","","","","","","","","An f64 rounded to 4 decimal places. Useful with Spinners, …","","Maintaining aspect ratio, content grows until both bounds …","Maintaining aspect ratio, content grows until it touches …","Stretches content to fit its bounds exactly, breaking …","","","ScreenDims is in units of logical pixels, as opposed to …","ScreenPt is in units of logical pixels, as opposed to …","ScreenRectangle is in units of logical pixels, as opposed …","","","Customize how widgetry works. Most of these settings can’…","Any data that should last the entire lifetime of the …","Many states fit a pattern of managing a single panel, …","","","","","","","","An invisible widget that stores some arbitrary data on the …","A temporary state of an application. There’s a stack of …","","","","","","","","","","Once uploaded, textures are addressed by their id, …","","","","","When a state responds to an event, it can specify some way …","","","","","","","","","","","","Create a new widget by implementing this trait. You can …","","","","","","","","","","","","","A widgetry application splits its state into two pieces: …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draw","Draw the widget. Be sure to draw relative to the top-left …","","","","","","","","","","","","","","","","","Respond to a UI event, such as input or time passing.","Your chance to react to an event. Any side effects outside …","","","","","","","","","","","","","","This widget (in some panel) exclusively owns focus. Don’…","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","What width and height does the widget occupy? If this …","","","","","","","","","","","","","","","","","","","Like <code>std::include_bytes!</code>, but also returns its argument, …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Some map-space elements are drawn differently when …","","","","","While handling an event, this widget (in some panel) this …","","","","","","Called when something on the panel has been clicked. Since …","","This widget produced an Outcome, and event handling should …","","","","","","","","","","","","","","","This widget changed dimensions, so recalculate layout.","","","","","","","","","","","","","","","Your widget’s top left corner should be here. Handle …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Replace the entire stack of states with this stack.","This destroys the current state, running the callback on …","Don’t draw anything.","Call <code>SharedAppState::draw_default</code>.","Before <code>State::draw</code> is called, draw something else.","Don’t do anything, keep the current state as the active …","Keep the current state as the active one, but immediately …","If a state needs to pass data back to its parent, use …","Execute a sequence of transitions in order.","Destroy the current state, and resume from the previous one","Call the previous state’s <code>draw</code>. This won’t recurse, …","Push a new active state on the top of the stack.","Call <code>State::recreate</code> on the current top of the stack","Replace the current state with a new one. Equivalent to …","Any data that should last the entire lifetime of the …","Many states fit a pattern of managing a single panel, …","","A temporary state of an application. There’s a stack of …","When a state responds to an event, it can specify some way …","","","","","","","","","Before <code>State::event</code> is called, call this.","Before <code>State::event</code> is called, call this.","Called before a normal exit, like window close","Called before a normal exit, like window close","","","","","","","","","Returns a boxed object from a boxed trait object if the …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","Draw","","","","","Specifies what to draw before draw()","Specifies what to draw before draw()","","","","When DrawBaselayer::DefaultDraw is called, run this.","When DrawBaselayer::DefaultDraw is called, run this.","Will be called if <code>State::event</code> or <code>State::draw</code> panics.","Will be called if <code>State::event</code> or <code>State::draw</code> panics.","Respond to a UI event, such as input or time passing.","","","If true, then the top-most state on the stack needs to be …","If widgetry determines the video card is low on memory, …","If widgetry determines the video card is low on memory, …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns true if the trait object wraps an object of type …","","Called when something on the panel has been clicked. Since …","Called when something on the panel has been clicked.","Called when something on the panel has been clicked.","Before this state is popped or replaced, call this.","Before this state is popped or replaced, call this.","Called when the mouse has moved.","Called when the mouse has moved.","If a panel <code>on_click</code> event didn’t occur and <code>panel_changed</code> …","If a panel <code>on_click</code> event didn’t occur and <code>panel_changed</code> …","","Called when something on the panel has changed. If a …","Called when something on the panel has changed. If a …","Respond to <code>Transition::Recreate</code> by assuming state in the …","Respond to <code>Transition::Recreate</code> by assuming state in the …","","A stack of states","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Geometry that’s been uploaded to the GPU once and can be …","","","Uploads a sprite sheet of textures to the GPU so they can …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This has no effect when drawn.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Some map-space elements are drawn differently when …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>color</code> parameter is multiplied by any color baked into …","","","","","","","","","","","","","","","","","","","","","Once uploaded, textures are addressed by their id, …","","","","Note this is incorrect for <code>Color::CLEAR</code>. Can’t fix in a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Multiply the color’s current alpha by the <code>factor</code>, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draw a tooltip where the mouse is","","Draw a tooltip somewhere on the screen","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Note: When double clicking, there will be two …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Allow panning and zooming on the canvas. Exactly which …","","","","","","","","","","","This widget (in some panel) exclusively owns focus. Don’…","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Checks if an extra font has previously been loaded with …","","","","Loads an extra font, used only for automatic fallback of …","","","","","","While handling an event, this widget (in some panel) this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Change every instance of the first color to the second","Change all colors to the specified value. For this to be …","Change the alpha value of all colors to this value.","A mutable builder for a group of colored tessellated …","Convert all colors to greyscale.","Don’t do anything","A way to transform all colors in a GeomBatch.","Appends all colored polygons from another batch to the …","","","","","","Sets the top-left to 0, 0. Not sure exactly when this …","","Wrap in a Widget for layouting, so this batch can become …","","","","","","Translates the batch to be centered on some point.","","","","","Transforms all colors in a batch.","Returns the colored polygons in this batch, destroying the …","","","Draws the batch, consuming it. Only use this for drawing …","","Applies one Fill to many polygons.","","","Creates a batch of filled polygons.","Returns the argument unchanged.","","Returns the argument unchanged.","","Compute the bounds of all polygons in this batch.","Returns the width and height of all geometry contained in …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Exports the batch to a list of GeoJSON features, labeling …","Wrap in a Widget, so the batch can be drawn as part of a …","True when the batch is empty.","","Returns a batch containing an SVG from a file.","Returns a GeomBatch from the bytes of a utf8 encoded SVG …","Returns a GeomBatch from the bytes of a utf8 encoded SVG …","Equivalent to …","","Creates an empty batch.","Adds a single tessellated polygon, painted according to …","Offset z value to render above/below other polygons. z …","Rotates each polygon in the batch relative to the center …","Rotates each polygon in the batch relative to the center …","Scales the batch by some factor.","Scales the batch so that the width matches something, …","","","Overrides the Z-ordering offset for the batch. Must be in …","Removes the first polygon in the batch.","","","Translates the batch by some offset.","","","","","","","Adds a single polygon to the front of the batch, painted …","Upload the batch of polygons to the GPU, returning …","","","","","","","","Similar to [<code>Widget::row</code>]/[<code>Widget::column</code>], but for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","A left click occurred while not hovering on any object","A hoverable object was clicked","An object is being dragged. The given offsets are relative …","Draw custom objects that scale their size as the canvas is …","Draw <code>Circles</code> and <code>PolyLines</code> in map-space that scale their …","If you don’t ever need to refer to objects in a <code>World</code>, …","The object being hovered on changed from (something …","While hovering on an object with a defined hotkey, that …","Nothing interesting happened","Objects in a <code>World</code> are uniquely identified by this …","","Draws one of two versions of something, based on whether …","","A <code>World</code> manages objects that exist in “map-space”, the …","The result of a <code>World</code> handling an event","","","","","","","","","","","","","","","","Transforms all colors in both batches.","","","Mark that this object will be drawn differently when …","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Adds a single polygon to both batches, painted according …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draw custom objects that scale their size as the canvas is …","","Draw <code>Circles</code> and <code>PolyLines</code> in map-space that scale their …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A left click occurred while not hovering on any object","A hoverable object was clicked","An object is being dragged. The given offsets are relative …","If you don’t ever need to refer to objects in a <code>World</code>, …","The object being hovered on changed from (something …","While hovering on an object with a defined hotkey, that …","Nothing interesting happened","","This provides a builder API for adding objects to a <code>World</code>.","Objects in a <code>World</code> are uniquely identified by this …","A <code>World</code> manages objects that exist in “map-space”, the …","The result of a <code>World</code> handling an event","","Start adding an object to the <code>World</code>. The caller should …","Begin adding an unnamed object to the <code>World</code>.","","","","","","","","","","","","","","","","","","","","","Creates an empty <code>World</code>, whose objects can exist in the …","Finalize the object, adding it to the <code>World</code>.","","Calculate the object currently underneath the cursor. This …","Mark the object as clickable. <code>WorldOutcome::ClickedObject</code> …","","","","","","","Delete an object. Not idempotent – this will panic if …","Delete an object, with the promise to recreate it with the …","Mark the object as draggable. The user can hover on this …","","","","Draw objects in the world that’re currently visible.","Specifies how to draw this object normally (while not …","Draw the object by coloring its hitbox","Draw the object by coloring its hitbox, only when …","","","Draw the object in a hovered state by transforming the …","Specifies how to draw the object while the cursor is …","Draw something underneath all objects. This is useful for …","Like <code>draw_master_batch</code>, but for already-built objects.","","","","Indicate that an object doesn’t need to be drawn …","","","Let objects in the world respond to something happening.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","If an object is currently being hovered on, return its …","Returns the object currently hovered on.","Forcibly reset the hovering state to empty. This is a …","","Specifies the geometry of the object. Required.","Specifies the geometry of the object as a multipolygon.","","","While the user hovers over this object, they can press a …","Draw the object in a hovered state by changing the alpha …","Draw the object in a hovered state by coloring its hitbox. …","Draw the object in a hovered state by adding an outline to …","","","After adding all objects to a <code>World</code>, call this to …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Mark that an object is hoverable, but don’t actually …","","","Like delete, but doesn’t crash if the object doesn’t …","If the outcome references some ID, transform it to another …","","","Change an object’s tooltip. Returns true for success, …","","","If a drag event causes the world to be totally rebuilt, …","Mark the object as clickable or not. …","","","Draw a tooltip while hovering over this object.","","","","","","","","","","","","","","","","","","Creates an empty <code>World</code>, whose objects can exist anywhere …","","Provides ordering for overlapping objects. Higher values …","","","","","","","","","","","","","","Customize how widgetry works. Most of these settings can’…","","","","","","","","","","","","","","","","","","","Returns naming hint. Logically consumes the number of …","Log every raw winit event to the DEBUG level.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Sets the text that’ll appear during long …","","Specify the title of the window to open.","When calling <code>Widget::draw_svg</code>, <code>ButtonBuilder::image_path</code>, …","","If the screen width using the monitor’s detected scale …","","","Override the initial HiDPI scale factor from whatever …","","","","","","","","","Sets the window icon. This should be a 32x32 image.","","","ScreenDims is in units of logical pixels, as opposed to …","ScreenPt is in units of logical pixels, as opposed to …","ScreenRectangle is in units of logical pixels, as opposed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","title: name of previous screen, which you’ll return to","An “X” button","An “X” button to close the current state. Bound to the …","","A right facing caret, like “&gt;”, suitable for paging to …","","","","","","A left facing caret, like “&lt;”, suitable for paging to …","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Note this usually removes color from the icon. Use …","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get all entries, filtered and sorted according to the …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Render a table with the specified headers and rows. Each …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Render the text, without any autocropping. You can pass in …","Render the text, autocropping blank space out of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Store a cached key/value pair, only recalculating when the …","Choose something from a menu, then feed the answer to a …","","","","Loads a JSON, bincoded, or raw file, then deserializes it","","Draw freehand polygons","Draw freehand PolyLine","Display a message dialog.","Prompt for arbitrary text input, then feed the answer to a …","Use this with FileLoader to just read raw bytes without …","Utilities for reflecting the current map and viewport in …","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","Get the current key.","","","","Loading large resources requires different strategies on …","","","","","","","","","","","","","","","","","","","","","","","","<code>update</code> is preferred, but sometimes <code>produce_value</code> needs to …","Only works on native","","Clears the current pair and returns it.","","","","Update the value if the key has changed.","","Get the current value.","Get the current value, mutably.","","Choose something from a menu, then feed the answer to a …","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Draw freehand polygons","Draw freehand PolyLine","","","","","","","","","","","When this returns a polygon, the interaction is finished","When this returns a polyline, the interaction is finished","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Use this with FileLoader to just read raw bytes without …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Loads a JSON, bincoded, or raw file, then deserializes it","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Display a message dialog.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","Prompt for arbitrary text input, then feed the answer to a …","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Take a screenshot of the entire canvas, tiling it based on …","Utilities for reflecting the current map and viewport in …","","","","","Parse an OSM-style <code>zoom/lat/lon</code> string …","","","Returns the argument unchanged.","Get an OSM-style <code>zoom/lat/lon</code> string …","Calls <code>U::from(self)</code>.","","","","","Parse an OSM-style <code>zoom/lat/lon</code> string …","","","","","Modify the current URL to set –cam to an OSM-style …","Modify the current URL to change the first free parameter …","Modify the current URL to change the first named parameter …","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","A dropdown, checkbox, spinner, etc changed values. The …","An action was done, with custom data. The caller must cast …","When an action happens through a button-like widget, what …","An action was done","","","","","On a DragDrop widget, a member was clicked on and …","","Some named widget currently holds focus","","","","Nothing happened","The result of a Panel handling an event","","","","","Create a new widget by implementing this trait. You can …","","","","","","This doesn’t count against the entire container","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If a new Panel is being created to replace an older one, …","If a new Panel is being created to replace an older one, …","","","","","","","","","Creates a column with the specified widgets. Every member …","","","Things like padding don’t work on many widgets, so just …","","","","","Creates a column with the specified widgets. No margins or …","Creates a row with the specified widgets. No margins or …","","","","Returns a boxed object from a boxed trait object if the …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","","Draw the widget. Be sure to draw relative to the top-left …","","","","","","Creates a column with the specified widgets, with a <code>spacing</code>…","Creates a row with the specified widgets, with a <code>spacing</code> …","Your chance to react to an event. Any side effects outside …","","","","","","","This one is really weird. percent_width should be LESS …","Like flex_wrap, but doesn’t horizontally space out …","","","Only for rows/columns. Used to force table columns to line …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","What width and height does the widget occupy? If this …","","Needed for force_width.","If the argument is true, don’t actually create this …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns true if the trait object wraps an object of type …","","","","","","","","","","","","","","","","","","","This widget produced an Outcome, and event handling should …","Callers have to adjust padding too, probably","","","","","","","","","","","","This widget changed dimensions, so recalculate layout.","Restore state from the previous version of this widget, …","Restore state from the previous version of this widget, …","","","Creates a row with the specified widgets. Every member …","","","Your widget’s top left corner should be here. Handle …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","When a button is clicked, <code>Outcome::Clicked</code> with this …","","","","","","","","","","Set a background color for the button based on the button…","","","","","","","","","","Build a button.","Shorthand method to build a default widget whose <code>action</code> is …","Shorthand method to build a Button wrapped in a Widget","","","","","","","","Set independent rounding for each of the button’s corners","","Set a pre-rendered GeomBatch to use for the button instead …","","","","","","","","The button cannot be clicked and will be styled as …","Set a tooltip <code>Text</code> to appear when hovering over the …","","","","","","","","","","","Set the font used by the button’s label.","","Set the size of the font of the button’s label.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the button’s text label, if defined","","","The button’s items will be rendered in a horizontal row","Set a hotkey for the button","","","","","","","Set the image for the button. If not set, the button will …","Set a background color for the image, other than the …","Set the image for the button. If not set, the button will …","Rewrite the color of the button’s image.","If a custom <code>image_dims</code> was set, control how the image …","Set independent rounding for each of the button’s image…","Scale the bounds containing the image. If <code>image_dims</code> are …","Display the button’s image before the button’s label.","Set padding for the image","Set the image for the button. If not set, the button will …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Set the color of the button’s label.","Display the button’s label before the button’s image.","Assign a pre-styled <code>Text</code> instance if your button need …","Set the text of the button’s label.","Set the text of the button’s label. The text will be …","Like <code>disabled_tooltip</code>, but the tooltip may not exist.","","","If a <code>tooltip</code> is not specified, a default tooltip will be …","Set an outline for the button based on the button’s …","","","","Extra spacing around a button’s items (label and/or …","","Extra spacing around a button’s items (label and/or …","Extra spacing around a button’s items (label and/or …","Extra spacing around a button’s items (label and/or …","Extra spacing around a button’s items (label and/or …","","","Spacing between the image and text of a button. Has no …","","","","","","","","","Set a non-default tooltip <code>Text</code> to appear when hovering …","","","","","","","","","","","","","","","","The button’s items will be rendered in a vertical column","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","If a card is currently being dragged, return its original …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","This widget emits several events.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","Doesn’t do anything by itself, just used for widgetsing. …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Creates a square filler, always some percentage of the …","","","","","","","","","","UTF-8 encoded bytes of an SVG","Previously rendered graphics, in the form of a <code>GeomBatch</code>, …","A stylable UI component builder which presents vector …","The visual","Path to an SVG file","","","","","Set a background color for the image. Has no effect unless …","","","","","","Render the <code>Image</code> and any styling (padding, background, …","","","","","Rewrite the color of the image.","","If a custom <code>dims</code> was set, control how the image should be …","","Set independent rounding for each of the image’s …","","","Scale the bounds containing the image. If <code>dims</code> are not …","","An <code>Image</code> with no renderable content. Useful for starting a …","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>Image</code> from a <code>GeomBatch</code>.","Create a new SVG <code>Image</code> from bytes.","Create an SVG <code>Image</code>, read from <code>filename</code>, which is colored …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Process <code>self</code> into a <code>GeomBatch</code>.","Create a new <code>Image</code> based on <code>self</code>, but overriding with any …","Set padding for the image. Has no effect unless custom <code>dims</code>…","","Padding below the image. Has no effect unless custom <code>dims</code> …","Padding to the left of the image. Has no effect unless …","Padding to the right of the image. Has no effect unless …","Padding above the image. Has no effect unless custom <code>dims</code> …","Set a new source for the <code>Image</code>’s data.","","Set the GeomBatch for the button.","Set the bytes for the image.","Set the path to an SVG file for the image.","","","Add a tooltip to appear when hovering over the image.","","","","","","","","The image’s intrinsic colors will be used, it will not …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","<code>batch</code>: the <code>GeomBatch</code> to draw <code>tooltips</code>: (hitbox, text, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","<code>label</code> is used to name the actual LinePlot widget. The …","Programmatically show a tooltip at the given x/y.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consumes the autocomplete widget. It’s fine if the panel …","","","","","","","","","","","","","","","","Grab a stashed value and clone it.","","","","","","","","","","","","","Returns an empty panel. <code>event</code> and <code>draw</code> will have no effect.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","When a panel is built, a fake, “no-op” mouseover event …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","All margins/padding/etc from the previous widget are …","","","","","","","","","","","","Grab a stashed value, with the ability to pass it around …","Swap the inner content of a <code>container</code> widget with …","Removes a widget from the panel. Does not recalculate …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An f64 rounded to 4 decimal places. Useful with Spinners, …","","","","","","","","","","","","","","","","","","","","","","","","","","A spinner for f64s should prefer using this, which will …","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a spinner using the <code>SpinnerValue</code>’s default …","Creates a spinner using a custom method for rendering the …","An invisible widget that stores some arbitrary data on the …","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","Render a table with the specified headers and rows. Each …","","","","","","","","","","","","","","","","","","","","","","","","","","","A widget containing the tab bar and a content pane with …","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Add a new tab.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","<code>autofocus</code> means the text box always has focus; it’ll …","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[77,199,19,70,20,0,19,19,70,70,70,70,45,45,0,0,183,19,0,0,0,69,70,99,69,92,92,92,153,0,12,153,0,153,19,0,76,76,19,0,12,0,0,152,0,39,206,19,0,9,39,9,19,19,0,153,0,0,0,19,0,19,19,19,0,0,189,189,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,0,153,0,152,19,74,0,183,0,0,19,98,0,9,19,0,0,74,19,19,12,12,0,83,83,19,20,206,69,99,19,19,19,19,69,83,83,19,0,0,0,76,19,92,189,0,19,12,83,83,12,0,19,83,92,20,153,19,19,19,19,19,19,19,19,19,19,19,0,0,45,45,45,45,19,74,0,0,0,183,69,70,0,0,12,0,39,12,19,19,12,12,0,69,19,19,19,69,83,83,0,19,10,10,10,0,74,0,0,0,19,0,0,0,0,19,19,0,19,0,0,0,0,0,0,19,19,0,0,0,0,0,0,76,0,70,99,70,0,19,19,83,0,0,19,98,0,19,0,0,0,0,83,83,83,19,19,19,14,4,4,202,97,0,4,9,10,4,9,10,0,80,27,27,43,204,171,97,14,0,0,0,207,97,8,124,8,81,166,124,124,4,9,10,4,9,10,122,193,205,49,49,49,49,49,49,49,49,49,26,33,33,33,150,0,11,7,7,72,27,171,162,187,162,26,9,10,9,10,186,0,178,166,26,166,26,123,166,33,200,187,162,191,193,33,204,4,10,123,167,171,174,184,186,187,195,191,200,204,166,179,26,188,26,188,123,179,123,200,33,33,191,34,154,167,171,174,184,186,195,191,200,0,193,49,27,72,52,205,0,34,154,73,73,0,7,4,4,124,3,124,49,179,9,10,7,3,4,4,9,10,14,0,154,52,72,204,18,200,26,188,4,123,0,184,123,186,184,49,202,8,188,0,11,80,0,7,4,9,10,4,9,10,4,9,10,4,9,10,72,123,123,4,33,72,171,178,191,200,204,4,8,0,73,122,150,204,78,81,43,27,49,200,33,0,167,186,179,186,179,162,72,191,4,11,4,7,11,11,52,162,80,40,205,13,200,124,3,204,123,166,49,11,7,49,178,14,27,8,13,200,27,182,122,0,0,80,27,0,11,26,26,49,49,154,33,3,166,193,97,123,123,150,171,200,78,4,4,0,11,7,191,0,0,202,162,0,3,49,49,49,49,49,207,9,10,0,4,4,123,166,184,122,167,171,174,184,186,187,195,191,200,204,26,188,72,4,9,10,4,9,10,4,9,10,3,11,186,200,7,201,26,188,52,52,8,0,18,33,33,27,27,33,4,30,61,61,30,61,61,208,209,210,211,212,213,214,215,216,215,217,218,219,220,221,221,222,223,224,225,225,226,226,227,228,229,230,231,232,233,234,233,233,235,236,237,238,239,240,238,241,242,243,244,245,246,247,247,247,248,249,250,0,12,12,39,39,0,12,12,12,12,12,39,12,12,12,0,0,0,0,0,37,39,12,38,37,39,12,38,36,36,36,36,37,39,12,38,37,39,12,38,34,34,34,34,34,37,40,40,38,34,34,40,40,38,36,36,36,36,34,37,38,37,36,36,37,39,12,38,38,37,39,12,38,37,39,12,38,39,37,39,12,38,34,40,40,40,40,34,34,40,40,40,40,38,40,40,34,34,37,37,37,39,12,38,37,39,12,38,37,39,12,38,241,242,243,244,245,246,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,0,0,0,0,0,0,51,56,52,59,60,51,63,56,52,59,60,51,63,56,52,59,60,51,63,56,52,59,60,51,63,0,56,0,56,59,60,56,52,51,51,52,59,60,52,52,56,56,52,59,60,51,63,56,52,51,59,60,56,52,59,60,51,63,56,52,59,60,51,63,56,59,60,63,56,52,59,60,51,63,51,56,59,60,51,63,52,51,56,51,56,51,51,51,51,0,63,63,63,56,63,51,56,56,52,59,60,51,63,56,52,59,60,51,63,56,52,59,60,51,63,63,63,51,52,52,59,60,51,51,56,51,51,62,0,62,62,62,62,62,62,62,62,62,0,62,62,62,62,62,70,70,70,70,70,0,0,69,70,69,0,0,0,69,69,0,0,69,70,69,69,70,70,0,33,33,72,69,70,33,72,69,70,33,72,69,70,33,72,69,70,33,33,33,72,33,33,33,33,72,69,70,72,69,70,33,33,72,33,33,72,69,70,69,70,33,72,69,70,33,33,33,33,33,33,33,72,33,33,72,69,70,33,72,69,70,72,69,70,33,72,69,70,72,33,33,33,33,33,33,72,33,33,33,33,33,72,69,70,33,72,33,72,33,33,72,69,70,72,33,72,69,70,33,72,69,70,33,72,69,70,33,33,33,33,222,223,248,249,250,77,14,14,77,14,77,77,14,0,76,76,77,0,77,14,0,76,77,14,77,14,14,14,77,77,77,77,77,77,77,0,76,14,14,14,14,14,76,77,78,14,76,77,78,14,14,14,76,77,78,14,76,77,78,14,76,77,78,14,76,77,78,14,14,14,76,77,78,14,14,76,77,78,14,76,76,76,77,78,14,14,14,78,14,76,77,78,14,76,77,78,14,76,77,78,14,76,77,78,14,0,14,78,14,14,76,77,78,78,14,14,14,14,14,14,14,76,78,14,14,76,77,78,0,14,14,76,77,78,14,76,77,78,14,76,77,78,218,219,220,221,221,0,0,0,0,0,0,0,80,11,80,64,11,80,64,11,11,80,80,80,80,80,11,80,64,11,80,64,11,11,11,11,11,11,11,11,64,11,11,11,80,64,11,11,80,11,80,11,80,11,80,64,11,80,64,64,11,80,64,11,11,11,11,64,11,11,80,11,11,11,80,80,11,11,11,11,11,64,11,80,64,11,80,64,11,80,64,11,11,11,80,80,64,80,80,19,20,19,19,19,19,19,19,19,19,19,19,19,19,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,83,83,19,20,19,19,19,19,83,83,19,19,0,19,83,83,0,19,19,83,20,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,83,83,19,19,19,19,19,19,19,19,19,83,19,19,83,83,83,19,19,19,83,19,20,83,19,20,83,19,20,83,19,20,83,19,20,83,19,20,19,20,19,20,83,19,20,19,20,83,19,20,83,19,20,20,83,19,19,20,19,20,0,83,19,20,83,19,20,83,19,20,83,19,20,0,83,20,19,20,19,83,19,20,83,19,20,83,19,20,19,20,83,19,20,211,212,213,214,215,216,215,217,227,228,229,0,74,74,0,74,74,0,7,90,74,7,90,74,7,7,7,90,74,7,90,74,7,90,7,7,74,74,7,7,7,7,74,7,74,7,7,90,74,7,7,7,90,74,7,90,74,74,7,90,74,7,7,90,90,7,7,7,90,74,90,7,7,7,7,90,90,7,90,90,7,7,7,7,7,90,90,74,7,90,74,7,90,74,7,90,74,7,7,247,247,247,92,92,92,0,92,92,0,43,92,43,92,43,92,43,43,43,43,92,43,92,43,43,43,92,43,92,43,43,43,92,43,92,43,43,92,43,43,92,92,0,43,43,43,92,43,92,43,92,43,92,43,43,43,43,43,43,43,43,92,43,43,43,43,43,43,43,43,92,43,43,43,92,43,43,92,43,92,43,92,43,43,238,239,240,238,0,0,99,0,98,99,99,98,97,97,98,99,97,98,99,97,97,97,97,98,99,97,98,99,97,98,99,97,98,99,97,97,98,99,98,99,97,98,99,97,97,97,97,97,98,99,97,98,99,97,98,99,97,98,99,97,97,97,97,97,97,98,99,97,98,99,97,98,99,97,98,99,97,97,0,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,115,117,117,117,0,0,0,117,117,117,0,0,0,0,0,0,102,101,101,102,101,102,101,102,101,102,101,101,102,101,101,101,113,102,101,113,109,102,102,101,101,113,102,101,102,101,101,102,101,109,102,113,108,110,101,113,108,110,109,101,102,101,102,101,102,101,0,102,101,0,102,101,251,252,253,254,252,254,255,255,255,255,111,0,0,0,0,111,0,0,104,106,104,108,111,104,110,106,109,108,111,104,110,106,109,108,111,104,110,106,109,108,111,104,110,106,109,104,106,108,110,0,109,108,109,108,110,108,111,104,110,106,109,108,111,104,110,106,109,108,111,104,110,106,109,111,104,108,111,104,110,106,109,110,109,109,108,110,111,108,104,110,106,109,108,111,104,110,106,109,108,111,104,110,106,109,108,111,104,110,106,109,256,257,256,257,256,257,115,117,117,117,0,117,117,117,0,0,0,0,0,258,113,113,113,114,258,117,115,113,114,258,117,115,113,114,258,117,115,113,114,258,117,115,113,114,113,113,114,114,258,117,115,117,115,113,113,114,114,258,113,113,114,114,114,114,258,114,114,113,113,113,114,258,114,115,115,113,115,113,114,258,117,115,115,113,113,113,115,114,114,114,258,114,114,114,114,113,114,113,113,114,258,117,115,113,114,258,117,115,117,115,113,114,258,117,115,114,114,258,113,117,115,113,113,113,258,113,114,117,115,114,114,258,113,114,258,117,115,113,114,258,117,115,113,114,258,117,115,113,114,114,114,258,251,252,253,254,252,254,255,255,255,255,0,0,0,0,118,118,27,118,27,27,27,27,27,118,27,118,27,118,27,27,118,27,27,118,118,118,118,27,118,27,118,27,118,27,27,27,27,27,27,27,27,0,27,27,118,118,27,118,27,118,27,27,27,27,0,0,0,30,61,18,30,61,18,30,61,18,30,61,18,61,30,61,18,30,61,18,61,18,61,30,18,30,61,18,30,30,61,18,18,18,18,18,18,61,18,30,61,18,30,61,18,30,61,18,30,61,18,30,18,30,18,18,61,61,61,18,18,30,61,18,61,30,61,18,30,30,61,18,30,61,18,30,61,18,61,18,30,61,61,30,61,61,30,18,0,0,0,0,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,49,49,49,49,49,49,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,0,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,0,0,0,0,0,0,0,0,0,0,0,131,131,0,132,130,131,132,130,131,132,130,131,132,130,131,132,130,130,130,130,130,132,130,130,131,132,132,130,130,130,131,132,130,131,132,130,131,132,130,130,130,130,0,130,130,130,132,130,132,130,131,132,130,131,132,130,131,132,259,45,45,0,0,0,0,45,45,45,45,0,0,0,0,81,81,81,81,45,3,81,45,3,81,3,81,207,81,81,3,3,3,3,3,45,3,81,45,3,81,81,45,3,81,45,3,81,81,81,3,45,45,81,45,3,3,3,45,3,81,3,3,45,3,3,81,81,81,81,81,45,45,81,81,81,81,45,3,81,45,3,81,45,3,81,45,3,81,3,81,81,81,3,81,3,3,81,81,81,3,0,81,3,3,3,3,3,3,3,207,45,3,81,81,45,3,81,45,3,81,45,3,81,3,3,81,137,145,0,0,0,0,0,0,0,0,0,0,0,0,0,134,134,136,134,134,135,149,0,134,0,134,134,134,0,0,136,136,141,134,134,134,134,134,0,141,141,0,141,136,136,136,136,134,147,141,0,141,135,141,148,149,147,140,139,139,0,0,141,141,0,134,0,141,134,134,134,134,134,0,134,134,0,0,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,137,0,0,0,260,136,137,260,136,137,136,260,136,137,260,136,137,260,136,137,260,136,137,137,260,260,136,136,136,137,260,136,137,260,136,137,260,136,137,260,136,137,136,136,136,136,136,136,136,260,260,136,137,260,136,137,260,136,137,0,0,139,140,139,140,139,140,139,140,139,140,139,140,139,140,139,140,139,140,139,140,139,140,139,140,140,139,139,139,140,139,140,139,140,145,0,0,0,145,141,145,141,145,141,145,141,141,141,145,141,141,145,141,145,141,145,145,141,141,141,141,0,141,141,141,141,145,141,141,141,145,141,145,141,145,141,0,0,147,147,147,147,147,147,147,147,147,147,147,147,147,146,147,147,147,0,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,0,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,0,0,261,261,261,261,261,0,0,261,261,261,261,261,261,0,261,261,261,261,0,261,261,261,0,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,153,153,0,153,152,0,206,0,153,0,153,152,206,0,153,0,0,0,0,0,0,0,8,8,8,8,8,8,153,206,13,8,262,152,122,153,206,13,8,262,152,122,0,8,8,8,262,153,206,13,8,262,152,122,153,206,13,8,262,152,122,122,0,154,154,8,8,8,8,152,122,152,122,8,0,8,8,0,8,262,8,8,8,152,122,153,154,154,154,154,0,154,8,0,8,122,8,8,8,154,0,8,8,0,8,8,8,8,152,122,8,8,8,153,206,13,8,262,152,152,152,122,122,122,8,154,8,8,8,8,8,0,153,206,13,8,262,152,122,153,206,13,8,262,152,122,262,152,122,153,206,13,8,262,152,122,8,154,122,0,8,122,0,8,8,8,8,8,8,8,0,8,122,13,8,8,13,8,262,8,8,8,8,8,0,0,8,0,8,13,154,154,8,122,8,0,8,154,0,0,0,262,8,0,0,8,8,0,152,122,0,122,153,206,13,8,262,152,122,153,206,13,8,262,152,122,153,206,13,8,262,152,122,122,8,8,122,208,209,210,230,231,232,233,234,233,233,0,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,0,0,0,0,163,163,123,164,165,163,123,164,165,123,123,164,163,123,164,165,163,123,164,165,123,123,123,123,164,165,123,164,165,165,123,123,123,164,123,164,165,123,163,123,123,123,163,123,163,163,163,163,163,123,164,165,123,165,123,165,163,123,164,165,123,163,163,123,123,163,123,123,163,123,164,123,123,123,123,123,123,123,123,123,123,163,123,164,165,163,123,164,165,123,164,165,163,123,164,165,163,123,163,123,164,123,123,123,123,123,123,163,123,123,123,164,123,123,123,123,123,123,123,123,163,123,123,123,123,123,165,165,123,164,165,123,163,123,163,163,123,164,165,163,123,164,165,163,123,164,165,123,0,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,0,0,168,169,168,169,168,169,168,169,168,169,168,169,168,169,168,169,168,169,168,169,168,168,169,169,169,169,168,169,168,169,168,169,168,169,0,0,172,172,172,0,0,171,263,172,171,263,172,171,171,263,172,171,263,172,171,263,171,263,171,171,172,171,171,263,172,171,171,263,171,171,263,172,171,263,172,263,172,171,263,172,171,171,171,172,171,171,171,263,171,171,171,171,171,171,263,172,171,263,172,171,263,172,263,264,264,265,266,264,264,265,266,0,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,0,173,173,173,173,173,173,173,173,0,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,0,174,174,174,174,0,181,181,0,182,181,182,181,182,181,182,181,181,182,182,182,182,181,182,182,181,182,181,182,181,182,181,182,182,182,182,181,182,181,182,181,267,268,268,183,183,0,0,183,166,183,166,183,166,166,166,183,166,183,166,166,183,166,183,166,166,166,166,166,166,166,166,166,166,166,183,166,183,166,166,166,166,183,166,183,166,183,166,183,166,183,166,166,166,166,166,166,166,166,166,166,166,166,166,183,166,166,166,183,166,183,166,183,166,224,225,225,226,226,0,0,0,161,184,185,161,184,185,185,161,184,185,161,184,185,161,184,185,161,184,185,161,184,161,184,185,161,184,185,161,184,185,184,184,161,184,185,161,184,185,185,161,184,185,184,185,161,184,185,184,161,184,185,161,184,185,161,184,185,161,184,185,161,0,0,186,269,186,269,186,269,186,269,186,186,186,186,269,186,186,269,186,186,269,186,186,269,186,269,186,269,186,186,186,186,186,269,186,186,269,186,269,186,269,186,0,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,189,189,189,0,0,0,26,188,188,26,188,189,26,188,189,26,26,188,189,26,188,189,188,188,26,26,26,26,26,189,189,26,26,26,26,26,188,188,26,188,26,188,26,26,26,26,188,26,26,26,188,189,26,26,26,188,188,188,26,188,189,26,188,189,189,26,188,189,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,189,26,188,26,188,189,26,188,189,26,188,189,26,26,26,188,235,236,237,0,193,193,193,193,193,0,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,0,0,0,178,179,178,179,178,179,178,179,178,179,179,179,179,179,179,178,179,176,176,178,179,178,179,178,179,178,179,178,0,179,179,176,178,0,176,176,178,179,178,179,178,179,176,0,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,0,198,198,0,0,0,198,191,191,198,191,198,191,198,191,198,191,191,191,191,191,191,191,191,198,191,191,191,191,198,191,191,198,191,198,198,191,198,191,191,191,198,191,191,191,191,191,191,191,198,191,198,191,198,191,270,271,270,271,272,199,0,0,0,0,199,199,200,199,200,199,200,199,200,199,200,200,199,199,200,200,200,200,200,200,199,200,200,199,200,199,200,200,200,199,200,199,199,200,199,200,200,200,199,200,200,199,200,200,200,200,199,199,199,199,200,200,199,200,199,200,199,200,200,200,0,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,0,0,0,0,131,131,0,132,273,273,273,273,273,130,130,130,130,273,132,130,273,273,273,130,0,273,273,0,130,130,132,132,273,273,273,259,0,0,202,202,202,202,203,202,203,202,203,202,203,202,203,202,203,202,202,203,203,202,202,202,203,202,203,202,203,202,203,202,202,202,202,203,202,203,202,203,202,203,202,0,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]]],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[4,5],4],0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,0,0,0,0,0,0,0,0,0,0,0,[7,8],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[9,9],[10,10],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[11],[11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[7,12],[[7,13]],0,0,0,0,[[4,14],4],0,0,0,0,0,0,[[9,15],16],[[10,15],16],0,0,[[]],[17,[[17,[4]]]],[[]],[[]],0,0,[[],18],0,0,0,0,0,0,0,0,0,[[[17,[19]]],20],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],0,0,0,[[4,19],4],0,0,0,0,0,0,0,0,0,[19,20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[4,20],4],0,[[[2,[1]]],4],0,0,0,0,0,0,[[7,25,26],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[27,28],29],0,0,0,0,0,0,0,0,0,[30],0,0,0,0,0,0,0,0,0,0,0,[25,[[4,[1]]]],[[[17,[[2,[1]]]]],[[17,[[4,[1]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[7,8],[[]],[[]],0,[[4,[2,[1]]],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[],32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[4,4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[33],[33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[22,[34]]],[[31,[[22,[34]],[22,[34]]]]]],[34,35],[[[24,[34]]],[[31,[[24,[34]],[24,[34]]]]]],[34,35],[11],[[[37,[36]],11]],[11],[11],[[38,11]],[[],39],[[],39],[[],39],[[],39],[38,39],[11],[11],[33],[33],[7,12],[[[37,[36]],7]],[[38,7],12],[[[37,[36]],7,[12,[36]]],5],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[34,5],[[26,[22,[40]]],[[22,[34]]]],[[7,25,26],12],[[7,[22,[41]],26],12],[[7,[22,[41]],26],12],[7],[7],[7],[7],[7,12],[7,12],0,[[7,26],[[35,[12]]]],[[7,26],[[35,[12]]]],[7,[[22,[34]]]],[7,[[22,[34]]]],0,0,[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[],32],[[],32],0,0,0,0,0,0,0,[42,5],0,[[],6],[[],6],[42,42],[42,[[35,[25]]]],0,[[]],[[]],[[42,1,43,44]],[[42,1,43]],[42],0,0,0,[[]],[[42,25],35],[[42,1],[[35,[43]]]],[[]],[[[22,[21]]],[[22,[6,21]]]],[24,[[24,[6]]]],[[42,25],5],[[42,45,46],47],0,[[42,25,[17,[48]]]],[[49,[35,[1]],5,[22,[50]]],42],0,0,0,0,0,[[],31],[[],31],[[],32],0,0,0,0,0,0,0,[[51,5,43],52],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[53,25,25],[[55,[54]]]],[[56,14]],[[53,57,25],[[55,[58]]]],0,[[59,53]],[[60,53]],[[56,47,33]],[[52,11]],[[51,56]],[51,56],[52],[59],[60],0,[7,52],[[56,61,47,33]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[51,47],[53,56],[53,59],[53,60],[[53,[35,[62]]],51],[[[17,[48]],57,57],[[55,[63]]]],0,0,[[56,52,64,51]],[51],[[56,35]],[[51,18,1],55],[[51,65]],[[51,5]],[[51,66]],0,0,0,0,[[56,47,33],35],0,0,0,[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[63,53],55],[[63,53],55],[51],0,0,0,0,[51,67],0,0,[[51,18,47]],[[51,47],18],0,0,[[],6],[[],6],[[]],[[]],[[62,56]],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[24,[[24,[6]]]],[[27,68]],[[],31],[[],31],[[],32],[62,67],[[62,18,47]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[33,18,69,70],30],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[33,71]],[33,71],[33,30],[[33,47]],[72,72],[69,69],[70,70],[[]],[[]],[[]],0,0,[[],[[31,[72]]]],0,0,0,[[69,69],5],[[70,70],5],[[69,15],16],[[70,15],16],[[]],[[]],[[]],[[]],[33,30],[33,[[35,[71]]]],[33,[[35,[30]]]],[33,44],[33,44],[33,44],[33,18],0,[[33,73],[[35,[74]]]],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],0,[33,5],[33,5],[33,5],[33,5],[33,5],0,0,0,[[33,71],30],[[33,61]],[33,47],[33,47],0,[[69,69],5],[[70,70],5],[[18,72],33],[[],72],[[33,30],71],[72,31],0,[33],[[]],[[]],[[]],0,[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[],32],[[],32],0,0,0,[[33,47,30]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[14,75],14],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[14,1],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,14],[76,76],[77,77],[78,78],[[]],[[]],[[]],[[]],[[],[[31,[14]]]],[[14,47],14],[[14,14],5],[[76,76],5],[[77,77],5],[[78,78],5],[[14,15],16],[[14,15],16],[[76,15],16],[[77,15],16],[[78,15],16],[[]],[14,76],[77,76],[[]],[[]],[[]],0,[75,14],[25,14],[[78,71],14],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[14,14],[47,75],[[14,14,47],14],0,[[14,75],14],[[14,14],5],[[76,76],5],[[77,77],5],[[78,78],5],[79,76],0,[[46,46,46],14],[[75,75,75],14],[[46,46,46,75],14],[[75,75,75,75],14],[14,31],[[14,47],14],[[76,71]],0,[[14,47],14],[[]],[[]],[[]],[[]],[47,47],[[],1],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[],32],[[],32],0,0,0,0,0,0,0,0,0,0,0,0,[[80,5,43],52],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[11,42],[11,80],[80,80],[80,42],0,[80,5],[80,[[35,[25]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[11,14]],[11,47],[11],[[11,81]],[[11,14,[2,[82]]]],[[11,81,30]],[[11,61]],[[64,15],16],[[11,71,30,47,[35,[75]]]],[11],[[]],[[]],[[]],[11,[[35,[71]]]],[11,46],[80,47],[11,44],[80,46],0,0,[[]],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[[11,19],5],[11,5],0,[[80,33,49,5],11],[33,64],0,0,0,0,[[11,52]],[[11,30,52]],[80],0,[[11,30],71],0,[[11,1]],[11,49],0,0,[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[],32],[11],0,[[11,43],52],[[80,43],52],[[80,43],52],0,[[80,18]],[80,18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[83,83],[19,19],[20,20],[[]],[[]],[[]],[[19,19],84],[[20,20],84],[19,1],[20,1],[[83,83],5],[[19,19],5],[[20,20],5],[[],5],[[],5],[[83,15],16],[[19,15],16],[[20,15],16],[[]],[[]],[[]],[19,20],[[85,47,86],[[35,[83]]]],[87,[[35,[19]]]],[[],88],[[],88],[19],[20],[[[17,[19]]],20],[[]],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[19,20],[[83,83],5],[[20,20],5],[[19,19],[[35,[84]]]],[[20,20],[[35,[84]]]],[[19,5],[[35,[89]]]],[[]],[[]],[[]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[19,7],3],[[20,7],3],[[],32],[[],32],[[],32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[7,42],[7,80],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[7,5],0,[74,74],[[]],[7],[7],[7],[7,47],[[74,74],5],0,[[74,15],16],0,[[]],[[]],[[]],[7],0,[[]],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[[7,25],5],[[7,19],5],0,0,[[7,25,[17,[48]]]],[[7,[2,[1]],28]],[[7,81],26],0,[[74,74],5],[[80,49,18,1],90],0,[[7,5,91]],[7,5],0,0,[[90,1]],[7,5],[90],[[90,1]],[[7,74]],[[7,49]],[7],[7,49],0,0,0,[[]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[],32],0,[[7,43],52],0,0,0,0,0,0,0,0,0,0,[[43,43]],[[92,14],14],[[],6],[[],6],[[],6],[[],6],[43,43],0,[43,8],[[]],[[]],[[]],[[]],[[43,7],52],[[43,71],43],[43,43],[92,92],[[]],[[]],[[43,92],43],[43,17],[[],43],[[],[[31,[92]]]],[[43,11]],[[92,92],5],[[43,[2,[76]],[17,[[2,[82]]]]]],[[43,15],16],[[92,15],16],[17,43],[[]],[14,92],[[]],0,[43,44],[43,18],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[[43,[35,[93]]],[[17,[94]]]],[[43,7],8],[43,5],0,[[[95,[25]]],43],[[],43],[[],43],[[43,47,71,96],43],[[92,92],5],[[],43],[[43,[2,[76]],[2,[82]]]],[[43,[2,[76]],[2,[82]],47]],[[43,96],43],[[43,96],43],[[43,47],43],[[43,47],43],[[43,47,47],43],[92,31],[[43,47],43],[43],[[]],[[]],[[43,47,47],43],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[43,[2,[76]],[2,[82]]]],[[43,7],52],0,0,0,0,0,0,0,0,0,0,0,0,0,[[97,17]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[97,43],0,[[]],[[]],[[]],[[]],[[]],[[]],[98,98],[99,99],[97,97],[[]],[[]],[[]],[[],97],[[98,98],5],[[99,99],5],[[98,15],16],[[99,15],16],[[97,15],16],[[]],[[]],[[]],[[[17,[43]],98],97],[[97,46],[[35,[43]]]],[[97,46],[[35,[43]]]],[[[17,[43]]],97],[[]],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[[97,43]],[[97,99]],[[97,98]],[[97,[2,[47]]],97],0,[[]],[[]],[[]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[],32],[[[17,[43]]],97],0,[73,[[35,[19]]]],[[],6],[[],6],[[]],[[]],[73],0,0,[[]],[73,35],[73,[[35,[30]]]],[73,5],[[]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[73,5],[[73,19],5],0,[73,5],[73,5],[73,5],[[83,33],73],[73,[[35,[100]]]],[[73,[2,[[35,[20]]]]],5],[[],31],[[],31],[[],32],[73],[73],[73,5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[101,101]],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[101,7],102],[[],101],[101,101],[[]],[[101,92],101],0,[[102,11]],[101,101],0,0,[7,102],[[]],[43,101],[[]],0,[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],0,[[7,43,43],102],0,0,0,[[101,[2,[76]],103],101],0,0,0,0,[[]],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[104,71,105,14]],[[106,[22,[50]]]],[[104,107,105,14]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[104,108],[[106,109],110],[[],104],[[],106],[47],[[109,47]],[[108,11]],0,[[],108],[[],110],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[[110,11],5],0,[[47,47],109],0,0,[[111,43,47]],0,0,0,0,0,[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[113,[112]],112],[[114,[112]]]],[[[113,[115]]],[[114,[115]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[44,[[113,[112]]]],[[[114,[112]],7]],[[[113,[112]],71],[[35,[112]]]],[[[113,[112]],7],[[35,[112]]]],[[[114,[112]]],[[114,[112]]]],0,0,[[[117,[[0,[116,112]]]]],[[117,[[0,[116,112]]]]]],[115,115],[[]],[[]],[[[113,[112]],112]],[[[113,[112]],112]],[[[114,[112]]],[[114,[112]]]],0,0,0,[[[113,[112]],11]],[[[114,[112]],[2,[101]]],[[114,[112]]]],[[[114,[112]],14],[[114,[112]]]],[[[114,[112]],14],[[114,[112]]]],0,0,[[[114,[112]],92],[[114,[112]]]],[[[114,[112]],[2,[101]]],[[114,[112]]]],[[[113,[112]],7,[2,[101]]]],[[[113,[112]],102]],0,0,0,[[[114,[112]]],[[114,[112]]]],[[115,115],5],[[],5],[[[113,[112]],7],[[117,[112]]]],[[115,15],16],[[]],[[]],[[]],[[]],[[]],[[],88],[[[113,[112]]],[[35,[17]]]],[[[113,[112]]],[[35,[112]]]],[[[113,[112]]]],[115],[[[114,[112]],103],[[114,[112]]]],[[[114,[112]],[17,[103]]],[[114,[112]]]],0,0,[[[114,[112]],[2,[20]],25],[[114,[112]]]],[[[114,[112]],75],[[114,[112]]]],[[[114,[112]],14],[[114,[112]]]],[[[114,[112]],14,105],[[114,[112]]]],0,0,[[[113,[112]],7]],[[]],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[[[114,[112]]],[[114,[112]]]],0,0,[[[113,[112]],112]],[[[117,[112]],50],[[35,[[117,[112]]]]]],[[115,115],5],0,[[[113,[112]],[35,[81]]],5],0,0,[[[113,[112]],113]],[[[114,[112]],5],[[114,[112]]]],[[]],[[]],[[[114,[112]],81],[[114,[112]]]],0,0,[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[],32],[[],32],[[],32],[[],[[113,[112]]]],0,[[[114,[112]],46],[[114,[112]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[27,5],27],0,[[27,1],27],0,[[]],[[]],[[]],[[]],0,[[27,72],27],0,[[[118,[36]],80,5],[[35,[1]]]],[27,27],0,[[[118,[36]],83,80]],0,[[[118,[36]]]],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[[27,81],27],0,[25,27],[[27,[22,[50]]],27],0,[[27,47],27],0,[[27,28],29],[[27,47],27],0,0,[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[27,1],27],0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[61,30],[30,30],[61,61],[18,18],[[]],[[]],[[]],[[61,30],5],[[],[[31,[18]]]],[61,18],[[30,30],5],[[18,18],5],[[30,15],16],[[61,15],16],[[18,15],16],[[]],[[[119,[47]]],30],[[]],[120,18],[[[121,[47]]],18],[47,18],[[],18],[44,18],[[]],[61,47],0,[[]],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[[30,30],5],[[18,18],5],[[47,47],30],[[47,47],18],[[18,122],18],[[61,47,47],30],[[],61],[[61,30],35],[18,31],[47,18],[[]],[[]],[[]],[61,103],[30,71],[[30,18],61],[[18,30,33],30],[[30,47,47],30],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[],32],[61,47],0,0,0,0,0,0,0,[[],30],[[],18],0,0,0,0,0,[[],6],[[],6],[[]],[[]],[[49,25],123],[49,123],[[49,7],8],0,[49,123],0,0,0,0,[[49,25,25],123],[49,123],0,0,0,0,0,[49,49],[[]],[[],49],0,0,[[]],[25,14],0,[[]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[[],49],0,0,0,0,0,0,0,0,0,0,[[]],[[],31],[[],31],[[],32],0,[[124,123],123],[[],6],[[],6],0,0,0,[[]],[[]],[124,123],[124,124],[[]],[124,123],0,0,[[]],[[124,25],123],[123,123],[124,123],[[124,25,[2,[1]]],123],[[]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],0,[[],124],[[],124],[[],124],[[],124],[[],124],[[],124],[[124,25],123],[[],124],[[],124],[[],124],[[],124],[[124,[2,[1]]],123],[[]],[[],31],[[],31],[[],32],0,0,[[43,125,75],[[31,[44,1]]]],[[126,47,125],76],[127,128],[[129,75,125]],[[80,25]],[[80,25],55],[[],55],0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[130,25],5],[[130,25,[22,[50]],131]],0,0,0,[[],132],0,[[]],[[]],[[]],0,[130,17],0,[[]],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],0,[[[2,[1]],17,[22,[50]],25,132],130],[[130,26]],[[130,7],8],[[7,[17,[8]],17,47],8],[[130,7,26]],0,0,0,[[130,25,[22,[50]]]],0,[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[],32],0,0,0,0,0,0,[[[2,[1]]],3],0,0,0,0,0,0,0,0,[[81,[17,[3]]]],[[81,[2,[3]]]],[[81,3]],[[81,[17,[3]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[3,7],8],[[81,7],8],[7,8],[[81,14],81],0,[3,3],[3,3],[3,3],[3,3],[3,3],[[]],[[]],[[]],[[]],[[]],[[]],[[81,14],81],[45,45],[3,3],[81,81],[[]],[[]],[[]],[[81,14],81],[[81,42],18],[3,3],[[45,45],5],[[],5],[[81,81]],[45,25],[[3,14],3],0,[[3,49],14],[[45,15],16],[[3,15],16],[[81,15],16],[[3,45],3],0,[[]],[[[95,[25]]],3],[[]],[[]],[3,81],[[[95,[25]]],81],[[[17,[3]]],81],[[[17,[[2,[3]]]]],81],[[],88],[45],[81,1],[[81,14]],[[81,42,75],43],[[81,47,42],81],[[]],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[[3,7],8],[[81,7],8],[81,5],0,[[3,[35,[14]]],3],[[],81],0,[[3,14],3],[81],[81,43],[81,43],[[3,107,47],43],[[[17,[3]],75,42],43],[81,47],[3,3],[[3,46],3],0,[3,3],[3,3],[3,3],0,[7,8],[[]],[[]],[[]],[[7,[2,[[35,[20]]]],25],81],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[],32],[3,3],0,[[81,7,46],81],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],0,[[]],[[]],0,0,0,[[[134,[[0,[133,116]]]]]],0,0,[[],[[134,[[0,[133,116]]]]]],[[]],[[],[[55,[1]]]],[11],0,0,0,[[]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[[[134,[[0,[133,116]]]]],[[35,[[0,[133,116]]]]]],0,0,0,0,0,0,0,0,0,[[],[[134,[[0,[133,116]]]]]],0,0,[[[95,[25]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[134,[[0,[133,116]]]],[0,[133,116]]]],[1],0,[[[134,[[0,[133,116]]]]],35],[[],31],[[],31],[[],32],[[[134,[[0,[133,116]]]],[35,[[0,[133,116]]]],91]],0,[[[134,[[0,[133,116]]]]],35],[[[134,[[0,[133,116]]]]],35],0,0,[[],6],[[],6],[[]],[[]],0,[[135,11]],[135,39],[[135,7],12],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[24,[[24,[6]]]],[[7,[2,[1]],[17,[4]],[22,[28]]],[[22,[34]]]],0,[[],31],[[],31],[[],32],0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[[]],[[]],[[]],[[]],[[]],[[]],[[7,17],8],[[136,47],[[35,[14]]]],[[137,47],14],[[]],[[]],[[]],[138,137],[[7,137,[17,[[2,[1]]]]],8],[[7,137,[17,[[2,[1]]]],47],8],0,[[136,47,47],136],0,[[137,47]],[[]],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],0,[[136,7,[17,[[2,[1]]]]],8],0,0,0,[[14,14,14],136],[[136,47,47],136],[[7,14,[95,[25]]],8],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[],32],0,0,[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[139,11]],[[140,11]],[[139,7],[[35,[103]]]],[[140,7],[[35,[107]]]],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[[],139],[[],140],0,0,0,[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[141,11]],[[141,7],12],[[]],[[]],0,[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],0,0,0,0,[[7,[143,[[22,[142]]]],[144,[1]],[144,[1]],25,[22,[28]]],[[22,[34]]]],0,0,0,[[1,68],[[55,[145]]]],0,0,0,[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],0,0,[[],6],[[],6],[[]],[[]],[[[147,[146]],11]],[[[147,[146]],7],12],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[24,[[24,[6]]]],[[7,1,[22,[28]]],[[22,[34]]]],0,0,[[1,68],55],[[],31],[[],31],[[],32],0,[[],6],[[],6],[[]],[[]],[[148,11]],[148,39],[[148,7],12],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[24,[[24,[6]]]],[[7,25,[17,[[95,[25]]]]],[[22,[34]]]],[[7,81],[[22,[34]]]],0,[[],31],[[],31],[[],32],0,[[],6],[[],6],[[]],[[]],0,[[149,11]],[149,39],[[149,7],12],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[24,[[24,[6]]]],[[7,25,1,[22,[28]]],[[22,[34]]]],0,[[],31],[[],31],[[],32],[[118,25,80,47,18],55],0,[[],6],[[],6],[[]],[[]],[[7,[35,[1]],93],5],[[1,25],1],[[1,25,25],1],[[]],[[7,93],1],[[]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[[[22,[50]]]],[[25,93],35],[[],31],[[],31],[[],32],[[[22,[50]]],55],[[7,93]],[1],[[1,1]],0,[[],6],[[],6],[[]],[[]],0,[[150,7],5],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],0,[[7,71,[35,[47]]],150],0,[[],31],[[],31],[[],32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[8,47,47],8],[8,8],[8,8],[8,8],[8,8],[[8,151,17,47,47,7,5,5]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[[8,14],8],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],5],[[],5],[8,8],[8,8],[8,8],[8,8],[152,152],[122,122],[[]],[[]],[[[17,[8]]],8],0,[[8,43]],[8,8],0,[[8,[2,[152]]],8],0,[8,[[35,[1]]]],[[[17,[8]]],8],[[[17,[8]]],8],[[],152],[[],122],[153,1],[[[22,[154]]],[[31,[[22,[154]],[22,[154]]]]]],[154,35],[[[24,[154]]],[[31,[[24,[154]],[24,[154]]]]]],[154,35],0,[11],[[8,11]],0,[[7,[95,[25]],[0,[133,116,155]],[17,[[4,[[0,[133,116,155]]]]]]],8],[[122,122],5],[8,8],[[46,[17,[8]]],8],[[46,[17,[8]]],8],[[7,13]],0,[8,8],[8,8],0,[[8,25],[[35,[8]]]],[[8,25],[[35,[8]]]],[[8,7,156],8],[[8,7,156],8],[[152,15],16],[[122,15],16],[[8,47],8],[[8,47],8],[[8,7,156],8],[[]],[[]],[[]],[[]],[[]],[157,152],[47,152],[[]],[46,122],[47,122],[[]],[[8,158]],[[],18],[[8,159,151,17]],[8,47],[[8,5],8],[[7,47],8],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[[8,7,[35,[47]]]],[154,5],[[],5],0,0,0,0,[[8,[2,[122]]],8],[[8,46],8],[[8,46],8],[[8,46],8],[[8,46],8],[[8,46],8],[[8,46],8],0,[[8,[2,[1]]],8],[[122,122],5],[[],13],[[[22,[154]]],8],[[],8],0,[[8,160],8],0,[[8,[2,[122]]],8],[[8,46],8],[[8,46],8],[[8,46],8],[[8,46],8],0,0,[[7,25],8],0,0,0,[[7,154]],[[7,154]],[[8,7,26]],0,[[[17,[8]]],8],0,[[8,7],8],[30],0,0,0,0,[[8,7],8],0,0,[[8,25],[[35,[8]]]],[8,161],0,[[]],[[]],0,0,[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[47,122],[[7,47],8],0,[[],122],0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[]],[[]],0,0,0,[[[162,[116]],11]],[[[162,[116]],7,13]],[[]],[[[162,[116]]],18],[[]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],0,[[7,17,46],8],0,[[[162,[116]],7]],[[[162,[116]],30]],[[[162,[116]]],[[35,[[17,[116]]]]]],0,[[],31],[[],31],[[],32],0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[123,7,9],43],[[123,14,9],123],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[123,7,25],163],[[123,7],8],[[123,7,[95,[25]]],8],[123,123],[164,164],[165,165],[[]],[[]],[[]],0,[[123,[2,[152]]],123],0,[[123,43,9],123],0,[[],123],[[],164],[[],165],0,0,0,[[123,5],123],[[123,[2,[81]]],123],0,0,[[163,11]],0,0,0,[[163,7,13]],[[123,15],16],[[164,15],16],[[165,15],16],[[123,45],123],0,[[123,46],123],0,[[]],[[]],[[]],[[]],[123,[[35,[1]]]],[163,18],0,[123,123],[[123,[2,[[35,[20]]]]],123],0,0,0,0,[[123,166],123],0,[[123,43,44],123],[[123,14,9],123],[123,123],[[123,[2,[92]],9],123],[[123,10],123],[[123,[2,[152]]],123],[[123,[2,[18]]],123],[123,123],[[123,[2,[122]]],123],[[123,25],123],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],0,0,[163,5],0,0,[[123,14,9],123],[123,123],[[123,81,9],123],[[123,[2,[1]]],123],[[123,[2,[1]]],123],[[123,[35,[[2,[81]]]]],123],[[7,43,43,43,[35,[20]],25,[35,[81]],103,5,[35,[81]]],163],[[],123],[123,123],[[123,160,9],123],0,[[123,14,9],123],[[123,124],123],[[123,[2,[122]]],123],0,[[123,47],123],[[123,47],123],[[123,47],123],[[123,47],123],[[163,30]],0,[[123,47],123],0,[[123,9],164],[[123,9],164],0,0,[[]],[[]],[[]],[[123,[2,[81]]],123],0,0,0,[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[],32],[[],32],[123,123],0,[[],6],[[],6],[[]],[[]],0,[[167,11]],0,[[167,7,13]],[[]],[167,18],[[]],[[[22,[21]]],[[22,[6,21]]]],[24,[[24,[6]]]],0,[[7,[95,[25]],[95,[25]],17],8],[[167,30]],0,[[],31],[[],31],[[],32],0,0,[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[168,11]],[[169,11]],[[168,7,13]],[[169,7,13]],[[]],[[]],[168,18],[169,18],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],0,0,[[5,[17,[8]]],169],[[168,30]],[[169,30]],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[[171,[[0,[170,133]]]],11]],0,[[172,172],5],[[[171,[[0,[170,133]]]],7,13]],[[]],[[]],[[]],[[[171,[[0,[170,133]]]]],18],[[[171,[[0,[170,133]]]]],35],0,[[[171,[[0,[170,133]]]]],[[35,[[0,[170,133]]]]]],[[]],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[[[171,[[0,[170,133]]]],7],8],0,[[[171,[[0,[170,133]]]],7],[[35,[46]]]],[[172,172],5],[[7,25,98],[[171,[[0,[170,133]]]]]],[[[171,[[0,[170,133]]]],[0,[170,133]],18,43,43,43]],[[[171,[[0,[170,133]]]],7]],0,[[[171,[[0,[170,133]]]]],[[35,[[0,[170,133]]]]]],[[[171,[[0,[170,133]]]],[35,[[0,[170,133]]]],[35,[[0,[170,133]]]]]],[[[171,[[0,[170,133]]]],30]],0,0,[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[],32],0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[]],[[]],0,[[[173,[116]]],5],0,0,[[[173,[[0,[133,116]]]]],[[0,[133,116]]]],[[[173,[[0,[133,116]]]]],25],[[[173,[116]],11]],[[[173,[116]],7,13]],[[]],[[[173,[116]]],18],[[]],[[[22,[21]]],[[22,[6,21]]]],[24,[[24,[6]]]],0,0,[[7,25,25,5],163],0,[[7,25,[0,[133,116,155]],[17,[[4,[[0,[133,116,155]]]]]],5],[[173,[[0,[133,116,155]]]]]],[[[173,[116]],7]],[[[173,[116]],7,154]],[[[173,[116]],30]],[[],31],[[],31],[[],32],0,[[],6],[[],6],[[]],[[]],0,[[174,11]],0,[[174,7,13]],[[]],[174,18],[[]],[[[22,[21]]],[[22,[6,21]]]],[24,[[24,[6]]]],[[7,[17,[[178,[175,[0,[[176,[[0,[[176,[[0,[[176,[[0,[176,177]]]],[177,[[0,[176,177]]]]]]]],[177,[[0,[[176,[[0,[176,177]]]],[177,[[0,[176,177]]]]]]]]]]]],[177,[[0,[[176,[[0,[[176,[[0,[176,177]]]],[177,[[0,[176,177]]]]]]]],[177,[[0,[[176,[[0,[176,177]]]],[177,[[0,[176,177]]]]]]]]]]]]]]]]]],[179,[175,[0,[[176,[[0,[[176,[[0,[[176,[[0,[176,177]]]],[177,[[0,[176,177]]]]]]]],[177,[[0,[[176,[[0,[176,177]]]],[177,[[0,[176,177]]]]]]]]]]]],[177,[[0,[[176,[[0,[[176,[[0,[176,177]]]],[177,[[0,[176,177]]]]]]]],[177,[[0,[[176,[[0,[176,177]]]],[177,[[0,[176,177]]]]]]]]]]]]]]]],180],8],[[174,30]],[[17,100]],0,[[],31],[[],31],[[],32],0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[181,18],[[182,11]],[[182,7,13]],[18,8],[[]],[[]],[182,18],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],0,[[182,30]],[[7,47],8],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[166,14],166],0,[[]],[[]],[[]],[[]],[[166,7],35],[166,166],[183,183],[[]],[[]],[[166,[2,[92]]],166],0,[[166,10],166],0,[[166,[2,[152]]],166],0,[[],166],[[166,[2,[18]]],166],0,[[],166],[[166,15],16],[[183,15],16],[[]],[[]],[[43,44],166],[[],166],[25,166],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[[166,7],8],[[183,80]],[[166,166],166],[[166,[2,[122]]],166],0,[[166,47],166],[[166,47],166],[[166,47],166],[[166,47],166],[[166,183],166],0,[[166,43,44],166],[166,166],[[166,25],166],[[]],[[]],[[166,[2,[81]]],166],0,[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[166,166],0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[161,11]],[[184,11]],[[185,11]],0,0,[[161,7,13]],[[184,7,13]],[[185,7,13]],[[]],[[]],[[]],[161,18],[184,18],[185,18],0,0,[[]],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[[7,43,17,[22,[50]]],8],[43,8],[[161,30]],[[184,30]],[[185,30]],0,0,0,0,[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[],32],[[7,43],8],0,0,[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],0,0,[[[186,[[176,[[176,[[176,[176]]]]]],[176,[[176,[[176,[176]]]]]]]],11]],0,0,[[[186,[[176,[[176,[[176,[176]]]]]],[176,[[176,[[176,[176]]]]]]]],7,13]],[[]],[[]],[[[186,[[176,[[176,[[176,[176]]]]]],[176,[[176,[[176,[176]]]]]]]]],18],[[[186,[[176,[[176,[[176,[176]]]]]],[176,[[176,[[176,[176]]]]]]]]],17],0,0,[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],0,0,[[7,25,[17,[[178,[[176,[[176,[[176,[176]]]]]],[176,[[176,[[176,[176]]]]]]]]]],[179,[[176,[[176,[[176,[176]]]]]],[176,[[176,[[176,[176]]]]]]]],180],8],[[[186,[[176,[[176,[[176,[176]]]]]],[176,[[176,[[176,[176]]]]]]]],7,25,[176,[[176,[[176,[[176,[176]]]]]]]],[176,[[176,[[176,[[176,[176]]]]]]]]]],[[[186,[[176,[[176,[[176,[176]]]]]],[176,[[176,[[176,[176]]]]]]]],30]],0,0,[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],0,0,[[],6],[[],6],[[]],[[]],[[187,49],81],0,0,0,[[187,11]],[[187,7,13]],[[]],[187,18],[[]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[[7,[17,[4]]],187],[[187,46]],[[187,30]],[187],0,[[],31],[[],31],[[],32],[[7,[17,[4]]],8],0,0,0,0,0,0,[[26,69,70]],[[188,69,70],188],[188,188],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[26,25],[[35,[[17,[116]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[188,7],26],[[188,7],26],0,[[26,25],30],[26,30],[[26,7],5],0,[189,189],[[]],[[26,25],116],[26],0,0,[26,[[35,[1]]]],[[188,189],188],[[188,189],188],0,0,0,0,[[26,11]],[[26,[95,[25]]],[[0,[133,116]]]],[7,26],[[26,7],153],[[188,46,46],188],[[26,25]],[[26,25]],[[]],[[]],[[]],[26,[[158,[1]]]],[[26,25],5],0,0,[188,188],0,[[]],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[26],[[26,25],5],[[26,25],5],[[26,[95,[25]]],[[35,[[0,[133,116]]]]]],[[26,25],35],[[26,25],[[35,[8]]]],[[26,25],[[35,[5]]]],[[26,7,25,190]],[8,188],[26,18],[[26,25],[[0,[133,116]]]],[[26,7,5]],[[26,7,5]],[[26,7]],[[26,25],61],[[26,7,25,8]],[[26,7,26]],[[26,7,26]],[26],[[26,7,1]],0,0,[[26,25,5]],[[26,7]],[[26,25],191],[[26,25],191],[[26,25],190],[[26,25],[[24,[192]]]],[[26,7,25,8]],[[26,25],8],[[26,25]],[[26,25],1],[[]],0,0,[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[],32],[[26,18]],[[26,7],5],0,0,0,0,0,0,[[],6],[[],6],[[]],[[]],0,[7,123],[[[193,[[0,[133,116]]]]],[[0,[133,116]]]],0,[[[193,[[0,[116,133]]]],11]],0,[[[193,[[0,[116,133]]]],7,13]],[[]],[[[193,[[0,[116,133]]]]],18],[[]],[[[22,[21]]],[[22,[6,21]]]],[24,[[24,[6]]]],[[7,25,[0,[133,116,155]],[2,[[35,[20]]]],[17,[[4,[[0,[133,116,155]]]]]]],[[193,[[0,[133,116,155]]]]]],[[[193,[[0,[116,133]]]],30]],0,[[],31],[[],31],[[],32],[[7,25,[0,[133,116,155]],[2,[[35,[20]]]],[17,[[4,[[0,[133,116,155]]]]]]],8],0,0,0,[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],0,[[],[[179,[[0,[194,[176,[[0,[194,[176,[[0,[194,[176,[[0,[194,176]]]]]]]]]]]]]],[0,[194,[176,[[0,[194,[176,[[0,[194,[176,[[0,[194,176]]]]]]]]]]]]]]]]]],0,0,[[],[[179,[[176,[[176,[[176,[176]]]]]],[176,[[176,[[176,[176]]]]]]]]]],0,[[],[[179,[[176,[[176,[[176,[176]]]]]],[176,[[176,[[176,[176]]]]]]]]]],[[]],[[]],[47],[47],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],0,[[7,179],8],0,0,[180,1],0,[[[17,[71]],105],82],[[],47],[[],47],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[]],0,[[],6],[[],6],[[]],[[]],0,[[195,11]],0,[[195,7,13]],[[]],[195,18],[[]],[[[22,[21]]],[[22,[6,21]]]],[24,[[24,[6]]]],[[7,[17,[[178,[175,[0,[[176,[[0,[[176,[[0,[[176,[[0,[176,196,197]]]],196,[197,[47]]]]]],196,[197,[47]]]]]],196,[197,[47]]]]]]]],[179,[175,[0,[[176,[[0,[[176,[[0,[[176,[[0,[176,196,[197,[47]]]]]],196,[197,[47]]]]]],196,[197,[47]]]]]],196,[197,[47]]]]]],180],8],[[195,30]],0,[[],31],[[],31],[[],32],0,0,0,0,0,0,0,[[7,47,47,25],8],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[191,103],0,0,0,[[191,11]],0,[[191,7,13]],[[]],[[]],[191,18],[191,47],[[191,46],46],[[7,47,47,47],8],[198,18],[[191,7],5],[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],0,0,[[7,198,47,[35,[1]]],8],[198,122],[[191,30],47],[[191,7]],[[191,7,47]],[[191,30]],0,0,[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[7,47,47,47],8],0,0,0,0,0,0,0,0,0,0,[[199,199],199],[[199,199]],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[[200,[190]]],5],[[[200,[190]]]],[199,199],[[]],0,0,0,[[[200,[190]],11]],[[[200,[190]],80,49],52],0,[[199,199],5],[[[200,[190]],7,13]],[[7,[2,[1]],47,47],8],[[199,15],16],[[]],[[]],[[[200,[190]]],18],0,[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],0,0,[[[200,[190]],7,190]],[[199,199],5],[[7,1,190,190,[22,[50]]],[[200,[190]]]],0,[[199,199],[[35,[84]]]],0,[[[200,[190]],7,154]],[[[200,[190]],30]],0,[[199,199],199],[[199,199]],[[]],[[],1],0,[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],0,[[7,[2,[1]],190,190],8],[[7,[2,[1]],190,190,[22,[50]]],8],0,[[],6],[[],6],[[]],[[]],[[201,11]],[[201,7,13]],[[]],[201,18],[201,[[24,[192]]]],[[]],[[[22,[21]]],[[22,[6,21]]]],[24,[[24,[6]]]],[25,8],[[201,30]],[[],31],[[],31],[[],32],0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[]],[[]],0,0,0,0,0,[[]],0,0,[[]],[[[22,[21]]],[[22,[6,21]]]],[24,[[24,[6]]]],0,[[7,46,46],8],0,0,[[7,[17,[8]],17,47],8],0,0,0,0,[[],31],[[],31],[[],32],0,0,0,[[202,7,46,26]],[202,1],[202,46],0,[[],6],[[],6],[[],6],[[],6],0,[202,1],[[]],[[]],[[]],[[]],[[203,7,5],8],[[202,7],8],[[202,7],8],0,[[]],[[]],[[202,7,25,26],5],0,[[]],[[]],[[[22,[21]]],[[22,[6,21]]]],[[[22,[21]]],[[22,[6,21]]]],[24,[[24,[6]]]],[24,[[24,[6]]]],[[1,123,8],203],[[[2,[1]]],202],[202,8],[[202,123,8]],[[202,46],1],0,0,[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],0,[[],6],[[],6],0,[[]],[[]],[[204,49],81],0,[[7,[2,[1]],1],8],0,[[204,11]],[[204,7,13]],[[]],[204,18],[204,1],0,[[]],[[[22,[21]]],[[22,[6,21]]]],[23,[[23,[6]]]],[24,[[24,[6]]]],0,0,[[7,1,46,1,5],204],0,[[204,30]],0,[[],31],[[],31],[[],32],[[7,[2,[1]],1,5,46],8],0,[[],6],[[],6],[[]],[[]],0,[[7,25,[2,[[35,[20]]]],5],8],[[7,25,25,25,[2,[[35,[20]]]],5],8],[[7,25,14,5],8],[[7,25,[17,[3]],[2,[[35,[20]]]],5],8],[[205,11]],0,[[205,7,13]],[[]],[205,18],[[]],[[[22,[21]]],[[22,[6,21]]]],[24,[[24,[6]]]],[[5,163,163],8],0,[[205,30]],[[7,25,[2,[[35,[20]]]],5],8],[[],31],[[],31],[[],32]],"p":[[3,"String"],[8,"Into"],[3,"TextSpan"],[3,"Choice"],[15,"bool"],[8,"Any"],[3,"EventCtx"],[3,"Widget"],[4,"ControlState"],[4,"ContentMode"],[3,"GfxCtx"],[4,"Transition"],[3,"WidgetOutput"],[3,"Color"],[3,"Formatter"],[6,"Result"],[3,"Vec"],[3,"ScreenDims"],[4,"Key"],[4,"MultiKey"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[15,"str"],[3,"Panel"],[3,"Settings"],[8,"FnOnce"],[15,"never"],[3,"ScreenPt"],[4,"Result"],[3,"TypeId"],[3,"Canvas"],[8,"State"],[4,"Option"],[8,"SharedAppState"],[3,"App"],[3,"SimpleStateWrapper"],[4,"DrawBaselayer"],[8,"SimpleState"],[8,"CloneableAny"],[3,"Assets"],[3,"GeomBatch"],[3,"Bounds"],[4,"Font"],[15,"usize"],[15,"f64"],[15,"u8"],[3,"Style"],[8,"Fn"],[3,"PrerenderInnards"],[3,"Drawable"],[3,"Context"],[6,"Program"],[6,"Result"],[3,"GfxCtxInnards"],[15,"u32"],[6,"Shader"],[3,"VertexArray"],[3,"Buffer"],[3,"ScreenRectangle"],[3,"WindowAdapter"],[3,"SpriteTexture"],[3,"Uniforms"],[4,"CursorIcon"],[3,"Icon"],[3,"Window"],[3,"Timer"],[4,"HorizontalAlignment"],[4,"VerticalAlignment"],[3,"Pt2D"],[3,"CanvasSettings"],[3,"UserInput"],[4,"UpdateType"],[15,"f32"],[4,"Fill"],[3,"Texture"],[3,"LinearGradient"],[3,"LinearGradient"],[3,"Prerender"],[3,"Text"],[3,"Tessellation"],[4,"Event"],[4,"Ordering"],[4,"WindowEvent"],[6,"Instant"],[3,"KeyboardInput"],[15,"u64"],[15,"char"],[3,"LoadingScreen"],[8,"FnMut"],[4,"RewriteColor"],[3,"GPSBounds"],[3,"Feature"],[8,"AsRef"],[3,"Angle"],[3,"GeomBatchStack"],[4,"Axis"],[4,"Alignment"],[3,"Duration"],[3,"ToggleZoomedBuilder"],[3,"ToggleZoomed"],[3,"Polygon"],[3,"DrawUnzoomedShapesBuilder"],[3,"Distance"],[3,"DrawCustomUnzoomedShapesBuilder"],[3,"PolyLine"],[3,"DrawUnzoomedShapes"],[3,"PerZoom"],[3,"DrawCustomUnzoomedShapes"],[4,"Shape"],[8,"ObjectID"],[3,"World"],[3,"ObjectBuilder"],[3,"DummyID"],[8,"Clone"],[4,"WorldOutcome"],[3,"State"],[3,"LogicalPosition"],[15,"i64"],[3,"LogicalSize"],[3,"EdgeInsets"],[3,"ButtonBuilder"],[3,"ButtonStyle"],[3,"Tree"],[4,"Paint"],[3,"Path"],[3,"Path"],[3,"Stroke"],[3,"Table"],[4,"Col"],[3,"Filter"],[8,"PartialEq"],[3,"Cached"],[3,"ChooseSomething"],[3,"DivergingScale"],[3,"ColorScale"],[3,"Gradient"],[3,"Lasso"],[3,"PolyLineLasso"],[3,"FutureLoader"],[8,"Send"],[3,"Pin"],[3,"Receiver"],[3,"RawBytes"],[8,"Readable"],[3,"FileLoader"],[3,"PopupMsg"],[3,"PromptInput"],[3,"Warper"],[3,"Taffy"],[4,"CornerRounding"],[4,"Outcome"],[8,"WidgetImpl"],[8,"Debug"],[3,"Percent"],[3,"CornerRadii"],[3,"HashSet"],[3,"Node"],[6,"OutlineStyle"],[3,"JustDraw"],[3,"Autocomplete"],[3,"Button"],[3,"ButtonStateStyle"],[3,"Label"],[3,"Image"],[3,"CompareTimes"],[3,"Nothing"],[3,"Container"],[8,"Copy"],[3,"DragDrop"],[4,"State"],[3,"Dropdown"],[3,"FanChart"],[3,"Time"],[8,"Axis"],[8,"HgramValue"],[3,"Series"],[3,"PlotOptions"],[3,"UnitFmt"],[4,"ResizeRule"],[3,"Filler"],[4,"ImageSource"],[3,"DrawWithTooltips"],[3,"DeferDraw"],[3,"LinePlot"],[3,"Menu"],[3,"PanelBuilder"],[4,"PanelDims"],[8,"SpinnerValue"],[3,"Slider"],[3,"RefCell"],[3,"PersistentSplit"],[8,"Default"],[3,"ScatterPlot"],[8,"AddAssign"],[8,"Div"],[4,"Style"],[3,"RoundedF64"],[3,"Spinner"],[3,"Stash"],[3,"TabController"],[3,"Tab"],[3,"TextBox"],[3,"Toggle"],[4,"ClickOutcome"],[8,"TextExt"],[13,"Label"],[13,"Custom"],[13,"CornerRadii"],[13,"KeyPress"],[13,"KeyRelease"],[13,"Update"],[13,"MouseMovedTo"],[13,"MouseWheelScroll"],[13,"WindowResized"],[13,"LeftMouseButtonUp"],[13,"Color"],[13,"LinearGradient"],[13,"Texture"],[13,"ColoredTexture"],[13,"Percent"],[13,"Centered"],[13,"Path"],[13,"GeomBatch"],[13,"Bytes"],[13,"Normal"],[13,"LCtrl"],[13,"Any"],[13,"Clicked"],[13,"ClickCustom"],[13,"Changed"],[13,"DragDropReleased"],[13,"Focused"],[13,"MaxPercent"],[13,"ExactPercent"],[13,"ExactPixels"],[13,"Change"],[13,"ChangeAll"],[13,"ChangeAlpha"],[13,"ModifyState"],[13,"ConsumeState"],[13,"Push"],[13,"Replace"],[13,"Clear"],[13,"Multi"],[13,"ScreenCaptureEverything"],[13,"Percent"],[13,"Above"],[13,"Below"],[13,"ClickedFreeSpace"],[13,"Keypress"],[13,"ClickedObject"],[13,"HoverChanged"],[13,"Dragging"],[13,"Circle"],[13,"Line"],[3,"Object"],[13,"Sortable"],[3,"ColorLegend"],[3,"URLManager"],[3,"LayoutStyle"],[3,"Card"],[13,"Dragging"],[13,"Initial"],[13,"Idle"],[13,"FixedSize"],[13,"RatioWidthSquare"],[3,"Hovering"],[13,"Horizontal"],[13,"Vertical"],[13,"Area"],[3,"Column"]]},\
"widgetry_demo":{"doc":"","t":[3,3,11,11,11,11,11,11,11,11,5,12,11,12,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,5,12,5,5,12,12,12,11,11,11,11,11,11,11,11],"n":["App","Demo","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","build_drag_drop","controls","draw","elapsed","event","from","from","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","main","make_controls","make_tabs","make_timeseries_panel","new","redraw_stopwatch","run","scrollable_canvas","setup_scrollable_canvas","setup_texture_demo","tabs","texture_demo","timeseries_panel","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["widgetry_demo","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,7,5,7,5,7,5,7,5,0,5,5,5,5,7,5,7,5,7,5,7,7,5,0,0,0,5,5,5,0,5,0,0,5,5,5,7,5,7,5,7,5,7,5],"f":[0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[2,3],[[4,[3]]]],0,[[5,6,7]],0,[[5,2,7],[[8,[7]]]],[[]],[[]],[[]],[[]],[[[10,[9]]],[[10,[1,9]]]],[[[10,[9]]],[[10,[1,9]]]],[11,[[11,[1]]]],[12,[[12,[1]]]],[12,[[12,[1]]]],[[]],[[2,13],14],[2,13],[[5,2],14],[2,5],[[5,2]],[15],0,[2,16],[[2,17,17],16],0,0,0,[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[]],[[]]],"p":[[8,"Any"],[3,"EventCtx"],[15,"usize"],[3,"DragDrop"],[3,"Demo"],[3,"GfxCtx"],[3,"App"],[4,"Transition"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"TabController"],[3,"Panel"],[3,"Settings"],[3,"Drawable"],[3,"Texture"],[4,"Result"],[3,"TypeId"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
